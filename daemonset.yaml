
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: twistlock-view
rules:
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["roles", "rolebindings", "clusterroles", "clusterrolebindings"] # Allow Defenders to list RBAC resources
  verbs: ["list"]
---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: twistlock-view-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: twistlock-view
subjects:
- apiGroup:
  kind: ServiceAccount
  name: twistlock-service
  namespace: twistlock
---

---
apiVersion: v1
kind: Secret
metadata:
  name: twistlock-secrets
  namespace: twistlock
type: Opaque
data:
  service-parameter: UzBta0JsL0xMeVFkM3UwY01pRFpmSEpxM2x6Nk9ubHBIY2xPckpGMytxNDhtTEJzZlpybklPb2lqN0dpcHRNSFJhV2RIWFU2WG5hek1DblFPVExaVXc9PQ==
  defender-ca.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIRENDQWdTZ0F3SUJBZ0lRV29DUXdrTThFMW1QUG1ncndHVmZYekFOQmdrcWhraUc5dzBCQVFzRkFEQW8KTVJJd0VBWURWUVFLRXdsVWQybHpkR3h2WTJzeEVqQVFCZ05WQkFNVENWUjNhWE4wYkc5amF6QWVGdzB5TXpBMgpNREV3T0RVME1EQmFGdzB5TmpBMU16RXdPRFUwTURCYU1DZ3hFakFRQmdOVkJBb1RDVlIzYVhOMGJHOWphekVTCk1CQUdBMVVFQXhNSlZIZHBjM1JzYjJOck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXBRaDZsVnJhOG85eUZGSmdZemZia1BvV3BZd04rcDZZZFVCUmZTMU9XR1IxZVpBZnNpdDJmV1dLdXJyUQpVZ3VpR0dUMDZ5Uit1NjduMHpjWkxMSlBWZmtVOHRqZFJpOG80MGFRUXc4V3NHMmY4OGR5M3N1RTNkdHluRXJ1CkJ0MEwyT1R3UVdSdmZWbHZYbEs0a0JqMWkrTXByUWNrdXpJWWxYc2dBNHhqL05iQVFiUy8wK2g2bkVGSFlWc2kKYXo5YkdiNy9JWldLbDFqUSsvNWxXekJKYnpMcjIwQllmZDZ1MUFSbm9jQW1NTzM3a1RUb2I5OWNSNGlTMzhYdQpWWVFvWXhOU1FlUld3clcrUmJyQWJIK3dYdTZ4aWp2Q08zMmhBWTQvOVEzcVR4YzdTREtPc21JQmZSczNXeGkrCnhPcnN4dGw0OXVibGhMOHBhUU9jTjRIMnF3SURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXF3d0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVrQTh0VEVIYTMzMndaL0ovenFkeHRFREwwOEF3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFHY3J4RFdYa0VyVE9jVnJ4ZmJKNWM2T09lMllxVldpTTBQYlJSN0gzbldtCnhTb0d2c2R3Z21rZFFGd2psL0FtKzNPSUxzMlVlcVNjM293TG1HWFZNaXRyZ2lYRWh6Y2FyaG5XdXdJNkZ0RUcKVy9NZlY3a1FiSGNMZ0lXZVF4bWFlQktCZmxiQ1BXMmljY01pM2tFUGQyYkJaby94c2p6UVpxTlgwNUFzSDJDTgpQV1YwNTJldUhlQWl1c2l3eUdDTW93NDRzOVptU1JQdkJTdjJwYUV5bVVUU2NVbmtLa1JJWEwxQ0dIRGpRU01jCm9haE5yTDhkYTZNY1hQRmlRdXZkR3U3ekYwcVFPUUdKUm9wYSs4akZ0UFBLb3hRZ1ZOc2EyQ0RZNEl4RURLSHQKNG1JN25mYnRYZU56eXJrZm5ZMkp1Y29nNndXYjRZVlI3Q0lwc3MxdE1Ybz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  defender-client-cert.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURPekNDQWlPZ0F3SUJBZ0lRUTU3eEthbDlaMjVDLytpeithTmxWekFOQmdrcWhraUc5dzBCQVFzRkFEQW8KTVJJd0VBWURWUVFLRXdsVWQybHpkR3h2WTJzeEVqQVFCZ05WQkFNVENWUjNhWE4wYkc5amF6QWVGdzB5TXpBMgpNakF3T1RFNU1EQmFGdzB5TmpBMk1Ua3dPVEU1TURCYU1DZ3hFakFRQmdOVkJBb1RDVlIzYVhOMGJHOWphekVTCk1CQUdBMVVFQXhNSmJHOWpZV3hvYjNOME1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXpQbmZaaHFBZ0tmcnVWY09ZbkZHUGhSM3dNUzJzTHFyQ2RVS3ZLUnpYbTR4c1c1UU9CM1lxZDB2OUpuKwpLRVY4VkMrd2prVUJQREsxQlB5RnVwUldhdmpIMExKYkZ4d3I0aHkweFEzMlVadmhhLzhKakJsaXRYWldUZTJvCkhuK1Vkc0t6S0ZNb1hPTFRkM2I1aThIT0oxY1FneVl3M1F5aWNsTWpiZmZqNDdpZ1lTR0ZTR1JGVGE2TEkyenIKa09SSU9hN1hLUFdTMGhKUzNtSmEvOXJhZFI2YkpDd1V3OURQYUFFNW1MemNHYmk4Yml2RmxRWnVVUXhlS0pRNwppN0g1Z3NLdDhzdEUyOGd5aHhNSFh0ek5lVlpLYy9OcUhiQjVaSCtNU2x6UWx0RXJaS0xJR0F2MXVKRXRxNHQ5CnZPMDJIdmVSTUpncWprMk1Oa3M2cFF0N0d3SURBUUFCbzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQjRBd0V3WUQKVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlNRRHkxTQpRZHJmZmJCbjhuL09wM0cwUU12VHdEQUpCZ1VxQkFFQ0J3UUFNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUNrCjBwUkE2TEY4TFFHUVo1TVpVN0t3K21Ydm9Oek9LVzdSUEgxWGxHN2cweU9rRDJLSTlvdjE5ZHFPY1dPeWJiWXUKWW1RS29TWmJVWHdMa21uL1FUQ3pndjJyWmVRMUFaQXN6MnZoTk9IUkZpZ1N0YVpxRHhQYmpuVGdtNHdkM3M2eQpUSnVoRUtPUk5GMXpudWF3UUdBTkE3R0p5dSt6VUE5R3JHTEZ6Y2JSYnREVEpzZFZXRDJHYVVLL2kyTEw4Zjk1CmQyaWRoVytSK0RHckxmM0xaMmNrSXBsUnJST2NmbGFhQ1BNYnFuNHYySENTYXVxU01aM05rMjNERFpnL3Mvb20KOWk5bFpYRzRtWXZvaU1IWXBkU2RhYjFZYXZLNU96MGJTVklaWlVrN0NyMDhsSW9jTnhLenpHZlRZTS82UTF5UgozYmNrQjJweWVxWmEybTJ0djE2aQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  defender-client-key.pem: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpQcm9jLVR5cGU6IDQsRU5DUllQVEVECkRFSy1JbmZvOiBBRVMtMjU2LUNCQyw2MDBmODJmNjQ1Nzg2ODExOWQ3NGRiMzkyYTZhOWUzNwoKSjJVeldGUEs0MUV1aHJJOVU3cFFjK2h5bU9lalBTYXBOaEZPYmFJZkVBbEtqd284ZHoxVFRxS2ZhbHpjTXNoRwpLWTNHMHRwOWU0bC9Ha01KQm0wajM4SmpvcHc2QUMrZm1RQXZvTG9vTUdiekZBd0NBYk9DWit2clB4K3kvUDJPCklTT3g0MXpNbHMwTHpjLzI4bnluK0hNMitPL243aVAzZVQrQmtIRzBSODlVMTFPS0o3a2RTbGlPeGxsNkp6SG8KSmVlSmxOWjZMSFE5SEJyM05wM3pPWkQ2cUlQcWlnM0huWVRTSURQdStPTzVwN3M1cHN2QURoVW5iQVhGVFdHMgpOaHdrSG9rMHRnMXR4VmhuREY1UGd2UGREbmZxMTlJQ3pqQ24zekxxeXJGMzJkZ0VOVTIxM1p2eXBYYmVpUHdoCnRTaHNBQnlUVDYrQzVOVWpDbU5Zdmh2RkMxZENIYUR2RnNWREUzQVl5SVhDK2hmeUpBQUtRMDdhSzVyQ3locVAKQTJWemhUM0RkcjlINEdEOEVNbXZMWG5DblJaajArK3VDMzE4YnY5THBkMEtUV0c0OGdzNjh2NzdqUzV3c3FJZwpnZWc0UXVzemZNaTlHMkpId2RQYnFhREIzNkdVa3VkYkQ3YWZ3N01QRmpsNDV2VFFmdndHaTdOUUhFMzF3NTA3CmpIWkNtRUt0NEtZNjRmNkIwcHNsYlIramoxcm5yb0ZjeWJNb2w4RnhLSGFlQSswbktKck42eDB4ZDN1aHNlUjIKSUQyTkxGME5JZkUvVGxVWGE2SFFXL3lOTnJxU2o4bzMvYXA3OFBaU3U0LzBiQUdMS1AvMzdvVk54NjU0Z1hhbQp2eVFxZUpDMXhobmg4QUdSZVBwOHA3U3dsNVh5RVczaTlmTzVMVWQ4QlRuUC9kMVJGcGdtNU11c3EyRVBmK3R0CkIwcGxaWnFsR3VRQm1tMDk4SkJxd2VpbVh1aTlFMCsxYTZTaythSTc4Nnl1YldmcTVZWmxOMTROZ0RQclRweWgKeS9mekRTdEQzdjhWUVRuVWYycFR0dkkxeU5QRFJaM1hCZjM1NnI3eUI4QXVrV3VMMWJlR3RTRnF6aTZjZ0hvSgpTUUZzaXBzYTlqQko5bnQ0aERJNjZGSXpJYVJ1ZlZOWklWY04vWDNSZGFCRWE0WEsrc0x4NTRTblJmWFFldU9pCkhZa2JteERYRVR5aFpNL3JabTk3QXM5MEpHSUoyc2pqL0trYTRjQ1lBNEprV01jdGk4bkdxbFBrRUpiTlFuOTcKZnlYa244Wkl6UVErVWxJSjlkak9TNCtMVXRsdG4xZGoxTnZpT3JQTmtlZUkyVlcvMHhIWXBIS0lEZy9mU1MrTApnUkE0VG1TSVZDQmF3NmJhM3ZSb3BTOSt4ZlJKMlFqOEgwSERVbTBuSFpSMkhybzZuODhSbFkwNGszQ3Yydi9hClRVdHYwZWV4QlRrS0F3UGh1VS84YUw2SC84V0I3UDJXeVZJTU9VczRvOG0zU2NtTjVVTmFGRkE3YmU1SjBNNzkKTnJGVHZMYStYQUhCTWpoamhYQ0luUG9EaTRxV29Wdm54VEpWeFk5SjV4aE94cmt3TDd0Vk54clpzTlBxN1NTNQptQlJCV1ZGeUdaL2pUakxob0NqZGZkWHpnYVVpdHkrcGpwMGdITVZpMjQ2bXh3RzYwTXp5ay9nWTlHYVcxUXJrCkxSOWs3TXFZWklYVit0bkhjbTJCMUNJWVh3OThYOG9lZGcrVXFXVnBsN2sxZzlwUDlSekJSMzF6d0ZIaCtMRTgKRnpzK3RXNnZXMEVveURrSjBmOVQwOFZISFVXc1E5RWlsaW9kdllka0tBdnBBRFhEK3dYeE1QMllCenR2SG4rWQptTDZERzRGWmdPTnM3MXMvaERacmVaZk5tTXRMSExMdFhqcnlJSmM2MUkxRGZzZXVSSmR3d2tCVkR5SmhMRHlZCjFaSjFla05OUUV6SThQUDRrRU9EWFpiS0ZWbG8wYzhReXIwdTYrY0xDVHZDOVE1ajJCK3hueWIvU0l1Mlc0anUKSHl4VXVQL1RhbE0zb1BxRGxlTUJJL0VBVngrUHBwUFEzcU5leXllbFIvU2h2NDRsZVZrTGxaVnZFa2s4R2txbgotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
  admission-cert.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lSQUpxYnJ3S05zWndKQXQrSW1ndEMzRkl3RFFZSktvWklodmNOQVFFTEJRQXcKS0RFU01CQUdBMVVFQ2hNSlZIZHBjM1JzYjJOck1SSXdFQVlEVlFRREV3bFVkMmx6ZEd4dlkyc3dIaGNOTWpNdwpOakl3TVRJeE9UQXdXaGNOTWpZd05qRTVNVEl4T1RBd1dqQVVNUkl3RUFZRFZRUUtFd2xVZDJsemRHeHZZMnN3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUR6V1c3VkNHWEM1eG9CN0wwbTR3S1QKNXZzS1hHUHNYUy9aV0FzWWNpSXJCR1c2QjFRQ2VyTXp4SCtySVVDNW4xc2RUWWI2SXdIMUI4YVAwUXMzVTczdwoveWhBdVEwR1BFNGRDSFNFSXpmbWNYK1JxcGw4KzU3WGsyY3dCNzNnYkpyaGhXOXpVS3ZXd21zWkZsS3kya2t0CnJpQXpOT1AwTHE3cXZZKzBQTnFpeXd1QXZidUVTZ1lFbE9TMGFjOWNDdFJ2RFZxaklNOUNpNDQ5NDlZS3hMQXQKMDlQWExNYzBKTkdlZGx6K2haTzJvUzI0OUwyc1JMYldjUmtnTTJ5bXlFVzQxd0RXMDJVc2xQMDdYVDEyMFhOcwpDR3lzcGVvS2t4NmdkbGNjZHFHV0hwbERoVUNNNmJhdnZtMkxFSzA2ek1aUXlFWUU3V1F0R0xuUEt1UndmQ1RUCkFnTUJBQUdqZ1lRd2dZRXdEZ1lEVlIwUEFRSC9CQVFEQWdPb01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUMKQmdnckJnRUZCUWNEQVRBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZEl3UVlNQmFBRkpBUExVeEIydDk5c0dmeQpmODZuY2JSQXk5UEFNQ0VHQTFVZEVRUWFNQmlDRm1SbFptVnVaR1Z5TG5SM2FYTjBiRzlqYXk1emRtTXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUV4SVQ4Wm1OcVRnMUFSd0tFZ1ZBYjJWTUJoUFNsY28wa2g4TlBmbVF3cnQKaWFFNkNNMWVPVVVSclhadVlURTdJYmg3TUE1SUtZVUw1endXVUI3UnNJWlpGWDB4emI2TVV6YVBpUWF3V3FhSgpaYTZZNUxRT2hMZ2dDeEo1M05meWlnV0NXY2ZGcnFSWVhUSmlrNUdXNmxIZjh1dW53YitrS3cxMEo5eU8vNjJ3CmUzQjNCa0o5QjhHODl4V29HbEpCL2lpRmFyMS9Edy9pNVkzT0xGeVlXdExqZGRCQ0lVTFdIWGUvMExOdTVCak4KTUtZVGJUOWdyQ3F6dEJhZEwwUmxIR0FDMjU0dFBVSDhmVlhld1huWThBRnpTV0cwVHJ2cE12ZTZRY0xOOVlWRgpOaG95bXNBbUNJbkQ0R3k3R3pRRDc2YUJHMzhkNG1JdWxEaHRGZ1BYQnZrPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  admission-key.pem: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpQcm9jLVR5cGU6IDQsRU5DUllQVEVECkRFSy1JbmZvOiBBRVMtMjU2LUNCQyxlYWRkMzEzODgyNmJmMWJiMWVhY2I1ZWFjMTdjZGVmYgoKZzFaS1pIUjNYb01kM3orTkg0ckJxUXV4dHJFaTZQZmNVSFArNmRxbmdwbnVXODJ0WFRteDdVT1VER0hUelBUUgpibWR0U1BWWlpPRWkyRXpJV2lqb3c1dlVmSlBEMHZ0czJ2Qk9FTVgwMEZ6bHhoc21PNjZlNko2STEwbFMvSXh5CmgxRk9VbzFlOEI3SDRXclpQMXRQbmF1MzI0SFhscU5RUTZUT1I4bHVRamd0NFYzMEFKTEVTRm85Mm5QbXBMU1oKTjhpK0F0VVJmNzNhNWE5cFV6S1FKaTBPdiszQjhTR3ZWcExSSVFCMzg0cGQ5RE1IdHpzTU5TWlRCalk0ZzRCTApoRURMd0grY2tIQS9remR4anVEeURTUVkwMjQrMjFyVTM4YjlNY0Juc2VpNUk3ZCtsNitiTDU4aHFpK1dnMHN6CmJ3UHczNkd0Z3J5Tlk5NlQ4VUhJQlcvNTQ5NzdaZE9RMnR0RmU4RmFaRjBmeHhoNVFoZ1AxRVRzTTgrb3JZclYKM2FDSk5UdTE5ZjlPbGhJM016QjJqaGpVemNveFVmalpIeUx6YjBpRm1aejZsVkNVTGtlQlNWWVJSSkNGK3ZqMQp3TGpKSEhhU2M5ZENiUGNRVzgzYjJ4VU5uYnVrS3hKZW1FYk4xMjBTTUwrZ3grM0ZnZ3ZvYXN4ZWRMNU1QRVM4CjZ6REFHc21PWlk3Ynp4b1pYYURiVW54aXlFOWlFRkdiQ1RLbWpIMnNOWGRHMkFjbnNMbm04TzBoOGtha01RUXIKdytSRG5XZjM3TWEwVDBFUTBzazVHY2gyVStUVFlzemZLbkt5YkphSlZGQW9hWlhCd0JkUTZCb3V1aUhEMUZmTgpCL0loMXR4Y0JaMFVDMktwMXVWQ2htWS9GLytYSHZ2WSt5MEQvdlVsdmgzM0NYZmRSeU9rU1Z0MThxUE8rQlozClFhWS85c2VmTTVvNGtKWnc5TC9HYmdpci9SNVRRR2M3S2t3bTlXcDNRL1V1K0F4Z2V2bjRMRUROcEZjTHM0ZnYKVW91S251SXgvdzBFd2NSTWxYeDB5dVpEd3RrMWZ6SFBxT0ZIaUNzbVQyci85V2RZS3RUODV5YVNJV2tRYktsZwp2dlk4QWFoSHVvZjRncVV3R3ZpVmZIZ3Z5U1ZrQzlFRFZBc0JDQyswQmJPZCt0bGIvam53dkNUc1lHOVpwUGh3Cks5SUZRaWIyM0VjTmx2SFRBODZBZmFaVFdOUXdQOXRsc2Z4WXBzVzRYczBVdldFNld0Q241bUFuS1lTaWM0VHIKL0JGakdOTWVRdnUwejVtNEZ5VFJ6ZGRvUUZ3c0kxRERrRThHRnBoQVRHdHdlS1o0SWZUYXFRYTk2eDdRd2RlVQpISEFLWUZXRXRqL2pZTllReVkrMjRJMmw5b3Z4NkYxTzdxSmxvaEYzVWM1WGd5TURwY0grNmdBdkZEOU16ZXpJCnpiRWMwK3JPTmxyMm9WYkFHTEdzdEtnd3JyeWY5KzBKRDZRSHZUSlpRN0pRcHZ3U1lDLytnQTBHU0RGb1ErQVQKa1VnZUgzbGxmZ0N4WEhjZjZJRXZxb3lqNEFvYmF3MjZsUEZNakRyVDB2eU5mQnNkNW9pVXY4WkYrci92SG9UZQpBNFdQcGZIS1RwdHZWMFllRXcxYWlkVEhTbGpMUThFM0t5dVYyLzQzajVQSGdjczF5OGl3WlRtOFYzaUF6VldECkNSRkp0Wjg3WE9QdXdYYmlYc0JUaDBBUU8reWU4M1gzR3RZYXdKMXAvWU56M244RG1Id0diQ1Fyc2NaRjM0QlQKK09aaFNKcE1ORUdqSzFUaHBmVXdXcHczN2xGMmJEVEJGVWcxSm91RmZlVnFDVEpnWTVCQ2FwdGdJc1p4SHpTdAp2YVQ5d1hhWWl1YTBOU1BiNkZ5anZ6TWk4akN2d2dZRWlmcm5ia0kySDFqTkNwQmNPWWk2ZFo2Sk12cFNoNlZSCnVWMUZwVkVianRKNXY3YlM1UjRZMnp0ajZGRkxSY2ZrSk5TZEVSQVRwMzhjQW5LRmtDVGxHL3VKRlZKMEJHeFkKeStnSFlYOFdRck04eHR3ZVZ0L0dDS3A2YmNkSTExeGJmTXFjV2VKd0xIM2ZoQUgvR1pEc2E4dWFJT2JNMm5kdgotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=

---
apiVersion: v1
kind: ServiceAccount # Service Account is used for managing security context constraints policies in Openshift (SCC)
metadata:
  name: twistlock-service
  namespace: twistlock
secrets:
- name: twistlock-secrets
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: twistlock-defender-ds
  namespace: twistlock
spec:
  selector:
    matchLabels:
      app: twistlock-defender
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/twistlock-defender: unconfined
      labels:
        app: twistlock-defender
    spec:
      serviceAccountName: twistlock-service
      restartPolicy: Always
      containers:
      - name: twistlock-defender
        image: registry-auth.twistlock.com/tw_xh82fd7uinul74pwvfiibn09fxe5c6dd/twistlock/defender:defender_30_02_122
        volumeMounts:
        - name: data-folder
          mountPath: "/var/lib/twistlock"
        - name: certificates # Setting the certificates mount after data-folder since it is nested and was overridden in CRI based GKE cluster
          mountPath: "/var/lib/twistlock/certificates"
        - name: docker-sock-folder
          mountPath: "/var/run"
        - name: passwd
          mountPath: "/etc/passwd"
          readOnly: true
        - name: syslog-socket
          mountPath: "/dev/log"
        - name: cri-data
          mountPath: /var/lib/containerd
        - name: runc-proxy-sock-folder
          mountPath: "/run"
        env:
        - name: WS_ADDRESS
          value: wss://35.239.75.105:8084
        - name: DEFENDER_TYPE
          value: cri
        - name: DEFENDER_LISTENER_TYPE
          value: "none"
        - name: LOG_PROD
          value: "true"
        - name: SYSTEMD_ENABLED
          value: "false"
        - name: DOCKER_CLIENT_ADDRESS
          value: "/var/run/docker.sock"
        - name: DEFENDER_CLUSTER_ID
          value: "02d13339-6faa-d10b-c3df-052c980fef98"
        - name: DEFENDER_CLUSTER
          value: "cri-o-x86-sh"
        - name: MONITOR_SERVICE_ACCOUNTS
          value: "true"
        - name: MONITOR_ISTIO
          value: "false"
        - name: COLLECT_POD_LABELS
          value: "false"
        - name: INSTALL_BUNDLE
          value: "eyJzZWNyZXRzIjp7fSwiZ2xvYmFsUHJveHlPcHQiOnsiaHR0cFByb3h5IjoiIiwibm9Qcm94eSI6IiIsImNhIjoiIiwidXNlciI6IiIsInBhc3N3b3JkIjp7ImVuY3J5cHRlZCI6IiJ9fSwibWljcm9zZWdDb21wYXRpYmxlIjpmYWxzZX0="
        - name: HOST_CUSTOM_COMPLIANCE_ENABLED
          value: "true"
        - name: CLOUD_HOSTNAME_ENABLED
          value: "false"
        - name: FIPS_ENABLED
          value: "false"
        securityContext:
          readOnlyRootFilesystem: true
          privileged: false
          capabilities:
            add:
            - NET_ADMIN  # Required for process monitoring
            - NET_RAW    # Required for iptables (CNNF, runtime DNS, WAAS). See: https://bugzilla.redhat.com/show_bug.cgi?id=1895032
            - SYS_ADMIN  # Required for filesystem monitoring
            - SYS_PTRACE # Required for local audit monitoring
            - SYS_CHROOT # Required for changing mount namespace using setns
            - MKNOD      # A capability to create special files using mknod(2), used by docker-less registry scanning
            - SETFCAP    # A capability to set file capabilities, used by docker-less registry scanning
            - IPC_LOCK   # Required for perf events monitoring, allowing to ignore memory lock limits
        resources: # See: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#how-pods-with-resource-requests-are-scheduled
          limits:
            memory: "512Mi"
            cpu: "900m"
          requests:
            cpu: "256m"
      volumes:
      - name: certificates
        secret:
          secretName: twistlock-secrets
          defaultMode: 256
      - name: syslog-socket
        hostPath:
          path: "/dev/log"
      - name: data-folder
        hostPath:
          path: "/var/lib/twistlock"
      - name: passwd
        hostPath:
          path: "/etc/passwd"
      - name: docker-sock-folder
        hostPath:
          path: "/var/run"
      - name: cri-data
        hostPath:
          path: /var/lib/containerd
      - name: runc-proxy-sock-folder
        hostPath:
          path: "/run"
      hostPID: true
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
---
apiVersion: v1
kind: Service # Expose the Defender as admission controller. Remark: by default, Defender will not listen on the service port
metadata:
  name: defender
  namespace: twistlock
  labels:
    app: twistlock-defender
spec:
  ports:
  - port: 443
    targetPort: 9998
  selector:
    app: twistlock-defender