
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: twistlock-view
rules:
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["roles", "rolebindings", "clusterroles", "clusterrolebindings"] # Allow Defenders to list RBAC resources
  verbs: ["list"]
---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: twistlock-view-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: twistlock-view
subjects:
- apiGroup:
  kind: ServiceAccount
  name: twistlock-service
  namespace: twistlock
---

---
apiVersion: v1
kind: Secret
metadata:
  name: twistlock-secrets
  namespace: twistlock
type: Opaque
data:
  service-parameter: T21URmQyVEpjN0FjbVc4bi90QWE0ZEVHV3c3RS9sZVNLNWRaMXhwV0NVd1QxZXhVQmhyOXFjNFMra3FEVkhZWTVzVHFWbW13SkNuZDB6eDhyZkE4TlE9PQ==
  defender-ca.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIRENDQWdTZ0F3SUJBZ0lRT0FFNWN2ZXpMSDVyT2pDbWUxSnl6ekFOQmdrcWhraUc5dzBCQVFzRkFEQW8KTVJJd0VBWURWUVFLRXdsVWQybHpkR3h2WTJzeEVqQVFCZ05WQkFNVENWUjNhWE4wYkc5amF6QWVGdzB5TXpBMwpNamN4TlRNNU1EQmFGdzB5TmpBM01qWXhOVE01TURCYU1DZ3hFakFRQmdOVkJBb1RDVlIzYVhOMGJHOWphekVTCk1CQUdBMVVFQXhNSlZIZHBjM1JzYjJOck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXBqVXNvTFd2NGJGUExHU1pUMWdkQ1NVZ0hZbXd5WENKSG1tTFpvVHpmeUlPaGttcm93VS9xT0lBVTdYNQpGYUw1SStjWk5GTmhTTDNRNllWUFFoZDlJSFhrYSt6UzRQbkpMUmVCbHo0MW5NbDg5cFdyc2RJUDdZb1ppVmdXCjNpQmhmRnY3Yk5rNHRXQ1MvTldXOWdRc1JVNVJCbVlhUlRyZ2dmWXhDdUlkQlVBYTdwMTFObjFlZ1l6SXBTYVAKZXlSbWs2a1ZDL0hYa0JTSVFNVXVoeDhXdklkSWFWeWdqU2VaMGk4bDBXL2MyZXJLTFZJSmltVEdkbEEwTkYraApST3lGdlJ2WitRWXRucDcyUVhoYnVZVnhtRDRQVVlIWXRFdXpydjEvbmNHaTB6cS9PTVBrM2VlbXNjOW1RdEVXCkRZN2wrZXJKaWN5RGJ1bzlITlluRitzT3FRSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXF3d0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVWelptdnBwa3NSdzBTTVM4OGFQYVlaQkRka2N3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFIajNOMmgxeFJxZ3FRdjlJbGVTU0JXT0Q3YnlOVjJQdmtxVWdoUGpqUE8zCkpESm0yemlZY2t1bUtpNzZiUEJtbFlhRGxlem5vRk1XcG4rYjNtMWVyOVdONlpaZXF5cUNTeFBlMUExaktqelUKMzZ4TGQ5RG5kbW5QNU9NYkNMVnVWdWsvVFYvR0JLZ0pWMTU0ZHFMZ1lxTE1zTnJZWVRJbWdtY3ozakh4U2l3ZwoyV0ltV2hjTE9YWEJiLzdjUlJpVkhBTnYwRHQ5Q2xGOGZLeVFlNEs3QWxUM3pYYVRkR0tQQmw1UkgydzBqb1NtCmRuZ1VocUlaTWprdmtPUGhJQWlDeTVBT3Back9Xc3Y5VUVHdGJYSWh1M1F2NFI0VGJKY1huUkpHMTBaRUs3dmgKNngwVkRnMG05SUY2bkp4VGM0QnBNemdZaEtnZWFYM1Y1SGJHRFpEeDQ4UT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  defender-client-cert.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURPekNDQWlPZ0F3SUJBZ0lRSGFXWWJPRDZ6NHVwajlwV2lOTjhGakFOQmdrcWhraUc5dzBCQVFzRkFEQW8KTVJJd0VBWURWUVFLRXdsVWQybHpkR3h2WTJzeEVqQVFCZ05WQkFNVENWUjNhWE4wYkc5amF6QWVGdzB5TXpBNApNekF4TVRNd01EQmFGdzB5TmpBNE1qa3hNVE13TURCYU1DZ3hFakFRQmdOVkJBb1RDVlIzYVhOMGJHOWphekVTCk1CQUdBMVVFQXhNSmJHOWpZV3hvYjNOME1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQTdYeUJwQnBBdnZlU1l2U1prZ3JwZlRMaVhxNzFqYVNHejFFU0JXWjBsaGxnNTVHbkVuQ3BUc0xzZ2V2bgpLM21xU2RBdG84M1A1YUo0SzhkNlBScE1OY2lmeENEakZyV0FRdGx6RXhvMUNrYm4rSlNNL1JQMzNZcWRkYWtsCmRUZUNSL0p4M0Fja08zYkNpSkl3djhFekFlRGJncmZOM2twYjJTcnFZUUlMT0x4bHVOTmc5ZHZqclNuQ3BJamsKVng1K2lQNWwvQW5JNUFsQWZIdTUwK29DQUhwM3hsMHdBSHdSZkoxc2J4QmYyZGFYRERVUWkxQVRWWTRYVjhsVwpscVRGcEFGdCtIUGg4UnUybVlHTGkrTllMWi9uT2FMVlJITEJnL2ZFT3NQTStudHdzRXhDR0tvaUdWKzdYTkcwCjdWTUd0OHowd0I3OGsvMUNlS2NoY2UzVVhRSURBUUFCbzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQjRBd0V3WUQKVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlJYTm1hKwptbVN4SERSSXhMenhvOXBoa0VOMlJ6QUpCZ1VxQkFFQ0J3UUFNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUI1CkVhdnNkVEo4c2FCRHl2WlFuTkNmRjkrV2ZFUVBHSUlxM3hCamQvQzEvelVwL3NHa2dnVXg1ZjhjRGd3YWRwOGwKUlVWTmFqSTNEVnZ6ZUgvNkVOZXV4RW0wUDE4NWxWL20xSmZsQ0REcnY2R1gya01NU3VXc2xSVWhWSXNBdTJsago2dy91eHU2MVRMZjRmbGpYZ2FnV0d3VHYxV1RyVTIyaEhVMHNwUlc3QzZYc1BLL3RDbE5hZSt2MkxJRy9tVmU2CnBucWVUdWNBZ0l4Y0UwWmYxaVkwdUh2V0cwdmhpSmd5Q1JrSy9HUlV3a0ZKUUh1S1hZM2YyWFh1Z1pSTndtS0QKOE1Ybm04UWdxYWpuejY4MUE4YWVTSDVXL0RpUGl1OXdsMytnNlhnSnNvaENSS1pnWFZyUEt4ZHZhZ04wTzlSegpRaUY1ZVB4NzFCRTRJVXRDdHQ5RwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  defender-client-key.pem: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpQcm9jLVR5cGU6IDQsRU5DUllQVEVECkRFSy1JbmZvOiBBRVMtMjU2LUNCQywyZGU4MWU1MjZmMTlkNjBkMWEyZjBkMjFhZWY3NWE4MAoKZUtnVmw1MndXT3U5bDY5OUpLRDd1QUxxN0MwaStlRndhZS9Qa1RFVEp2KzliemlQUTI2YTZjNDBrTS9FVG5xbQprMW5LMnYyZjV6TFdYVEg4MUR1OXcwdWJYa2hpbFNiT3Fsa291dHMwUmswT3hWZWFVNFR0dzFtRHJIZHZMV1hkCnJYaW42UE82dnBlcVYrSzZaQUxqMTloVUdGWVlkVFRndHRXR0hYOEFLSENKeW85Z2Z1SU9SQVdGRzMyOEw2SVQKWGNMVDdjMTc4M1lDK0VJSGVQY2hXbEs0WStsdk9YOUZUTGtwY255WVNKWGtuM2lPK3BEUjhxRzBRcWV6NU40YgpXSGVqVXF6VlJOeXVWakdVYU10ZzhNU2RjbFNuOXlDN0VHZ0M1TTQzalpJL3N6RjJGQ3VmSmFxYThQREc5SGpWCkREeitDVjE1MmpJak93RVRzdXZNOWVyb2FWSEhLdE9uYzlpREZBQVdCTlZld1o1VlJkZnk4K3htNWdnd0RjQ3oKMzNmZ2VVOU84ZVRpRGRycXl6WTkxNENPMjFER0loM0ZPMWFPT1crVWhqYTlHSnR6YzVadzlJYmErakRpdmxCbwpJbDdwSnBaeHorWVlTbjRJanhHdWRPWVhzbDd6T2lFVzBDYmtDV0pSbVRkYU1VUFlCYTlLaERsMm1qK1daaU9qCk1jZmsxZDkzM0k4QnNPWWFMOUMycjBSbkc5NzI2N0VseXIvWkRvMHlXZTV3R0FNallvR0JIN1VQdi83S1c1QUgKc0EyeFZJOUJ5WjcrdkM1WmJrSUU5RHJpNHRwMTF3QldKSlh3M21hbGZydVRrZHNlWnozR1MwdFNkSEVlRFQ0Ywo3dVVscjVtMHFaRzljZmc3SGtyN3VnZ0hiM3lxVUh0UUJUMFRPYzJzeFNlYlJ4NGhsQlMzTUV2S2lxUFNEcFhOCmhQcnNhR0xZSFNOUEVuVEE4MkhLK0ZqcVpMNEozcG40VmRLKzQwZlhDNXVqcmZiSmhqYW02cHM0dStqMVg1REMKMGxSTkMzeGxXTEJaTXFPNWtDblhkQzVxVmp4MWllTFpCb0k4QVR4RzhqSFlyaGg2d3UxMlZTbzBxNGFRdUswUwpxOWVCR2VlaGZXWUlQZEVteDdSN0RKb0FVTE9Tb2plWkZNaGk4MWlORnFlK3A5ZWd4WENYL3ViWTM3Q2puWHBRClAzTlFBZTBmRisxaUNOTXlGZVBPNjMvbkNjQzY2Snc5bnUxMXlCUDlMYVRDdkZZUDJOYVBEWWMrZ3dyaWlVMmQKcUl3azdDNisrYVFzRFY5Zy80ZVFkVXgzTGFiNEx1SGFaOWpNTmlDNDJXOWFuckFDa0xXZG5OYm1qVVU0MmhFegpiRGNVUkwzY0hUOXhjZ3BkUXFoNTNLdGVQdnkrTjBrNTZTelJ2OWlGdmw0NXF3eDBSajNleFB1bnlPZCtDVUdhCnZhYnFWcjRnR1NIT3c2aWV6dlduc2lZempSYjROcG9IR2g0aVVubjFkd3ZSNlZ0aG9FWDhyMUhZNGZrUWhQcEEKejJtbVNKRStQSnY4TXVrZkF0MzZSZkloTUY2WDRxSHlqTDg5Q0ZaYjJxcEhFWWZsdlIwK1NPTG1HSEs4VjJobgpMZWJTZzB0TGpOT3dSaXNEZVFWT2hsWXR1TThMajRaalhLUXJBY2lzeTltL3YrT3lFU2RuTzRhNnBsNS9NekQrCjhWbFZoQUpYeTh3TzNPa0ZML1NsaS9LcVF6Z1B1MFQwbTMvZFRhQTRZa0VKL3NJSDdDcENJYkhNbmVaem9JbnQKdzhBZk1naTdhaENrZHYxUkRQOXNONWNvYjFzb1J4cTRPK3RGL1VkRncxUUtuSEZMdXlTeWlRYzhKdEFqMHo2bgo3QmNteTN1VzhnQkJwMUxWMW8xdVVCYjQ4TWtYUFZiZXdZZzNWbmxpK3dhMUxXdDl0ZVJocGdTQ3daamlxQlB4Clh6OFp6dVk3OXRYK3Y5V2lrQzF1NDROUE5QV0V5cHdnazZxOFg0dTJXM3VPZXAraVpmQnoyc2QyUzU0OGpQZHAKYmNGRXh4N05TK3B6Z0NYTDhTeVEzaERtTzcxRW5EZlA0ZDllOU1LdXBqck1OYWdEUXU2WGdaZWhFTTdJSG1CeAotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
  admission-cert.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTekNDQWpPZ0F3SUJBZ0lRRzNobzRSc3p3UEs1cWxicGNjSGFDVEFOQmdrcWhraUc5dzBCQVFzRkFEQW8KTVJJd0VBWURWUVFLRXdsVWQybHpkR3h2WTJzeEVqQVFCZ05WQkFNVENWUjNhWE4wYkc5amF6QWVGdzB5TXpBNQpNRE13T0RJeE1EQmFGdzB5TmpBNU1ESXdPREl4TURCYU1CUXhFakFRQmdOVkJBb1RDVlIzYVhOMGJHOWphekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTGRYZVhZTFZYeVhPK2hLUWpnMDBJUGoKVDZUZ3JkWmpucDhCdS9Jb0doOThtcDcrNXZCZlN4b3dmOE5NamJQK0J5TW1mTzB1VHhoVkRpNS9zS2NtTzZNcAoydElrRHVLQjZxUk5YNHBYNDZkMGM1dU1YTWI5WU9NS25OSGhWd2UrWDNjKzBRSHZuNmo0WExkSzV4VUF3T0I5CkI2UU5Memp3NTRqcDVocGFVcXFqNWxGV2xsbFpzWFlZZE52Y1ZPWDNZUXBrWjBFVjBpOTBhYlN5MS9BU29DSGkKelh3WkUzWUFCSFA5MjRIdnNDOUtvcmFsRmZ2bFNrZ3JGQlpLYWQ1VVFhdE1jb2ZSNms1SERPZHpYZnlYejJZcwpyaVZFOEg3NEszcVpEWkk0OHAxeDJRZXdxS2VlQ21PWG5QL2V0NG1TSDhVbWx4L1lsUmU3SlFUNTVlUHBKUDhDCkF3RUFBYU9CaERDQmdUQU9CZ05WSFE4QkFmOEVCQU1DQTZnd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3SUcKQ0NzR0FRVUZCd01CTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVVnpabXZwcGtzUncwU01TOAo4YVBhWVpCRGRrY3dJUVlEVlIwUkJCb3dHSUlXWkdWbVpXNWtaWEl1ZEhkcGMzUnNiMk5yTG5OMll6QU5CZ2txCmhraUc5dzBCQVFzRkFBT0NBUUVBZzUwUGFxdVIxVm5vb0lYdmwvanlGNzNzVG1GTjBXNW9JNEgvaERrRTVwejUKLzFHczZJdzVuakNZazVXdlJPQkhhQVBZMWdGY2hFSGFiQitkU250Q2YvbSs3WkNOeDJUZWpMRGg0Z2VyQlFTbApGQTMyaGsyL2tlWWlNQ0pZSFpMWElhZkdHcEtjcFlJSVNsVGI3UlBidFYvaFBqbDhmbDdlVGd1bElKUUcwdkY1CkRIWmpMYnFKcmFiVU11RFBxaS9xbTRRa3NDRDg4bE5lVGp0SFJBSXllVnJqK3NaclFLYkRSNjJoU1RsaWFLelQKRVFIT1QwTkwrRzhXamkzQW1TR1loRTI0WkFNOWdkRFJTeEhCdGU5M2oxcmkzVStYY3VSZm5Ud2tRWHJ6L2FJeQpHZWpnZ1Q2dWhPNEdtTnJuQS9nNGJvNHAxMmhGWVY0c0Zoc2I0cmw0Y2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  admission-key.pem: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpQcm9jLVR5cGU6IDQsRU5DUllQVEVECkRFSy1JbmZvOiBBRVMtMjU2LUNCQyw1Mjc0ZDA3ZGZhN2Y1MzUxM2M3ODZjNTk5NDAzZTRkNQoKdHBqVVJVbmdmclhqVHFsMEdnUzVXMG8xQ21jMk0xU2FRMFRQN0x2dkdiK2JuOGVaNC9vVDdxQXMrYVFYTFphQwpKK2c5dFBwa0E3WERveUM5Y2ZDd2gvcURSOHVySzdaLytGeURNelJ2SGRUR2VXMTBaYzJmblFrSmwxdUVhWkdKCjN4MU9NVzRNSnFTQ1BBVEFOeFFyUzVGamI0dzk0NXh5enJhTmZybjJxMmlKckRIRnN4Rnp4dkxuRDFodGNZRVIKdld6YmluZW1DZG1PY0s1SnRVN08wbnZKT2VxRGJSUmhJL0xGallRTGpKNnpqTEVaVDZBZ1JpZy9vVmVLckd0cAp0R2JneG1CelFQcmtIcnZLUFJITW9TWTB3bHhKOXhFNmJJMUVYdS9CTkFGVHl2VisxZzh0ZTV4bDBxTjJoQ2E0CjZoYjh2YktoWkFLaGxqa2tIOVdNWkhnUzJtVWlINDVGTVJNK3o0NFh6VkNhTnJaRklyR1BoMFN0TFJkNElNb2sKZ0hZYWRoYjkxeXZDN0FQcWw2MUk2bVNZTDI3NHZFU0NqM2xyTmtqWnJKdnVYc05SNityVXpCWk1zVDBoME1LNgpqdG1EcW1VaVZkaDFPbWFsSDZQM2J4QWZ0ZzRsY0xTTWh2WVpXbGVxSkd0d2VsZUZ0L1Q1a2FqOU1la3NhTjFKClV2T0QrUTZEOUpSUkRvb2t1dWNlMlM3UVZuQnM1NVVQR1ErYkZSVHE0ak56YlFBaFBCOTdNS2czMlZ3VC9JRUYKZ2srcU5pcDJER1VhS3lWWG5McWQwZDJaNnVkWkFsR2t5NUNHN2dDUFFPb0dQd1ZuSWl5UEdCdTRTNnkzTDZFVgpMU1hDRUY3SjlnNHpMallnY2ZvRkxPMkJ2cCs5OG9zM0Y1WUIvZmRwQUJFUUx0UldHb0RRUlYrOW5YaWxnRUVHCnFSVWV4NlVBQnJ6YlpycG5MSlB2WFpIaktYMDN3YVZuUmgvT3I3QlpOVHpDZ0I4M21qSDQrbzhMVmVmbENHS08Kd3RsRk45NGFTZFRrbndRNGdYakRQdnRiVWR5eGxJV1l0bnB5UjlXZkN5SUNLNnZsT3dack5JYTlwV1BhdGtEbQpmYXl4ZWtGTlZURnZ3VkZMUXBPalZVeDNwZXphWHdVUUgzQnhoaVVHejFNWUl0QmFNY1E1N1VuQ3AyV0wzc2U5ClcxUXRaN2l4akFkU1JTYXRRaThJWlJvMGRJTDlvR0dDZ2JqNTBHM0YraGVZdTdFT0tCZEVJRm12UnQ1cnppYnoKQjdCT2kwSHo4RS9OYWhBOS8rSEY1MVVybUptOGJzYW0zNjBrTjhadnBZMVlPSWVlQkdCYm9VQTg4c3lDV0pDSAp1bzMyRkNBZjluZ0RlaGhBNS9rSDBuaFc1MElUd29JcnQrYTlDbDhpS0tnYzVMbzA1K2ZFd3FzM24yQS9HUkJCCmgvMnIzZzdBd3E0bGJNKzBKK1pNNU9uR0w2cGtnc1gyRlo2MXRoTGdEdFBUcllVVjdTNjlhLzNwZk9tTTBFdk0KUTlhMGZNR0pIUjQ2aGlQRjMrZDg2Z2NzNHd2ZjBpd0d1MzZ6UWVvYlpmS3VTMkhHMnlBOGxNczJRTFR3bHQxTApUK2lIOEZQQXYrM0U4cVd3bDAyaXUvZ3E4OXlXRkJVK29ndFdqbnVlZEdqS0FxY01TemhxbHlQOWl4bFoyTW55CjhweWV2SkFaUU4rSjlTRlpkcldhNy9ncGN0UUUvY3NvZDIySWpKQzBpUFpLK2V3VFFwdkVHa1hxL2NKYUExREQKTHZtakE3bXFQWDdsMFlDaHZ5OVM3ZHVPQkJldlpzZVN1WnhpMFhBSnZxTWR4VFVNOTRaSVpUSGNUMlNrR05VcgpRK0pRMTd5Ky9RSTdRZVpMdHRHelpRS1ltZGpyTjJvQmZxSnZYbXhId1N2c0dQV0laZFJ5bVdoUGJ1U2ZzN3ZFCkxpN2g1UzE4QmNTb29pL3lhelRnUlZRcEdBdXljR253TXpqeVM2cm5BcjZBbWhjRG51ZjlieG9ObFNWZFc5NlEKWjNtMFVGR3pqNTE3U21xamZ6Q3JqeWNWeS9Uc0NqSWV2UTR6VkwrS3dia0s1WXhmdytMU2ZYNzlqaENQbHpKZQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=

---
apiVersion: v1
kind: ServiceAccount # Service Account is used for managing security context constraints policies in Openshift (SCC)
metadata:
  name: twistlock-service
  namespace: twistlock
secrets:
- name: twistlock-secrets
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: twistlock-defender-ds
  namespace: twistlock
spec:
  selector:
    matchLabels:
      app: twistlock-defender
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/twistlock-defender: unconfined
      labels:
        app: twistlock-defender
    spec:
      serviceAccountName: twistlock-service
      restartPolicy: Always
      nodeSelector:
        kubernetes.io/os: "linux"
      containers:
      - name: twistlock-defender
        image: registry-auth.twistlock.com/tw_xh82fd7uinul74pwvfiibn09fxe5c6dd/twistlock/defender:defender_31_01_121
        volumeMounts:
        - name: data-folder
          mountPath: "/var/lib/twistlock"
        - name: certificates # Setting the certificates mount after data-folder since it is nested and was overridden in CRI based GKE cluster
          mountPath: "/var/lib/twistlock/certificates"
        - name: docker-sock-folder
          mountPath: "/var/vcap/sys/run/containerd"
        - name: passwd
          mountPath: "/etc/passwd"
          readOnly: true
        - name: syslog-socket
          mountPath: "/dev/log"
        - name: cri-data
          mountPath: /var/lib/containerd
        - name: runc-proxy-sock-folder
          mountPath: "/run"
        env:
        - name: WS_ADDRESS
          value: wss://stage-consoles-cwp.cloud.twistlock.com:443
        - name: DEFENDER_TYPE
          value: cri
        - name: LOG_PROD
          value: "true"
        - name: SYSTEMD_ENABLED
          value: "false"
        - name: DOCKER_CLIENT_ADDRESS
          value: "/var/vcap/sys/run/containerd/containerd.sock"
        - name: DEFENDER_CLUSTER_ID
          value: "b54b5003-bd0a-4e56-469b-64416e8dbb2e"
        - name: DEFENDER_CLUSTER
          value: "tkgm-photon"
        - name: MONITOR_SERVICE_ACCOUNTS
          value: "true"
        - name: MONITOR_ISTIO
          value: "false"
        - name: COLLECT_POD_LABELS
          value: "false"
        - name: INSTALL_BUNDLE
          value: "eyJzZWNyZXRzIjp7fSwiZ2xvYmFsUHJveHlPcHQiOnsiaHR0cFByb3h5IjoiIiwibm9Qcm94eSI6IiIsImNhIjoiIiwidXNlciI6IiIsInBhc3N3b3JkIjp7ImVuY3J5cHRlZCI6IiJ9fSwiY3VzdG9tZXJJRCI6ImFwcC1zdGFnZS0xNDAxMTAzMjIiLCJhcGlLZXkiOiI3QTh2aCsrbDJvd3RwRjF5Nys5RnR3V3Y5L0hQL044aVNJTko1bGNXaHYrUW5qWnNjYlZvU05nSW1qRHJBcFlFaHN1RlFnTnplNjdjRkd2OTJKR3U1Zz09IiwibWljcm9zZWdDb21wYXRpYmxlIjpmYWxzZX0="
        - name: HOST_CUSTOM_COMPLIANCE_ENABLED
          value: "true"
        - name: CLOUD_HOSTNAME_ENABLED
          value: "false"
        - name: FIPS_ENABLED
          value: "false"
        securityContext:
          readOnlyRootFilesystem: true
          privileged: false
          capabilities:
            add:
            - NET_ADMIN  # Required for process monitoring
            - NET_RAW    # Required for iptables (CNNF, runtime DNS, WAAS). See: https://bugzilla.redhat.com/show_bug.cgi?id=1895032
            - SYS_ADMIN  # Required for filesystem monitoring
            - SYS_PTRACE # Required for local audit monitoring
            - SYS_CHROOT # Required for changing mount namespace using setns
            - MKNOD      # A capability to create special files using mknod(2), used by docker-less registry scanning
            - SETFCAP    # A capability to set file capabilities, used by docker-less registry scanning
            - IPC_LOCK   # Required for perf events monitoring, allowing to ignore memory lock limits
        resources: # See: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#how-pods-with-resource-requests-are-scheduled
          limits:
            memory: "512Mi"
            cpu: "900m"
          requests:
            cpu: "256m"
      volumes:
      - name: certificates
        secret:
          secretName: twistlock-secrets
          defaultMode: 256
      - name: syslog-socket
        hostPath:
          path: "/dev/log"
      - name: data-folder
        hostPath:
          path: "/var/lib/twistlock"
      - name: passwd
        hostPath:
          path: "/etc/passwd"
      - name: docker-sock-folder
        hostPath:
          path: "/var/vcap/sys/run/containerd"
      - name: cri-data
        hostPath:
          path: /var/lib/containerd
      - name: runc-proxy-sock-folder
        hostPath:
          path: "/run"
      hostPID: true
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
---
apiVersion: v1
kind: Service # Expose the Defender as admission controller. Remark: by default, Defender will not listen on the service port
metadata:
  name: defender
  namespace: twistlock
  labels:
    app: twistlock-defender
spec:
  ports:
  - port: 443
    targetPort: 9998
  selector:
    app: twistlock-defender