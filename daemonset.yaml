
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: twistlock-view
rules:
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["roles", "rolebindings", "clusterroles", "clusterrolebindings"] # Allow Defenders to list RBAC resources
  verbs: ["list"]
---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: twistlock-view-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: twistlock-view
subjects:
- apiGroup:
  kind: ServiceAccount
  name: twistlock-service
  namespace: twistlock
---

---
apiVersion: v1
kind: Secret
metadata:
  name: twistlock-secrets
  namespace: twistlock
type: Opaque
data:
  service-parameter: RFM0QTlna3JyZXl0eG80Y2Q2czJJTi84T1lJRGxEN3JEQ2t1b3RkS1NnODJnSUJyZGFvaVJOd05lWlNsNTRUek10WUlQeXRuWHpoSEFpM3ZFcGRzVUE9PQ==
  defender-ca.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIRENDQWdTZ0F3SUJBZ0lRTjRrSWZRdjVON0ErL25uTG9Pb2h5VEFOQmdrcWhraUc5dzBCQVFzRkFEQW8KTVJJd0VBWURWUVFLRXdsVWQybHpkR3h2WTJzeEVqQVFCZ05WQkFNVENWUjNhWE4wYkc5amF6QWVGdzB5TWpBMwpNVEl4TVRRME1EQmFGdzB5TlRBM01URXhNVFEwTURCYU1DZ3hFakFRQmdOVkJBb1RDVlIzYVhOMGJHOWphekVTCk1CQUdBMVVFQXhNSlZIZHBjM1JzYjJOck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXdIWHhoNzFBaGd5NFIvYTBSTkxwaVZ0cUd2UzFjK1lqalY2SU1oVnVBV3BDSXNvQ0R6NlE4eW12TE9lUgord01IQjhNamlRcWtHekNMYXlIVWsrTzdlMjkzdjdXYW1qN05zTG9pNlJ6Szl4dUVYTXhpRk1kYys2ektSODVhCk8vMGc4S1ptajUveThxZEFBbDJGWTdJVnZhb2NEM2RQakVRZjVBK24xcko4VHpsTm9sKzFvVzJsaXh5L2RnSnQKOGxPVXMxaVVVWEwyeHdybnFvRENVeW5xZTREeVVGVW9BVVRSZ3ZJdWR3RDlWMkNEVDQ2SEFycW8relJUdXM2SgpzczYyZlk4a0EvQVNXZkRqQVRSMkdQNUYwdkcwbTF1THNLbUQvcDlIVFN0NWRkN0FFZzZoM25NNmR3RU9qVERNCloyZnZmVHJMZWlPdVdRYS9PSEJBdUh1d2pRSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXF3d0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVV0b2xlUk12cXgrWUY1RCtZWWc3VmZlc3oxdUF3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFMLzdCRnVJSFJXdkZRM3hJQW1IbjgwM0FlWjc0aDB0aHFLbDZIZnE0bjBSCnY3OHBFcmdkYjBySTRFekJObmtpRnhPOFg2bFdvMTExenFuN2doQS9adzNLK1hoV0pTOHhVOXZBQkZaWFVIbUQKZ0NRcCtRQTQ1b29NckZaRTcyTXlHTlRQVG9tN0VHVUZ1TlBQMGR1eXFFaU5QS1A1YzM2Nis3cVZZcnY1RGVPTwpmSnFOTFc4eEJNeHo4cERYVGUrQ1BieUFtSDBNRmlhUXh4TEtKZ3ppME9iV2V1SlFURCtxRzZsUXJ4SXMwelRUCmRSbEVWakpKQ0FaYnlDUGE1SHg4dVJWUllEdERVTGxIaVlCY1lCS2QxYk9sakRRUzNHaytaSStUUWErYUdTdjMKWTJqMmZKZ2RmZXBlUExpcjVLSHpJT0MzUkgwWUtPOFJaNkZKMUlRSUdZVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  defender-client-cert.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURQRENDQWlTZ0F3SUJBZ0lSQUp5VTNvZXZPZWRjaEY1Y001QTc1N0l3RFFZSktvWklodmNOQVFFTEJRQXcKS0RFU01CQUdBMVVFQ2hNSlZIZHBjM1JzYjJOck1SSXdFQVlEVlFRREV3bFVkMmx6ZEd4dlkyc3dIaGNOTWpJdwpOekV5TVRFME5EQXdXaGNOTWpVd056RXhNVEUwTkRBd1dqQW9NUkl3RUFZRFZRUUtFd2xVZDJsemRHeHZZMnN4CkVqQVFCZ05WQkFNVENXeHZZMkZzYUc5emREQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0MKZ2dFQkFOc1RlTFhvbUhkSldUakRzRXFkOUZCcVJpQjM2OXJaaE5YVTFHbHZaMFRoRHZHS1FXbk1hMWhSZU1iTwphWGxqZmkxMlhCajM2RjBWL0o4bFlXdndwMzBsa2tCVEMvRFNDWVV0SUJBeHcwMnh4S2ZxOUdIdzJybDFPS3kzCndpWWwzeVMxbXUvckFJQVhEeXQyQTRsWVVLR3p5VzQ1TlpuSkxzYXA4cE1FcG8xQm13Q3dhK1BkU2hjYStncmsKNUN6Y0RXRHZRU0RYMUJVdkVLUnp3ZzA1bnNPTGc5UnYyeG5nSXdTcDVYV2MyWmhQajltSmxMQXhwOVAvcEo2SApCekh1WDVSK2llNDFqVnlwbk5QSHcrSFNNKzZ6Wi9EMFhXcHZzb09yTDJkUG1yTWtkelRveDMvT05hRERkQTM4CjZ2RG5Takk4Wjlra2NybWs3OVpFMjVobWNnTUNBd0VBQWFOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdlQU1CTUcKQTFVZEpRUU1NQW9HQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVdG9sZQpSTXZxeCtZRjVEK1lZZzdWZmVzejF1QXdDUVlGS2dRQkFnY0VBREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBCll5U0txS0tlM3BxTE40OEY1T1VWWVRrZ3NlNU9Db3pTRTl6MGQvaFptSFV2MHVFTDUyZVdkTElOY01zbmdmVjQKTXl0cS8vdU92ekhoVVdCb21sOUI4WjNMUXc5SXVRajBGZGJBaTlQeURVelpmTVRiajdrUXJ3cFVVR0ZGQmNuNwpQWVl6VW1pdDdjQldlOEpqYVM1T1pENS9IWTRGZExrMSt4aEo4aEthbWtBellxT0YrK3lnTEJVcVVDQXg5WUc0CjdyRUxKVTN2eUJySHEraWpPZGU2WXNiVkhlUFdiU0VtN3BGVUk2VXJGTmQxY0JzVW14Q1NyODk4RlhKNlFHb2gKT2pCZ3R0QWlPV0pDYk1kZk1hWk4xWFFQWEFyTTlsTlJVNmkweVk5N05OZlJBYzFHSWRXZXM3ODFKdXk0bDI4UQpFaGJ5VUdiaUxzWHUrNlg5YkZXRjRBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  defender-client-key.pem: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpQcm9jLVR5cGU6IDQsRU5DUllQVEVECkRFSy1JbmZvOiBBRVMtMjU2LUNCQywxNjk4MjQxZGI4ZTUxODI0ZjYzNDYxYzkxZTk5YjllMQoKKyszeUlJUjNqQ1hqU05sYWU0TEF4dXZiV0JNbmszeVRrVkFNU3BZdkV3THhiRXRaby9CNldpR3RBQTIzd3FmTApqOVQ5aHVwQnBVdDRrNHowbVVyQVdYNGQyckYrY1FwUjQ1c3N4ZnBlbGFvOENFcThtTnBmcWVESlJTcmtJMVNQCm9HRGp2eWZvU24veUJ0RkloQ0xBMEFtaGo4ako1RElZUWVhNWdKOHpiL0NBa0R4UU83K2NlNzNmdjZxOEpBenoKRjVBOU9tdVlwRWFsU29vN1drbHJtdXNJbVdUeW5lN3hROFlnNkhnaS9XZkYxMzJ6WCtUZDE3dEVxWkozN25rZgpwTUduVXBocUUxYUV4Yml4UHlqejBQZGNSclN3b2IwN3QvU0IzOHE0NWl1MWxnZDY3OTFOZEJmbm1DRC90MkFjCkxkRVZGSXFkcmcvK1BkNGFteTIzZXh6aEJqMUFDMFF0bzFEd05BeFM2Z1lpUlFuaGhQc3JPTXRFT1JxSXZVeTEKUWFVYTNsUXh5NURFQUtoMk5uL0FwMjVQUVoyYWxwYXFicjJYUnZmTStTOTMyblJtWjBsWEYwZklxN0p2QXhKdQpqcUpNRjY4NDdLTmhuTjFZaFFFSGVuelRCd1k1eUVyYzhDbnRvbGtYMGNDUDk5NnVrSHpXY0I3aGt0aWhDMDNTCnVyMlZBT0MvVGNjMjRJZ3p5aENjRHIrdU9QZnloTTcvbGU2S2JwYSswWEp5b0ZhYk9EQ2lSU01LRHVYaE1ZZ2YKOFU1dnpqWHpsZFVRQjVqQmkxRm44bXk5SWFienYvTDJIR1NNa2VBVUJDclEzckNIczhIWGxEdTJjUmpRa2hLKwprdHp4TFJtRllrRk5UWTd0bjIrRmpLMWxzVjA3bzhoSDNkNFozQnU2N3cyMVJ0cmpLeXhlMWs5V0xpMkh6SVdSClVFTFBUNmt2WXlyZVJKbG5KRDl6VmREY1lpQUpkSmVFRmNCRTFVckFkdnVIWS93WjZjZXZPTmxoQlpoSy9ObVcKa3FXRDZYYVAvbGVKNEdLRlhFd25tU00wZEtHMHRleEpqUkdWN1Z0bGlrUEZZZ1FEd0I5bE9wUW9NeU5EWDg5YgpsYTBMSTZzRk02VEg2WmVMZk5MR2pRVnBoVUpKTmZVbXVSNDJic0xydXZnazY4cXNkWlZZTUhCVmx1clpNbUUwCkc4WDZ5YldOTEVNM0ZNQ3o3azJ5bysyR0lCT3o4RGJuamxFN2Y0T1RhM3V1bU10RkNySmg1M2haWWRxUlBFL0EKcmR3OFBFRWFPZ3NKMzVyaHVNeTBZSXdzQ1VpL0RDZEJSWkpUcTFzQzdsTHZvdlhWa2NxTVlLcmdUSGpmb2VVVAo2VEdkbkJsSXdvVEd2WThibUJuUUQ2RG4rL2lwV2JYaytsQjgybG4vWmMwRzc5S3Exdm9DUU9OS2xSV1FiKzBRCnp2MnhWSWNFVFFoTjdlaHY5eDQ5QlBvYlk1RjhNa0xJQVFrVjNVV09DYnVLcWx5ZFZJSmg5MFdCbUxNaFhMTXUKcTBHSzhhZEd4ekNXdTNXL2xzcCtMREJ0WlFoZk5WMzRwQnZTbGNSMFRYeGZkaTB6bmRyWjdzZ2RlbkFicHU5awo3NWFQMVl0NDUzT0tzN0hlUkwxQkpCakFuN2lzb3B3QUcySlRMUlNmb1VwRy81b3lTdEtoNzNFTmRzdW1WS2dICmRpRnhEc1F1cVlLL3BNL2VaYktwaGRXcUNSVEdIM1dXQVVhdHF4VHV0dTkvOUpGN3RLaEJMVkdHNjJaSDNUY3gKYVEvendvZkhYcVdnUm9SaWllcG91ekhxKzlXMU9jVU5KNFdYUStYTmpmb0ZXMHg3c0tnOVFXUXp0eUNxVmJiMwo5MUZHZzB4QzV3MzVjbWs5VWo3ekFCUjFrN3QwWXc2SDJMNFkxMmZpUVE0TnZGRTZRdERab3ZRcVdRMEVLK3BGCnRoeVF4N0RqZFpibGF1STZPRzhXL3Z6VVpRa2dZMXZha3JYd1M3T05CaFR5ejZnM1dxczNMekZSYnQ2UUxmQXYKQ3ZTYnY5N1RxaXBNRHQ5My9QdVRZS1Y2Y3F1cStJVDlpY3dpWWM5RDlEbnNGVHNYQ1dNTkhHZlNwY3hFdXBVZQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
  admission-cert.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTekNDQWpPZ0F3SUJBZ0lRQVpkbmlnTFJLVEw3WnhmVWxIbHowVEFOQmdrcWhraUc5dzBCQVFzRkFEQW8KTVJJd0VBWURWUVFLRXdsVWQybHpkR3h2WTJzeEVqQVFCZ05WQkFNVENWUjNhWE4wYkc5amF6QWVGdzB5TWpBMwpNVEl4TVRRNE1EQmFGdzB5TlRBM01URXhNVFE0TURCYU1CUXhFakFRQmdOVkJBb1RDVlIzYVhOMGJHOWphekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBT0VxU2VvaVpSaGlrRzB0V2hFdklhN28KYWl4YXZxRVcxQjdsdHB3MGpFOGc4enlaU2JUODJ0enR2eDhlWlNFWDFzN21tZndPNjdkb2pPUXhYT3h1Z2dKdgpoTWZ0enpNM2dsVWdOK1I3ajdIblJCUTYrVmNmS3IyRUpDM2lXZkZnaHpocHgvbzJGUWZDSG9VZFhtUGRaMU9oCnMzS25xQ3E5TGtNWC9TVnVpR0pBbm05QTI5cVV3aGJuZzdoU0JLc2ZWcFFudytiZ1V3SW5SbU1pNU1MR3VUTDIKZkRBTklEZkRtdkM1RnlZRDc0ZmtnVk11dkNPN2N3ei9BbzFvQVR4UjRrL0Z0c3N6YUg5YnJyVmpjYUt6WUljdQpaSVlDNU13M0loN3dEWDg0WnNpTGhaQk5XQXVKWVAwaEg5bjBkRExSMngyRGdyNHVBVnI3dmZEZEtVa01NWHNDCkF3RUFBYU9CaERDQmdUQU9CZ05WSFE4QkFmOEVCQU1DQTZnd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3SUcKQ0NzR0FRVUZCd01CTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVdG9sZVJNdnF4K1lGNUQrWQpZZzdWZmVzejF1QXdJUVlEVlIwUkJCb3dHSUlXWkdWbVpXNWtaWEl1ZEhkcGMzUnNiMk5yTG5OMll6QU5CZ2txCmhraUc5dzBCQVFzRkFBT0NBUUVBa0hNbnpOOUltdnUxb3JsbGJYUVBwajNaL1RUNFo2VUc1S1ErbFA2VTJuMDIKZHBSQmVqc0hRY1Q4Z2UvWnZkbVFiWGhSMGJxTWhXajBiRzdyMlFwRUxQbkIrUXdub2Z0RnRUODEyMUFsWHVVRwpyVytTMHRnMk9YTnBucWhFQXduNXk2NU4vM0xzakVEcXNTVmoxTWVwaTRYNEs1TmdYQ0F1aWM3RFJ2aUpqMmc2ClR4YkZsbkJxcEhCMmxTY2ZSbHp3MjdGUUZORkFVZ2hEY3k5RjBSTytFYXJBSC9Yc2lKbWNwaDZ0UzQ2ZGxqaGEKWFlCZVR3YWU4aSszNWZVd1VQOENFbVVya296UnhIcmtCWmhtQnAyU1Y1czhsVXB3OGt1Q010dFQvb1gweXZVaApnSzBUT0x1V3B1MEdrVzN1aFJMT0hLZVZMMVBZLzVha0txai8wbDBFQ1E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  admission-key.pem: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpQcm9jLVR5cGU6IDQsRU5DUllQVEVECkRFSy1JbmZvOiBBRVMtMjU2LUNCQywyZmY2OWE0YjE2NTRhM2MyYTdlZTAwMTY4MGJkODdiNgoKUkg4SEdVNDVNK2EvMmtBcXkzdU5KSlJPemJrYnNQVit6bmxHSzVuYXNpaS9BTmRhMjlyZzhLSXVqbHlvd1g2MApLT3dwNVFrWlFWZVJNeXNlTHlVY3pPRDlRdkFoVzQxRG43U3Z2SDU1Q3FNUVZ0SlF3cWQ3TitlZG96ckNqYUlLCklqY1ljSW9BT1hWN0tpUDBHNDFuck9KVmg1Zk1hMmxhRkRmSFc1anBqRkUvT1BYamR4aTg4dzhtNmFEeXV4UUYKZk1WVFFIbURZbXNyK1RyRlJRSFVRb29CRitUSkUwVGIvcUZ2U2oyTUdpNkY2Y0NyREFlaXZOOHNGZjRkeE53OAp0QWpoSXd4emVzOXZ6M2lQdDJCRUxFTVAwMkMra2NZNFliV2lFT0gvVGRQMHBtcFU1QzFoWFZoWThHUnNiUW1kCmova00wdXRURnZaUFFOajQ2bE5pZDNjckxlVHZxa3Aza2JUcXBFUGs1SDFVdTF4M2h4WjR4UTNSdkFkamVUL0YKZWdxekt1cDZxdFhjMURhQ2hJWUFGM2JXSFdFS3FrRzFUWENQNExhMSt2K094U0ExSlpMY3RUSm4zWHFWMDhQeQpXbG9DaDJreVFNdm5NN3dubTRPV1FSU0VCRDFkRTJiLzBPMUViYWtpeVVqWlRVbHU3S2l0c3dhN2Q3WE8vaWpJCklvQ2Z6aUFKMEJSV3JqbWZ4WVJOS3huR1RRSHBxWmI0cm85TkJ3d1BURTZnelFnQjFRbGIzWXIweE9IOWlIRGwKWDBubEcyazhNNUIrbU9DQlBHWVIvQ2xybjBoSC9QMTN5WUdJVVhhZFNlcG5JRVZraCtxQmpkSUhwVjhObWs2cgpieVhsb1FacXhkb3p0bUR1bnZhdmRGMzQrcS9nbG1veldHV1FIRWIzOGVnUVRja2JseHJzQ2F1a1JiaXFJVDFnCnV6NDNDTjJUSWNScmdONXFmRGlGOGtNMjU5QXBvY1NjaUk0aEUyWXdGd0VqNDZEdTIwcTl2UE1hOGV0YUZuQ2IKMVg0ck1DRTI1MDhUbUU2M241clRGdkFSc1BXNk5TNWlCYVdSaThrUVJRY2laTE55NDMvYzRvN3I3K1Bsb3hLZgpKVDVXejl6NUNNZkpOS2JWNElRam1zWlFiU1FHakd2VmNWcUJSdnpjNjk5OC83dTlmNXE1bm04c2NJaHhUdUw3CnNvaXZaZVVvYm8xamdKeTdUNllIeXdBSERNWThHMitmelp2WkZ2REwxQlZNeXNhN3cxbGtwZ0JxUTRtL05HbkEKZERvNlFva2xUMkpEU09vWUgwRFA4MTJMOEdUSHpyY0RISFVXTUFIWWdDODcwTy9EbGVpV1p4Q0pXWkUyZlF1SgpRY2V4LzY4TFZpZHNHQlBQS2pjSlY2WXR6clIyYUlEQnE2L1haVlVBUng0VUVFaXNoN0E5c0hFTS81NXlrV1pICnBNVmYxcGw3R1NHeTRtMUF2b0l5Y2dnMkVpcHRXR0d5SkVGblVraHpJaWYwMy9Ic3dhdkFhbkRjRE9lQnBVSDQKV3hURDl2WmwvcHd6VG8xeXJMQVljNDhjdDNNRUFzR0NMMkRKMDA4ak1rMm85K3FuZi9KZ3g0WUp6R0NmREk5RQpteE1XbENmdGptYXRlMkEya1FVOGdLbmJGd0lrcU1QOWlOdGpxSWJscWtDM3h1VkRDeFdmcXF3ejhHVlVBZ2dNCk5WUkJzdHVYWUdsMElBREkyZ2doSTRmT1pacTQrNGwveGEzYzdOUm9QZmNGRmJlZXI2QzBVK1ZwMjN4Tk1xdDgKMnB0SnpicmVtSFdqZXF2SlM3dWQzNktyUmVJM0xtanRZQVFLaEpiQ2cwVjhqMmswbW9BU0QyMk1IaEU3NXkxWQpPRUtTRVZsZUwyb3dCc3VqU1MrM2s2Lys2eS9OMXV2eWs2U0I3clhBbzh4VjJVRmtOb0JHd3lTZjZYY21NaDBvCjFjV1hoZG5rUVBHSllLZEVyZXdhaDJWVXBhb2lrS3VWK2xGMTFLaFZxU1U3UUovSmJXNCszQVZjWldGVnI5c1AKOHYwNVdPN3BIVlhGYi9xVlhVME5pZGJDNEt0ejZjQkhFS215dHBlN05VMUozRC9hcW5YZU00SnV6OUlZZ2JVTwotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=

---
apiVersion: v1
kind: ServiceAccount # Service Account is used for managing security context constraints policies in Openshift (SCC)
metadata:
  name: twistlock-service
  namespace: twistlock
secrets:
- name: twistlock-secrets
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: twistlock-defender-ds
  namespace: twistlock
spec:
  selector:
    matchLabels:
      app: twistlock-defender
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/twistlock-defender: unconfined
      labels:
        app: twistlock-defender
    spec:
      serviceAccountName: twistlock-service
      restartPolicy: Always
      containers:
      - name: twistlock-defender
        image: registry-auth.twistlock.com/tw_xh82fd7uinul74pwvfiibn09fxe5c6dd/twistlock/defender:defender_22_06_188
        volumeMounts:
        - name: data-folder
          mountPath: "/var/lib/twistlock"
        - name: certificates # Setting the certificates mount after data-folder since it is nested and was overridden in CRI based GKE cluster
          mountPath: "/var/lib/twistlock/certificates"
        - name: docker-sock-folder
          mountPath: "/var/run"
        - name: passwd
          mountPath: "/etc/passwd"
          readOnly: true
        - name: syslog-socket
          mountPath: "/dev/log"
        - name: cri-data
          mountPath: /var/lib/containers
        - name: runc-proxy-sock-folder
          mountPath: "/run"
        env:
        - name: WS_ADDRESS
          value: wss://staging-consoles.cloud.twistlock.com:443
        - name: DEFENDER_TYPE
          value: cri
        - name: DEFENDER_LISTENER_TYPE
          value: "none"
        - name: LOG_PROD
          value: "true"
        - name: SYSTEMD_ENABLED
          value: "false"
        - name: DOCKER_CLIENT_ADDRESS
          value: "/var/run/docker.sock"
        - name: DEFENDER_CLUSTER_ID
          value: "06c7c61b-5ebd-84bf-5326-ba0d884e4983"
        - name: DEFENDER_CLUSTER
          value: ""
        - name: MONITOR_SERVICE_ACCOUNTS
          value: "true"
        - name: MONITOR_ISTIO
          value: "false"
        - name: COLLECT_POD_LABELS
          value: "false"
        - name: INSTALL_BUNDLE
          value: "eyJzZWNyZXRzIjp7fSwiZ2xvYmFsUHJveHlPcHQiOnsiaHR0cFByb3h5IjoiIiwibm9Qcm94eSI6IiIsImNhIjoiIiwidXNlciI6IiIsInBhc3N3b3JkIjp7ImVuY3J5cHRlZCI6IiJ9fSwiY3VzdG9tZXJJRCI6InBhbnctdHdwZXJmLXFhLTE0IiwiYXBpS2V5IjoiT2hsVXZjUkF3enpGTVp0R0NManB4QWRXeXN0Skt6QzFCMTZvK3VPVGtJZGMyRExmNXo4MEdmN2I1SCtUdDF2K1BxdjFyL0tzR2ZEQ2FYK2dKY0xVQ1E9PSIsIm1pY3Jvc2VnQ29tcGF0aWJsZSI6ZmFsc2V9"
        - name: HOST_CUSTOM_COMPLIANCE_ENABLED
          value: "false"
        - name: CLOUD_HOSTNAME_ENABLED
          value: "false"
        securityContext:
          readOnlyRootFilesystem: true
          privileged: false
          capabilities:
            add:
            - NET_ADMIN  # Required for process monitoring
            - NET_RAW    # Required for iptables (CNNF, runtime DNS, WAAS). See: https://bugzilla.redhat.com/show_bug.cgi?id=1895032
            - SYS_ADMIN  # Required for filesystem monitoring
            - SYS_PTRACE # Required for local audit monitoring
            - SYS_CHROOT # Required for changing mount namespace using setns
            - MKNOD      # A capability to create special files using mknod(2), used by docker-less registry scanning
            - SETFCAP    # A capability to set file capabilities, used by docker-less registry scanning
            - IPC_LOCK   # Required for perf events monitoring, allowing to ignore memory lock limits
        resources: # See: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#how-pods-with-resource-requests-are-scheduled
          limits:
            memory: "512Mi"
            cpu: "900m"
          requests:
            cpu: "256m"
      volumes:
      - name: certificates
        secret:
          secretName: twistlock-secrets
          defaultMode: 256
      - name: syslog-socket
        hostPath:
          path: "/dev/log"
      - name: data-folder
        hostPath:
          path: "/var/lib/twistlock"
      - name: passwd
        hostPath:
          path: "/etc/passwd"
      - name: docker-sock-folder
        hostPath:
          path: "/var/run"
      - name: cri-data
        hostPath:
          path: /var/lib/containers
      - name: runc-proxy-sock-folder
        hostPath:
          path: "/run"
      hostPID: true
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
---
apiVersion: v1
kind: Service # Expose the Defender as admission controller. Remark: by default, Defender will not listen on the service port
metadata:
  name: defender
  namespace: twistlock
  labels:
    app: twistlock-defender
spec:
  ports:
  - port: 443
    targetPort: 9998
  selector:
    app: twistlock-defender