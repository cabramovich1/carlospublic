
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: twistlock-view
rules:
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["roles", "rolebindings", "clusterroles", "clusterrolebindings"] # Allow Defenders to list RBAC resources
  verbs: ["list"]
---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: twistlock-view-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: twistlock-view
subjects:
- apiGroup:
  kind: ServiceAccount
  name: twistlock-service
  namespace: twistlock
---

---
apiVersion: v1
kind: Secret
metadata:
  name: twistlock-secrets
  namespace: twistlock
type: Opaque
data:
  service-parameter: aWVYcDVUMXFCZXZQeWwwU1F6K204d0gyOEhYeXFXM20zRUlTcjVLY2xCY3pDcjIvWmFEbmxPalBqQ3JsS1BOd2JoYitPUmlveExzZXpCc0lQTGJGU1E9PQ==
  defender-ca.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIVENDQWdXZ0F3SUJBZ0lSQUtkL2xoVnF3ZHNTdFdWYkxkbUExcjB3RFFZSktvWklodmNOQVFFTEJRQXcKS0RFU01CQUdBMVVFQ2hNSlZIZHBjM1JzYjJOck1SSXdFQVlEVlFRREV3bFVkMmx6ZEd4dlkyc3dIaGNOTWpNdwpNekV5TURjME16QXdXaGNOTWpZd016RXhNRGMwTXpBd1dqQW9NUkl3RUFZRFZRUUtFd2xVZDJsemRHeHZZMnN4CkVqQVFCZ05WQkFNVENWUjNhWE4wYkc5amF6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0MKZ2dFQkFLUTFqQzN5S1pFaEh3WHJsKzFQSmtZWWs1eDhwTzd5cmVEdGNMMGltYlkzbEFpZEhPc3BJZlFTMzhIQQpoTi9SRlhxS1kyelU5ajBOQStTVjQ4ZE5nR2M4WFE3SEEwT2s3akpMcW9ORlRqS0VZS09Kc25PSTNDVkFTVTIyCklEUXorYUNSK1BPMmRBdnVIWkU1WkRaRkg5Ymw1OWN1QzhVRHlvVXAwVDhMNERWL2tuK3NQL3BXb3p4NFlFaGIKOHdDV3Y0RE9mK2hWbU11bW1CK1F4QkoyblJtNGxvN1ZsSzNmd2owNDNKUi9qR2E1TVBmMnFjeHJuZ0VBcXVaUQpuU2VQb2ZCQWNqYlhLY2Fkanc2a3d5eXFGQVZLUXhISVhEY2xoUk1LMFVRZGdDeWhVR2RFb0lkWnNjQ1dBVzc0CmpBa2FIcm1qdk1MOWd6b0FBQk8yS1VtY2NXRUNBd0VBQWFOQ01FQXdEZ1lEVlIwUEFRSC9CQVFEQWdLc01BOEcKQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGQStTdHlWVE9IWjdTTEhoWXZMSE5aZkdSN1hBTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQXo2UG1GbG1YQWFlQU5kbTAyZUZQNkRmWWhzWUdRVXlqeXdaYjlZMFhWCkQyVVhzRWZsV0lOWVFDaWJQOFhvdDNnZWlqbDNhUm9KS0FBWVdxWjZKL0xCWE5xekZnK1BEMWRpS1ZuVGM5Y08KYU9hQ1kxZjRlUWs0NDgrWTFhVmpDZ0ZoMy8vV2I3Yk0zdHBOeXY1S3F3VXZoUkt2eWtXRDNwTEcrb2ZqMWdCMwpxUk02RVQ2L1E4UHlZc1VRRWlZaW5Gc0M4TURaREtRK3UyV0pWT3BWZ2JuK0c5dnFPcTR1MXFidDdYS3VVQ3IrCnhKRlg4bFo3eTluZFYwK2E3V0JSK2Zic3lZSEdDRTRJNjYvYVhpSXpqQkx3WXlWd2N6OFA0dnJMblpPUTh4QzAKNTRUSHVzM3BKYlBDbyt0cGo4WFdUcnVMUE8xSDhteWZ5VFo2dzd3dXhOREcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  defender-client-cert.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURPekNDQWlPZ0F3SUJBZ0lRRTJRYUVzWkorZG9OVE1wNWlKVFRsREFOQmdrcWhraUc5dzBCQVFzRkFEQW8KTVJJd0VBWURWUVFLRXdsVWQybHpkR3h2WTJzeEVqQVFCZ05WQkFNVENWUjNhWE4wYkc5amF6QWVGdzB5TXpBegpNVEl3TnpRME1EQmFGdzB5TmpBek1URXdOelEwTURCYU1DZ3hFakFRQmdOVkJBb1RDVlIzYVhOMGJHOWphekVTCk1CQUdBMVVFQXhNSmJHOWpZV3hvYjNOME1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQTFBTHJlWVdVMU94amNGOVh6NU5nWU1PSGNmVTI5YW94VmxTRVJMKzlucHc2Q1RHdElwMi9DcTJTdGNOSQpROHlScklqUzlGMVIyZzRsVUxVYnZjQ3FvVGNuR3lTWUZvNDkvT0Q3SllXNmN5TEh3ZzZZSDRqUU9EdGRaeExPCjU4R0M4UERnVmUyOStSYnZkNkRmTk50aDJJSUxXWndjaEtFSW90NG1MbE9HMlVxa0xqNTZNbVR2NG94OTBYT2cKejFFUVNUeFdXU2xZdlp2RWI0WTBKZUp0NVEvMjUydVVRNFNsOTY0OGlKbjY4MTFneEU0M21vRXJGY0lUK1l0UQpTdnlGclRvSkZpNlV1TlhCZjhraXQ3N0VETWlWWlE1M0ZnQ0F2YzNJWlBVRlJqOG9rNEJ2OWtnalFGZ0JtZHpJClowd21abkxla3BzL3dEQzhzaTU3YWZqVElRSURBUUFCbzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQjRBd0V3WUQKVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlFQa3JjbApVemgyZTBpeDRXTHl4eldYeGtlMXdEQUpCZ1VxQkFFQ0J3UUFNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUFZCjdWWXNsYUswSFdESHZ5RjBuSWVnYyt3dkRIY3ZPcGpRSVYwNjRRZnBQZGhVWU0vdTltOXpMdk1LQmZ4ZDcvM2kKRzhjUmdObGpkL20rN21HZFp6b29NWWlMd0UvdVJrQW9JK1NDakR3aWNtOCtzU1c1aGp6elVOelRvTmdBb3JXZgpBYmhBRXAvNnhkWGJyWFBjbTFQVjRhcGUwcTZlSmN5TWJwZzBnd3BvWWFhK1E5blhtTXdMcm9GekMvQXFKeFg3Ck9MZ3RmR3ZTaW9rTm9PUC92c2xtZU0rYzk2RmRJeHFtNURiR1MxMlg4YWY2M1paN0UzdGlqYWtFSlRlQ0ZCVS8Kb3BxcmdHWXd3RjRGa1NBcFVzNS9xV0piN3UxTnVCL3U5Rm9ESktqTlZBQlpRbGl3YnpHZDFwb2oxV0ZZbXhFWgpMQktvUlRoY2ZuM1VnMXdCeENtMAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  defender-client-key.pem: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpQcm9jLVR5cGU6IDQsRU5DUllQVEVECkRFSy1JbmZvOiBBRVMtMjU2LUNCQyxjMjhiY2EzMDM5ZTI2MzU2OGVlMDgzZjM5ODE5M2Q3NwoKKzJrMjduNG9LY3VyWUs1aC9nMGZweXFsNXpDc1ZmODd6Rkh0THVWam9iWjhFc1hOWHBrQmFaNzNvSVJwRHJSRwp4L0dJa3owYVhaTzNBd1gyNG9XWlpSaFNqc0NvQ1ZUbDd2U0IwcWxBUG9jRnk2NWNKbjN6RFY2K3Q0L1hkelh0CnN5NWIvZDBjMXp4Njd1d2MwYk1vS3Q2UzZ6VlBGcG9RcjhIN3RwNDhGSzNzeVZWeFNHWHdyNUlyem1tdG1ieHMKSXVOZFMzWm51LzROVUQzS21tcjFPeER1L29VYVBoQlk5UlBIN2Y5SjY5ZGt1MEUvdnhSQXlXVXZ4d2RZTWxyNgpMczYrdzN2NGVKZmJSc2NNcVQ0Wk80RGN1SlY1Tm9Ma3Z1aXVmTy83L1F6Zkd0dmV5Ym5mSFNRZjBqcVBBVVlCCkhJcFdlR1JpRWJaQS82dG04enA2OVFVOFg1d0krdXZ5WkVmK1ZWb2l2Y1NpcllLTTl0V3pCU2xzTFhBZVZQN2MKa1VpelZiU1NIWFNFcDJTZGVLNFdKQWhxSmVDZW1FVmNFMTQxYTkrNCtSQXpCZUtQeHdodkVZd2FHQWhRN0M3awpiV2daYzBrK1NBMUdGb2ZHSGlRNGdsdzNpVTgyaXRvNjIwbDNva21oWUY4ZnhsZmFHUWpWMEpuYW80MjVhMkNJCjlVTWNvOUZkZDlSNVZUNUNoclZnelgvUGRlZFI5Yk9VZ3NveVJZSGt0R3hIbWU5V215M3M3OUNYUVp6MmM5VmkKR1Z2aGp5dlcwVkRUWFNjL2ZaZkJJR2RQTlltREtxZXluejdxSFZQdTFzVlFQcVBhcHhlV3JKNU95UnloNzNwcQpWUHpVaXhwZVVOWDgrRTRrbzY1NmF1NXBqU3VCWTEya1NLNWZiZlN6cWZVaTNYOFdNSnpIK25OR2Z2UkFmaEE0CjcrUTJuVWxoWDRPSzdlbVRPTmpOUEdhTlJoRmJZM2tlbnBmVnlVMTZjc2YrWUkzS1NTU1MyR21NdlRoa1p1dzgKZ1lMOGs5QnFlcGMzTlFHQTNpTlhUWWdDZmV4cHFWajF0R0ppVUJ6UFVCak1JdnFmYmh5OFA3WG1EWm9HOU5oNAplQkxyNlJWZUpLTnM5cXBYWEtWbXBKNDlrV3FocTRHVjdYalBrT0NZRnEwV2pFSFk1eVl4U3c3S3h3eFdTQ2FuCmU0dSs1ODBFQmJsQ3ZvTmJRWktLUmFlNG1FQWtyY1RhbE5ackxHNFhBVjlxZzBnZ1N4VktnMEsyZ0FDbWJ6enoKOWpudnlFWmRZeXlDcDBTSW5nZDBYR1JiaGhQU1NDQmNwcjVlckFGdkF1L1daUzlpZnBWN3QySkdvVFVVS1k0WQo2U0U1Nk1Fc2o4KzZZQm1YTDl3ZkNXWWt5SzdsclF3ajdXRllLcTNDMmVzcmxJbWRTVDdDY1IzOVBoVTdYV2cyCjFqVUhYL3lpWGgzTURTSXpUUHhuaXlQQVhHaDZGRFhiV2FhUTg1aDNaTm1GbitQMW5wUlJqeCtKV3Zhb0pIZlgKcWs3NWRVTy9MYXV3ZHRlQi83VHRCdERxbjBpaU4vbFhwS0tYK0Mza3NqVTJMSEJZdXdBRzBTSXp5NFIzbGVTZApRNXZWbWxCcXcvb3RXdVF5VzJ3MkNpSmlOQzdsek1qY0VFYUpaYzFPR3NiaXk1ZGZXN1g3bTVJSjJZcjB5RVhOCnhRV05RVlNNVlI0RkljZit3MnBVTCtaMURhUDNLSmdsNW4wL2xUcktMMC9CVlp6L3QvNHQ1QWo5RHFlb2pIMXAKbVVoRDZRV1djZlRZbWhmV0VQTVBBMUZObUpJQ0xEODhLSzBzVFpRQ0gybEZ0S0dydlMyWkQzVGFsV3dPdjkzbQo0MjJwRFl1djdnYXRvYXhYQ2dyMWRpcTJYRWdyNEcrVU9LWFpWa3FYUE1DUlFRUjhRc3g3ZzlIZ21hV0UyWlBkCkJ2RzY1TUMzL2F2bElmVGtEaWFKcHJLWUw3ejhrcEFRUVg1TjZFUmJsZy82TzUrNU9NKzFHM2owNW1TbDRQNjkKVDNqd2pXTHdCb0tDZFMvMGN0em55bGhKTUZldmNiL1hpWlVGQmhrNkRSanRhVzZNMmlnTkdzd1JSTFBrbFdpcwotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
  admission-cert.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lSQUlTY0Z6ZHBydEJsRFd2enpxUzJPWjh3RFFZSktvWklodmNOQVFFTEJRQXcKS0RFU01CQUdBMVVFQ2hNSlZIZHBjM1JzYjJOck1SSXdFQVlEVlFRREV3bFVkMmx6ZEd4dlkyc3dIaGNOTWpNdwpNekl4TURrME16QXdXaGNOTWpZd016SXdNRGswTXpBd1dqQVVNUkl3RUFZRFZRUUtFd2xVZDJsemRHeHZZMnN3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURkUEFaRGZTdEtyNVZkQU8zcGxmTk0KNnlwOWJHSm82MCt0TFdlUUZ4aE0rNVhRaWNoOFFnT1cxOE5WVEFqOVJvd29yOEpFNVp5Y28yM3FTQ2VWT2dHdwpUVTVTVFByME92N0h2M2trVElSMWlWTURpZEFiQVhTV0hycGdQQ3hFL2NRaWdXSUJkN2plakptT05uK1czcElxCkUrSzViWEtsK3pLSStsU3cwZ1JHY3hrOWhUZ213WjRIdnEzeng1RVB0biszcWwrSTZaL2ttcUpEeUREdldscTcKaWlpNnYxZEhYNjQ4cWpvSGY2bWFEZ3JiVTA5NXVLNXN3ZGU1TWhRTko0dDNWMVJKZ2loM0RFNit5N2NFSU5FMwo1ZndIbTF4dzA1akFJNDlpSFRjQjduMGJVaGEzc3Q5Z25Pa3kyemFWQU1WLzZkTXR5ekJ0TjJ1RVdIWnFaT01wCkFnTUJBQUdqZ1lRd2dZRXdEZ1lEVlIwUEFRSC9CQVFEQWdPb01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUMKQmdnckJnRUZCUWNEQVRBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZEl3UVlNQmFBRkErU3R5VlRPSFo3U0xIaApZdkxITlpmR1I3WEFNQ0VHQTFVZEVRUWFNQmlDRm1SbFptVnVaR1Z5TG5SM2FYTjBiRzlqYXk1emRtTXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUcycUNvaWZYQ2ZOK2Z2MnYxUTJkR1NmeW5IRkRTMGRtSUFmTm8waVZRZGMKUWdQNGMvYlpZMUhTS3BLZlZYREhFVUJhdXJFcFNqcEJqWlVVNUwveWFNMzVYN2EyUkY2czk2M2htMDNKRjZXMAo2clBjRVZMTk82SUJqWDhUdEVZanI5cGpYQ1JMTXgxbXdQcGJadG1PNEhIdklmcU5UeTZoa0JpcUYycWhQMHJsCmtua1ZYSzVhQkJQUzBaNVFhdEJpcU9Ld3IveDJMcmZhVE5UNllITHFZLzd5RSs1WENmUGhvWmVJMFBLSGJVNlYKdStObnRKOVAyZ1FvMXIrb3A2Y290N1BwM3lLY3N4QUs3d1hhVjJHZGJJV3FYVURRRHZVcVNGbHFSL3BFa292TQpsYUxibGNTK1FmeURXaWI0MnV1cDlITCtZc29lc1VVYWdZaHhkZTVXckQ4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  admission-key.pem: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpQcm9jLVR5cGU6IDQsRU5DUllQVEVECkRFSy1JbmZvOiBBRVMtMjU2LUNCQyw2ZTU0MmFhZjFjM2YwY2NkNzZjNzAzMDU2MjhjMGMxZgoKMGxxSGl6YjNQZ3ZjZDFvR3lXcW16dzluWGNqeFFWdG5sbkZwYm1PZEEwOE1zTGdRNU51Rk90R2VaSHpXS0ZiegpOU2FJWHRCbTZaUnE3b1RSZ3ZXSzlDZURCU3ZOQi9XdXNmT1lTbW5vWUZjYU5HQ2NZVXhKMDJxVGZELzBsRVVTClh2NFM0bE9pNXdKWThweXdTV2dyOTMxWk5YNnNXM3JpTHZnQ0RZWnAvdGo0Q3R2NThSNldtNHZYREs1eUh5d3UKTmNkQzhHVGl6T0EwaEd1TzdCT28zYXlGVUFOTW5EQTB3b09BLzI0K1F5RnlzZTgyNlJWWStqYmdKZGt2ZkRHZgpZMG5LVU5vYmRvbGVLemQ3Yy8wOWtjRVhFT0JZcVdrbGpabFdnNkFLN2E5TEZ4Z1YreS9DeC80RHRHaHhxTDhQCmlwdzdQTEFXK3lobjRaeDZMY3FncGZlcFUxZzkwYkJmN2F5WHpBejd3OVFkMjMrMWdNWFFVWFk3dE9NcVJaTW0KTDJWaGtvTHBOdk9qVWVzYnBWL3d1dUpsMnJkZU5vbmNQanJrY0RhbVRRWUJ0Y2dnanVLVFA2a0NKdVZGRTVXUwp3LzlZekM3cFFCNHI2K21RZ2FtZ2w1ZitOeWxOaXZSSzNVb0RtTEdUYTVpWW1VNjJOWmZHekFPdldKM2JLemdaCmxSUTZlSmd4eTFidEYxQ2dDaG9rNmI4ZktIeFcwOUZLdFpTa3pMREtadE9naTFwRlo4VVhySVFVZmJiZjI3SzgKcktkUXdJb2VnUjFLSENXdGpOMCt6NkdSeWNLcjU2VjB0czkvdGJqa2ZhbldNNkpnT0REdmtVMU1CWDY1cngxLwo0UkJKZndBbWNNUW8yM0ZZRTEvNm1YeVQ4NlNUaXpRaXNaTjlQbDliYjB6Wmc1ZHhsQ1BZZ0o4TS9OSy9JZjA3CktCVGQ4a3JmRlc2SnNodHdCeVdoU2ZNVjVpb2JTaWQvdUdGVE0rdkhad0RYMDhjWlYyak00Ny82YzZrT1NBc04KZXNuMlBkbnltVU00dHZPSHE5dXpBSzlMd29oWkQxek5Xai9IUzAreDhqYzVEUXZUUjZGQUMyVU5WRG5jKy9DKwpEM0NTOUgrVXY2eHJiRVV0UGFaUWVPenFRVm5IaEtPUkxiTk1seFk2MUk1SitLOVhlVFdOM1pVWlZvVkw2a1NECllja2dwd1NBbXNPSWJMY3RTOUxreWtvOXVSbDV4ZlFsR3QzeEpZbE5laHNRdm5VR2R5Qml3TjIwQ2o0TWt1SHoKQ0loVWoxalhJTDFkeGovK0hPNTFmS1ZJcVdHZE5xL25Nb21WM0pJU3ZRUDJMYUduNk1RN1F1UTRVQ3dVM3BDYgpUUjlHODBoZFRxSFNRbVdwNi9DYnllZ0ptODhxZUFJejA0d2VnQm1oQlBtR2REUHVZdnV1ZzJJbjh1ZUJPb0k4Cm96MDNNbGVQZmo2L2dOQnhsaE1sWmEvM2ZRZ2xkRkxqVXZxZHFFSmsrR2dBYnUwcDhLVUV2V1VoQ1M2Y1ZzekMKdG1kbkpMMll5WFVYTVR4bTM5V0c0WStzZnNZbEE2Q25SU2orU1p2UW50NER3aVRsVzlxRnRiUzREVUQzTVl2NApLdEVLWkYrVFZxZnZ6a0hDam56WTZhaEdvOGtlOC8xVThtSm8rcEpDNS9YS0RqNktucFBpQ3lnMmpudHFRSXhUCm1RM0l6ekl4aFAxZFVVcHYrd1lON3RReDhySUFFeTJZcFdDU0hqQ0pOTStKVkV1cWVzdVg3UEozMlZLV1RZMVAKb080Y25jNjRBeUdxaFREazB4NkZmVUZuZEZpNUJKdGFLUlVOdGNjMzJZdUVoa2x0WGR6NERFUTEyMFJiN3g4bgo4ZDY4RHR5ak12dWdBdWRvaXFaYlBSUm9yV1hqdU4xYndMQ3dpeDZxcUU1YlJ3cnAwdWlNSnhsMHF2OXF0U1VkCkpwYlN3alZBQTUvdTdScFRYRlZZS0dwN0NQMVJOMEkyb01ta1pVNXlyZU1TOEFHZ3NtVVZNdndPcExZNVNoZjEKdy9CTHhDTnAxTGlibC8yUlkvNDZBWmVXeS9uSkdRclhsUlZ1cCtLMElNQ3hERkJPSjRJU2hiZjBzS2ZXd0EvagotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=

---
apiVersion: v1
kind: ServiceAccount # Service Account is used for managing security context constraints policies in Openshift (SCC)
metadata:
  name: twistlock-service
  namespace: twistlock
secrets:
- name: twistlock-secrets
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: twistlock-defender-ds
  namespace: twistlock
spec:
  selector:
    matchLabels:
      app: twistlock-defender
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/twistlock-defender: unconfined
      labels:
        app: twistlock-defender
    spec:
      serviceAccountName: twistlock-service
      restartPolicy: Always
      containers:
      - name: twistlock-defender
        image: registry-auth.twistlock.com/tw_xh82fd7uinul74pwvfiibn09fxe5c6dd/twistlock/defender:defender_30_00_111_grizzlies_39820_support-cbl-mariner
        volumeMounts:
        - name: data-folder
          mountPath: "/var/lib/twistlock"
        - name: certificates # Setting the certificates mount after data-folder since it is nested and was overridden in CRI based GKE cluster
          mountPath: "/var/lib/twistlock/certificates"
        - name: docker-sock-folder
          mountPath: "/var/run"
        - name: passwd
          mountPath: "/etc/passwd"
          readOnly: true
        - name: syslog-socket
          mountPath: "/dev/log"
        - name: cri-data
          mountPath: /var/lib/containers
        - name: runc-proxy-sock-folder
          mountPath: "/run"
        env:
        - name: WS_ADDRESS
          value: wss://35.192.219.57:8084
        - name: DEFENDER_TYPE
          value: cri
        - name: DEFENDER_LISTENER_TYPE
          value: "none"
        - name: LOG_PROD
          value: "true"
        - name: SYSTEMD_ENABLED
          value: "false"
        - name: DOCKER_CLIENT_ADDRESS
          value: "/var/run/docker.sock"
        - name: DEFENDER_CLUSTER_ID
          value: "f29cf6fa-d351-b919-e883-e0a3ca346c91"
        - name: DEFENDER_CLUSTER
          value: ""
        - name: MONITOR_SERVICE_ACCOUNTS
          value: "true"
        - name: MONITOR_ISTIO
          value: "false"
        - name: COLLECT_POD_LABELS
          value: "false"
        - name: INSTALL_BUNDLE
          value: "eyJzZWNyZXRzIjp7fSwiZ2xvYmFsUHJveHlPcHQiOnsiaHR0cFByb3h5IjoiIiwibm9Qcm94eSI6IiIsImNhIjoiIiwidXNlciI6IiIsInBhc3N3b3JkIjp7ImVuY3J5cHRlZCI6IiJ9fSwibWljcm9zZWdDb21wYXRpYmxlIjpmYWxzZX0="
        - name: HOST_CUSTOM_COMPLIANCE_ENABLED
          value: "false"
        - name: CLOUD_HOSTNAME_ENABLED
          value: "false"
        - name: FIPS_ENABLED
          value: "false"
        securityContext:
          readOnlyRootFilesystem: true
          privileged: false
          capabilities:
            add:
            - NET_ADMIN  # Required for process monitoring
            - NET_RAW    # Required for iptables (CNNF, runtime DNS, WAAS). See: https://bugzilla.redhat.com/show_bug.cgi?id=1895032
            - SYS_ADMIN  # Required for filesystem monitoring
            - SYS_PTRACE # Required for local audit monitoring
            - SYS_CHROOT # Required for changing mount namespace using setns
            - MKNOD      # A capability to create special files using mknod(2), used by docker-less registry scanning
            - SETFCAP    # A capability to set file capabilities, used by docker-less registry scanning
            - IPC_LOCK   # Required for perf events monitoring, allowing to ignore memory lock limits
        resources: # See: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#how-pods-with-resource-requests-are-scheduled
          limits:
            memory: "512Mi"
            cpu: "900m"
          requests:
            cpu: "256m"
      volumes:
      - name: certificates
        secret:
          secretName: twistlock-secrets
          defaultMode: 256
      - name: syslog-socket
        hostPath:
          path: "/dev/log"
      - name: data-folder
        hostPath:
          path: "/var/lib/twistlock"
      - name: passwd
        hostPath:
          path: "/etc/passwd"
      - name: docker-sock-folder
        hostPath:
          path: "/var/run"
      - name: cri-data
        hostPath:
          path: /var/lib/containers
      - name: runc-proxy-sock-folder
        hostPath:
          path: "/run"
      hostPID: true
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
---
apiVersion: v1
kind: Service # Expose the Defender as admission controller. Remark: by default, Defender will not listen on the service port
metadata:
  name: defender
  namespace: twistlock
  labels:
    app: twistlock-defender
spec:
  ports:
  - port: 443
    targetPort: 9998
  selector:
    app: twistlock-defender