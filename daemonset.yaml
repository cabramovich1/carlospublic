
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: twistlock-view
rules:
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["roles", "rolebindings", "clusterroles", "clusterrolebindings"] # Allow Defenders to list RBAC resources
  verbs: ["list"]
---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: twistlock-view-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: twistlock-view
subjects:
- apiGroup:
  kind: ServiceAccount
  name: twistlock-service
  namespace: twistlock
---

---
apiVersion: v1
kind: Secret
metadata:
  name: twistlock-secrets
  namespace: twistlock
type: Opaque
data:
  service-parameter: STVpV1dHOWtGWmNiVE85bkdVT3kxOWNNeVJoZ0QyWlB0Z2laRTQyWVM2SkkxRFlmUG9RTUZ4Z1NteHVLMnVxc1F0ZjVIeGJtUmhoTE82cFJlMmFWOUE9PQ==
  defender-ca.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIRENDQWdTZ0F3SUJBZ0lRWHh2SlZSSGNDVmVlZ05tTWxRMDRyREFOQmdrcWhraUc5dzBCQVFzRkFEQW8KTVJJd0VBWURWUVFLRXdsVWQybHpkR3h2WTJzeEVqQVFCZ05WQkFNVENWUjNhWE4wYkc5amF6QWVGdzB5TWpBNQpNRFF3TmpJeU1EQmFGdzB5TlRBNU1ETXdOakl5TURCYU1DZ3hFakFRQmdOVkJBb1RDVlIzYVhOMGJHOWphekVTCk1CQUdBMVVFQXhNSlZIZHBjM1JzYjJOck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXA5ZkxOMXFWakJKdFZBQUpESzhtUk9Sb29ZSktBK3FGamRwRGcwY2tVSUJWNDdYT2FOZE9wTCtlcHVvdApJUnlIWTNqVmx4SExMR05qR2FVZkRrbFRseDdjZVNlWDQ2ZUZ3RzRYaU1nZnptaG9TbnBrSEhGZFBNYm5NRlQxClV1UUEwaXNaSk5Qd2tYZmc1by94YlNBNmo5TFVFV0pOekN1eUNmS0EydUhaNmdDSU54OXkxeEtpSFFDT2ZUYVAKNWcvaEc5ZTlCOHJzRnJKUnFTc2lrUU8xTlRBM3ZMWGtYWXFuK3ZDdThOVUJNWWdkYzk5a2g2RGpNeUJ5QmdmawpCbjZYTHcxQ21ZcndsbHpjMHFYSE5aNDJ6WUZBNXhqZFh3SytHUERlL21VbmZLQTUvS1lzbVZkc2JiZ3pKcDdqCjhlN25obmtKMEN6Rmk1ejloUkxNWnpWZ093SURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXF3d0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVV1Z0RHVnRPSzVZK2xNZXZKY0p5MHpxdzFjcE13RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJVnpRdjFSQ05UemNrK3F6anBIcy9JVXAyZzc3SUhUK21Hb2Z5OEU5OFNpCnBlbFprQ3QrOCtBOGIwM08ra2QzOUQ1VVkxbFZRUHJjelM3MVppQ1ZkYllMeGwrUDNDK0lYYTZBNGpKYlVFeGoKNU5CT0tjN3NlTkdwM284aE0wdGVIWGVzYWFhZEtsend5NmZGb1ptSmI5Z3l6SzVpd1RSdEJ5amkxS0FCMHBPRwpYK3luUStIRXZQZEpITlNSdERNbTIxM2NFaWNhb0xETzBib0FIaUcvekd3RTk2OE1uYzcyWWZKMWZrZ2lmSzVJCmYxdnlQRlB6M08rQVAvallidFZIYnFiYmJyWnhWeENaQU14WWlMeW9FUVNjVDBWamJuNDZ2SHF0QXZYS2pkNGkKMVJRWlkySmNYT25Rd2VUblRaMmFzM3NjMlp1R05GbWY0Q0Q2eDkxRU1BST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  defender-client-cert.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURQRENDQWlTZ0F3SUJBZ0lSQUx1THQrcnhROGdUQ01qbnFuM013WTh3RFFZSktvWklodmNOQVFFTEJRQXcKS0RFU01CQUdBMVVFQ2hNSlZIZHBjM1JzYjJOck1SSXdFQVlEVlFRREV3bFVkMmx6ZEd4dlkyc3dIaGNOTWpJdwpPVEEwTURZeU1qQXdXaGNOTWpVd09UQXpNRFl5TWpBd1dqQW9NUkl3RUFZRFZRUUtFd2xVZDJsemRHeHZZMnN4CkVqQVFCZ05WQkFNVENXeHZZMkZzYUc5emREQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0MKZ2dFQkFPUG9ialljSklwakkvcmdta3dzK0Nsb1JVdFIzNjhoZTlsQnBvWitFRGsvS011K01NcmJ5ZlV5aW5wMwo2UnZqTGZlb1ZVWmFIRy9uUUxta3RNS0tyTXJCajY4WHlINDViR1R6UXJuN3htV0lUbUk2SGJmWVk0dS9ZZ0tkCjZXUzlsK0NhckQrSk9SUGN5TEtydHd1TFdxMWVWYUJFWE9STEpUaklGUm9mNC8wKzFpUFFMcnNBckpDWWY5Y2MKVitONDFENTZIVGxCb2RnRkVXMjVkaHRFbTJVamVHcVljcmhvL2VTcU5FMm1MbC9UTjl2ZXRmajBRRHJaeEpIWAp2bENXZkxIenRVN0FueERwZVYxWC9JcnFaQVFybWxzc2RlVWgyUFowaE9QS2M2ZFpDdmpSRll2SDM3REFsYk1mCjBjOGlCSXdlUWpCdXBXbEh4akUrazBnVlVpa0NBd0VBQWFOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdlQU1CTUcKQTFVZEpRUU1NQW9HQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVdWdERwpWdE9LNVkrbE1ldkpjSnkwenF3MWNwTXdDUVlGS2dRQkFnY0VBREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBCk9majdzN0ZLQ2Q1YXVzTlBjR3dpTXBLaHhNWnNaOHZSUkpUc0lIRTA2RWp3cDd2ZE1JRVlNM0dHTkhmV05ha08KcFRTb3FkQlZHTEVIVWZkcktnVXA1V0NlZWpkZ1hVdTJmZDhTQ1NQZ1JLV0NtSDBaZzVOV3NZWVVHZ0V0Ty9kOQorSHRQNGlESWdmaElkTUEvcHJNM2RhVnY2UUh6aGlwU1BwV2luTkpQZS8wcUtVZ2N3VENxUStldFhRcW5CWkw3CkFDUU5pdzdaaG1KWGwxUjBLTzliMWUwWXFrNEFmNEc3cUpVWUVVblAxWVNpWlRrVlhETGplTWpnOFd4aFJxRUcKM0RqMldDRFR4VjN2OGk2STFuaG40QzRJYXIvYVdHeHhhVmdyQzhuSUsybVRHVmNqdnRIVXFRSEdRWnkxNmtRdApmTUg5eThRU0l1b2R3YWNuQ1RJZyt3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  defender-client-key.pem: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpQcm9jLVR5cGU6IDQsRU5DUllQVEVECkRFSy1JbmZvOiBBRVMtMjU2LUNCQyxhN2JiOWE1OWE3YTE2OGE5ODA0MzI4NDRjZThlZGQzZQoKUXZwZUtTNUIrb1RWV1piMEVpTzIzL1c4T2k0T3JTQy96b25HdWo5MDBBZk1YTFk1SGM5S2Q5aXczT3RkMlVXQgpoa3lQd2lCTzc1OFA1ZG5pK2FTZ0xBR1h4OExlQVg4YU9qUTc4Um9NR3FlQkM2QXhQWUVMNDR6VDFJdWcvZkt5Cm1IaHVkSWo4MlpuZGdjNTNhUkVndkJ4emRkTmlld1JvTWFrNDdvUWFLNWNnbGkzTDc4MWFmRzRiaHp2MVUva00KS0FIUFpoQ2hIdS9hQnhWa2dFKzlhaWRxd0E2MkxRTzMvZjQzRU11dXNhbG5GVkN6bHJNdEllSDF0YVJyYlZZdwpzZkpkREwyUEd3ZUJHYmxZZFpSWWx6U1hmellHVFE1aU03eTBqYlVqdzNlNEduQXhrSldndE92djBmc0QxQ3MrCmc2LzljeXZPQTlUeFFpK3lDS1F1amRrdXc4aEF0L3R2b3hTV1pjRGZLK1g5QVFHMjRJSkM1ZlNVeGpXOExwRjAKajJ5SnljUEZtVFRQd2VmbnVOK1labUJENU5uWE5seGN0amdLaUROanFEWHptV3lHV3BZTGlNWmlHTUlpWldSQwpMSUJ1QVBiNFdlY2xEalVMb1ZaSWRHVlhZdm5iRWdEeDRCWmVJeUZaZm85Q0ZxTm1rRW5jNWliTnA5cTR2UHFCCldUYWY4WVVSUlgvYm5PMFdvZnRRWHFJZ1JOZkFLT0tFYzlzenE0WGwrWWdmcXlOREFYS0VobEk2L0k0aENudU8KRmxkN2JzcHcvVXR4TTZxNmhWOWF5c3Nub1lkdDVCQ1FRVk92aHRXeHVScjI0WG0yakQ5R08xNU9rMHRIL1E2bwpvczFEc0JqUWoyNjczSTk1MGJTa1ZuUUtDb1hKRFVnL3B4YzdBNDFXdnc3SWxTOVhsNXl6RHRKSzRPQnlIVXhWClJnRUUvZWlKdWhCZ2tQQ1VEcHJKSzB1L2xqNEU5SnJPTFVRNjh3d2xnWmFzbWxCbnlqa0o0QWswdm9jNlNUNEYKYU90Nis2SmVaVUpyZmd4V3hYUnBUTkRDTCsxTGV4VENXTlNCdUpFTnNrTTliakFDQ1pGaFczMEpOdC91bUN1aApkTEZtZjVrRDdGNW1lT0NPbkh2OFVBRWdvMmxYV2lnL2pQQ0Z3SEZaWE8yWlN0MW8weGx2K0kxSUlJOUxZeWxECk9paWY5YW5XZmFPMU40V3RFbXhJbTF1QXEwUnQzRUpOUEZMSzV1QjUzdkFUbE1rL2pmcXg0bjI3NHo5VzkrU3QKV1RGY2lya1hhRmgyQTZkTzlTaEJYcDU5UlV5Rjg0RC9oTEFOTVM3bTM0VTdkYmJZWVRCd1lTbFVsdFlvc013eApUQnVaV0EvS0ZuWTM2VUdRektVblJVc2lTd1R3cEhJM3FKdEFCano5YU00cTF0TGtCUnJvZ2E1L2JaTklyUWVUCk5uYy9wZzExcTNzN0F1YmhnVkxsQ3BWakhXUWxtcGcyMzVtL2laSFVqRkU0TTVrbW9vNzdJTUpBcms1MGVyUXgKYXNYT0JFdkN5aXpFWmF4Zy9KOURmaFFzTVRJRnZyTnNrOWwzbEppVFNOcTNSSnBSdEpVT3BNSWs4SDAzMUxteQpvWW5GaHBNdGdIWTVRMWplbjQxdmpnaCtjc01tQnp5eDUxS3Q4TnFLcU5rWlYvU3NIU3orZkdUOWYwNkp1MWpRCml0MG9mZ2wwWUo5Umdza3NrcHNKOEdrQ2w2M3RIMHR2aEI5TDVFU2wyYW03M0IxNW9VbDQyOGFZNU9LeXRNbGgKNDQ5TlZFcWYrVTd6dmpKUmRaRUVwZ0VhOXdldExCc2NhZlovWnNWK1dVbXZRZXNzdnpKek9vTzBBMUs4QWRVcApPWit1TkRuTzZUb1d4ZW9DNlBrV05ldEU5VlN4R0JDcXFMc2lqZ1dhWGdiTktvMnJBSnRxeVJWaGhGVkZXeHJGCllpV1BJY3ZNUEl4Ukw2b0lGOERqN1J6aWsrbWtQbG1NcVdlcjRVWm0wUGt3QWNqa1RZSmhVd1lBV1JxU1V4NHAKRGNHdkdRb2FEMklRTExXWHdsS3VEVFpWbmRic2R4VmRYb2NISDZkbUhCenlaa0tkWXFiWXRrNVYzMHFLOTd6UAotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
  admission-cert.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lSQU41YWFUR29aTFYxWjhBTVJ5Q3lySm93RFFZSktvWklodmNOQVFFTEJRQXcKS0RFU01CQUdBMVVFQ2hNSlZIZHBjM1JzYjJOck1SSXdFQVlEVlFRREV3bFVkMmx6ZEd4dlkyc3dIaGNOTWpJdwpPVEExTURVME5EQXdXaGNOTWpVd09UQTBNRFUwTkRBd1dqQVVNUkl3RUFZRFZRUUtFd2xVZDJsemRHeHZZMnN3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURwTUpJeW8za0JQRXlmS01QdnpGRjUKRy92TFFad3lKOHp3b21CYncrMmlRQStTVTVnSDMzb3hiUnJnU1RGdGhlWG1Kd2hwcUFCek05M2pqSW1JT1FTMQpJczlLcEd4KzFPbHdzL0p3NzQ0OXBSSHQ1Z3FKR212ekhQYmFMUEdzbnJ6WCtBV2xkS0YyelJqL2czemp1Qk1LCk15Rk5IRW1mY24vS3R2eXRDanRzd1A3cmNCSy8xTlNkVUhYUmw5OTRnRU9YRTFkMW5ZMFZUUUpiNmZJOTBDelIKVjI2TGExWlJaVS9iUHpLanMxMzB0VzY1UEFoaFFwbnhsait5UjVCLzFoVW04TlhyUU1aS3ptOTh5bStFQjVaQgo2UC8zVG1WQkw4WGxmNmtuSUVLODZLWndGUmtLMGFFUjYxT3AyU05RTkRLTGtJdHFRZmx0ckxMYWNieFdCUGlsCkFnTUJBQUdqZ1lRd2dZRXdEZ1lEVlIwUEFRSC9CQVFEQWdPb01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUMKQmdnckJnRUZCUWNEQVRBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZEl3UVlNQmFBRkxvQXhsYlRpdVdQcFRIcgp5WENjdE02c05YS1RNQ0VHQTFVZEVRUWFNQmlDRm1SbFptVnVaR1Z5TG5SM2FYTjBiRzlqYXk1emRtTXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUlMS0Rza2VwUS9RaWdqdjB6K2NSS3ByQkJvaisrWDF5Nys0SzBNMEpPVmcKTnYxS1ZzOWphSU5ZYVVRQTh0L1hldFgyNm8xZkJ6dzVUcS9tZnhSaDRJYnFPTisraDY3U1hxTk5jMTBiTlUvcQpBRDhMamliVDJBMjNzaDZFNGlCbTg4UGtLZEZxYzBlY2JrL2xtVkJ0cTlnTGRIMDJkdkNjM3NjWkVPb1ZrU3liCm85L1pQK3FqdzY5NWpBZXJXeEZPbUhhTnd5c05LYjEvOVRkNGIrQmFwRTVXOUJ2dGg0SXV1aXRRdVhpeUZaU0wKV0hKSzRKUmFPNW9RcGFpdXUxNmxZVnJlNFlkSWphRjh1NlMrSFlVWUtOUXFYOEh5S2JwWlI2cEVsOVplU3V3eAoraWt4Z0ZzelZFb09kaGRzUGhSWVZnS09lWXE4cmVWdkROVkptai9WaXR3PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  admission-key.pem: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpQcm9jLVR5cGU6IDQsRU5DUllQVEVECkRFSy1JbmZvOiBBRVMtMjU2LUNCQyxiZTY4OWFjMjVhMTkyNDU3ODczMGJjN2U0Y2FkNmE0NQoKODJvbkpqSHZhMjJra04wQ2FFOXNLdlFsSDUwOHJDMEEzUHRJbEY4dWhtMFcwUmhVZlQ2WE5xcktpUC9qZGFkVApOL3A4Ymc2MS9vUkdtQkVMOGpKMC94YTNrNzE5RTAwSW9TbEFhcktwRm9nbG4rSUl0MnFVZnhBYTduV1JEcmgxCkdNYU1ZWC9zdm1XZFpRNVVzVUNlOXJDWUd5N001OFFOMXJhZWUwTVZmYWFMakZBSjMvczNScXJGeVBKS2tSL24KZlMzZUlwck9RN1VPMFNPSXF2NjVzcmpSdFY2QWVhZ2FtalZSMGk2MUtEMUQ4N3VZZU1icWdyUC9YcHdhTE9jUwovWGpVamQwSkxzUnpvam9KL1F1c3JWRko0VGJZbVZrbG93WE9BSVFhdzRLWi9ETVFtRDhyTGFwZzMyUWszQTAyCnBxSEt2UzR0TEVEZWdzazhueERwYlFmWlVBeHdXSWp3b1o3Smg1cEhHNER6bkZlTWVyS2FEU25JMmlLNVdBLzEKWm5TTGU2UjV0cWdNYmVXUkNJTm1Dd21FUVJ3eWpwMjFUeXFoNW9ZQmYwVmdPa1kyaStlbisyRkJMU2tlN2pTNgppOVdaTDFWOHpYekl4M2dKdGIrZ2YxU2QxUi9kNlQwVkhoY1ZMSDVIQ3Z6eklMQlVtelozU0VjcmpZY2tjZDROCkxDcmEvUVByWExsQzBjZjE2NVJnVGtrblpUQm5EejNla2I5bmNoNFA4bjY5enNBUXZCL1JIclV1QmJZVG5zZmwKNy9CYjFORVJWN1MxT1UyNmJkU3ZvTTlJNlozWEhCWUNOL0JLTzhRL295UFZLTTJPNGhPWkRIczI0bExncytMUgpkUzh0ZWV6eENFMGlCaUYrLzVWbEl2WG9sZWtaR3Qrc05wRFNhMTZycS9YRHl4eXVtV0ludEkxVXZBN3hUTkFZCnlXeDRsMHJubnlEaUJUanlHVHRuOXhaZjk4MXUvcmE5T2VmQ2VTTzFaNTJEUHFlUG1zbThjalhkUEUrL2JONnkKUmpxY28xNXd2Y1pESGZSUE5CZFJwTkRvaFlqeFJNcVd3cEtycEF1dlhCbzV5Y0ROd3FDNjByTHZMYVdoS3NuRQpKWFpMaVV1bDROc01UN004WWdPMnFhTUVoeVNHa0pHYXNqTUd2VFlBdGYrQTc3ZEJZaTZRQVpuZWhKYjRtSXpjCkFmRUJYRWVMQVJUYW4wNzV5YlAzVEFuQlhhY3Z6L3Y1WnhoM0xlQXhubnprbjFQdERTQ2pGa3EvYk1PYjltOVAKUkxHVzhYZXcwMXBTSEozanUvUitja1ovRHFqWkF0VlU2d3pRdVNueEM2UFFGc3UxbzFTYWVsMVlINEp6c3BZVAp1Uk1XSC9IdDlJMjdjQ3RTV2JXUXlCTDlESWZKd3RrQjRGcUZ1UEkvRG0zOVhSKzJaMFVuSkpxdjQ5WlNxdGJzCjdiVGFFdkxlOTB3U3o0T3k5dW0zMGd4YndzOUdJQlpDMi9YUHlCNklwZG4xOHdGZjVoTGNEYU9jNW82bHVNUFYKVjl4Z01lbzdUVE9Pc0VMM0ZyTGlSbjg5ejJmZ3pjV3hmZkFBTWU5Qm8wQngyUmJvbndWaGxRQm03djFpaFEwRwppbmlUS1lnQUZWZnJFcFpZOTBDZnpIa2ZNbjZYVGhuMjNScWV3cmFoU1N3UU5SaEFYY1IzeGN4RVZvR0F3N1VTCkJ6U2dFNFZZd0pValdoYndtcDU3NUc4M2Z2ZHlMUGwxNUxsUFY4U29MdEo1UUNtdkFtamRjK2xFM2dqbVR4VzcKdStuaktKejdGWnh4cDk0eVc0Sy9RSHoxWmZIR3FnVTl3cmtBa2hlVFlpNzlJUGx1OGtEekJvNUpYREhUK0pwZApmVDI3MndySzBlRkcrWmZ5R2NrTzVYWHpoYUpuUXFQUFRKcmV3K2tESHgycHZuOXdLLy9JcE82cC9LMjdsVGFFCm52TWloOWdFZWZDVVh0WDBpN3hoY0NvL25pdTdYNEI3emdGa3ZlR2hjOXJud1M3U3JWcmVha1liRllSeXFpK0wKY0lvVUZ2TWpZRzl1cVdCblVZeTdscXJYZHEyT0VyYVhPcmZ2Z0lsaElWdENYRCtaaVlqQy81MXZucktDSlk4dwotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=

---
apiVersion: v1
kind: ServiceAccount # Service Account is used for managing security context constraints policies in Openshift (SCC)
metadata:
  name: twistlock-service
  namespace: twistlock
secrets:
- name: twistlock-secrets
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: twistlock-defender-ds
  namespace: twistlock
spec:
  selector:
    matchLabels:
      app: twistlock-defender
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/twistlock-defender: unconfined
      labels:
        app: twistlock-defender
    spec:
      serviceAccountName: twistlock-service
      restartPolicy: Always
      containers:
      - name: twistlock-defender
        image: registry-auth.twistlock.com/tw_j0x0r0d5pyayln0jaik1duc0zd8hq4r9/twistlock/defender:defender_22_06_202
        volumeMounts:
        - name: data-folder
          mountPath: "/var/lib/twistlock"
        - name: certificates # Setting the certificates mount after data-folder since it is nested and was overridden in CRI based GKE cluster
          mountPath: "/var/lib/twistlock/certificates"
        - name: docker-sock-folder
          mountPath: "/var/vcap/sys/run/containerd"
        - name: passwd
          mountPath: "/etc/passwd"
          readOnly: true
        - name: syslog-socket
          mountPath: "/dev/log"
        - name: cri-data
          mountPath: /var/lib/containers
        - name: runc-proxy-sock-folder
          mountPath: "/run"
        env:
        - name: WS_ADDRESS
          value: wss://104.198.214.125:8084
        - name: DEFENDER_TYPE
          value: cri
        - name: DEFENDER_LISTENER_TYPE
          value: "none"
        - name: LOG_PROD
          value: "true"
        - name: SYSTEMD_ENABLED
          value: "false"
        - name: DOCKER_CLIENT_ADDRESS
          value: "/var/vcap/sys/run/containerd/containerd.sock"
        - name: DEFENDER_CLUSTER_ID
          value: "0f868abe-f98b-dc21-f508-628f89590a56"
        - name: DEFENDER_CLUSTER
          value: "TKGI-1-14-2-carlos"
        - name: MONITOR_SERVICE_ACCOUNTS
          value: "true"
        - name: MONITOR_ISTIO
          value: "false"
        - name: COLLECT_POD_LABELS
          value: "false"
        - name: INSTALL_BUNDLE
          value: "eyJzZWNyZXRzIjp7fSwiZ2xvYmFsUHJveHlPcHQiOnsiaHR0cFByb3h5IjoiIiwibm9Qcm94eSI6IiIsImNhIjoiIiwidXNlciI6IiIsInBhc3N3b3JkIjp7ImVuY3J5cHRlZCI6IiJ9fSwibWljcm9zZWdDb21wYXRpYmxlIjpmYWxzZX0="
        - name: HOST_CUSTOM_COMPLIANCE_ENABLED
          value: "true"
        - name: CLOUD_HOSTNAME_ENABLED
          value: "false"
        securityContext:
          readOnlyRootFilesystem: true
          privileged: false
          capabilities:
            add:
            - NET_ADMIN  # Required for process monitoring
            - NET_RAW    # Required for iptables (CNNF, runtime DNS, WAAS). See: https://bugzilla.redhat.com/show_bug.cgi?id=1895032
            - SYS_ADMIN  # Required for filesystem monitoring
            - SYS_PTRACE # Required for local audit monitoring
            - SYS_CHROOT # Required for changing mount namespace using setns
            - MKNOD      # A capability to create special files using mknod(2), used by docker-less registry scanning
            - SETFCAP    # A capability to set file capabilities, used by docker-less registry scanning
            - IPC_LOCK   # Required for perf events monitoring, allowing to ignore memory lock limits
        resources: # See: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#how-pods-with-resource-requests-are-scheduled
          limits:
            memory: "512Mi"
            cpu: "900m"
          requests:
            cpu: "256m"
      volumes:
      - name: certificates
        secret:
          secretName: twistlock-secrets
          defaultMode: 256
      - name: syslog-socket
        hostPath:
          path: "/dev/log"
      - name: data-folder
        hostPath:
          path: "/var/lib/twistlock"
      - name: passwd
        hostPath:
          path: "/etc/passwd"
      - name: docker-sock-folder
        hostPath:
          path: "/var/vcap/sys/run/containerd"
      - name: cri-data
        hostPath:
          path: /var/lib/containers
      - name: runc-proxy-sock-folder
        hostPath:
          path: "/run"
      hostPID: true
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
---
apiVersion: v1
kind: Service # Expose the Defender as admission controller. Remark: by default, Defender will not listen on the service port
metadata:
  name: defender
  namespace: twistlock
  labels:
    app: twistlock-defender
spec:
  ports:
  - port: 443
    targetPort: 9998
  selector:
    app: twistlock-defender