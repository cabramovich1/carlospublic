
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: twistlock-view
rules:
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["roles", "rolebindings", "clusterroles", "clusterrolebindings"] # Allow Defenders to list RBAC resources
  verbs: ["list"]
---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: twistlock-view-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: twistlock-view
subjects:
- apiGroup:
  kind: ServiceAccount
  name: twistlock-service
  namespace: twistlock
---

---
apiVersion: v1
kind: Secret
metadata:
  name: twistlock-secrets
  namespace: twistlock
type: Opaque
data:
  service-parameter: NGNNUkQ3anUyMk1FM1B5aDB4b3poSlgwMk5QbkU1Nkt4SitoWS9ISDBaMW5hSFkwSXlVNkVnM0QwRExzZ3lDZW1TdW5QdUxtcXVRd1hIOWlRYXp0Tmc9PQ==
  defender-ca.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIRENDQWdTZ0F3SUJBZ0lRQlBTeUJmeGFJV1B3MWwwYWV5dFptREFOQmdrcWhraUc5dzBCQVFzRkFEQW8KTVJJd0VBWURWUVFLRXdsVWQybHpkR3h2WTJzeEVqQVFCZ05WQkFNVENWUjNhWE4wYkc5amF6QWVGdzB5TXpBMQpNRGt3TnpRek1EQmFGdzB5TmpBMU1EZ3dOelF6TURCYU1DZ3hFakFRQmdOVkJBb1RDVlIzYVhOMGJHOWphekVTCk1CQUdBMVVFQXhNSlZIZHBjM1JzYjJOck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXl3aWFscEtSbnB5Q1VsZDZ0STVPeDc5WFZQSFpoSHp2V0xsWU9tcFJzalBpbUpxY0hobVliaHQyVDVtbwo1MEpRSFNISGdvcUsrdmlwcUU1cCt4SmJtYzhvTElmY1krbVlYUDE4UFlYcnc5cnAvYnlIYnEwNjN1bmg3QURoCituSUQyQkVmTzVPTU9OVDBsaHRBTk9Zc203Sms3L3hrY1NwQlBLUmh3Sjc2NkN4UkwxWk8wNXdtMTJEaE5CRVUKb2Nnc2JmeTFBWE9IdGhNOGtNL2FVSG91aUE0dnpEN3MwdE54Mm1NMFlaaWx6RUxrTnhNbTY5ZzFVN0YzV0V6YwppZlpuUVRrMjIxT1gvWk9ibmtRZS9JRWlFMVhOcllTV0NZUDlOUFBlMWhGb0ZwTUhMZmc3RjE0QS8wckt2emtnClRwOFlvbEw3RlJvZThTa0RuaTRhakgwaU13SURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXF3d0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVjTk90Z3p0djUyc0M2ZlVvWmNyaTJ3YmRZNEl3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFFK0FQcW52bWtuNDVlc2lKNkJ2ejNrdDYrclNpVXlNYW0wbXRxRHZDOGczCjVTdy9wV2ZkdnZ5QmZndm1WT00wUkNYOVdHeE5lRVBtdzVBZHdOeE1kV3p0eDhSVkR6MzBXT3F3NW1COG5Ob20KcjdScW5pcUwzUG51aCsxT2V0RlVrOWxuay9sTHdqSXJZUkdSNE0xbm1rR3EyZVdzbklEREQwc3VrVnk3U3k1Qgo5UFFNZ1V2dFFXZTExV09aSDY5Yno0am10ZFlLU05EODQxSW81WE5hRGVaek1LTkY1WUpxbytNeG9oaFoySmg2CmsrS1VuZXoyb2ZkeW5GTmEvcDg1anNxMUhFSStqV2Z4YnhpNENQdUU0elNwRnZ3UGJuMWxscFdCYXM3WVQvajIKczF2ZHZTcFZzMHZZbjQ3bDZIcE02VjhXajJHZVM0Z2ovTXBkTCtWcjJLTT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  defender-client-cert.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURQRENDQWlTZ0F3SUJBZ0lSQU1Kbk0vMk9PUm9JV2pGaVBJSytmVWt3RFFZSktvWklodmNOQVFFTEJRQXcKS0RFU01CQUdBMVVFQ2hNSlZIZHBjM1JzYjJOck1SSXdFQVlEVlFRREV3bFVkMmx6ZEd4dlkyc3dIaGNOTWpNdwpOVEE1TVRNek1UQXdXaGNOTWpZd05UQTRNVE16TVRBd1dqQW9NUkl3RUFZRFZRUUtFd2xVZDJsemRHeHZZMnN4CkVqQVFCZ05WQkFNVENXeHZZMkZzYUc5emREQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0MKZ2dFQkFOL2UyUGdPSGxBT3F1Tk5BbW5BWVNkZXc3L2VsUHJlR1NIdjhMT1FSWTRYa3JqZllBYWJSMWRpN215RQpNZktzMTVpNjY0WUZiZDUrbVZHTXZybkh2cHNRa3ViU0poOHVtTEFDT05TNDVsWGk1d2JBSUNzSEhZRkhOQ3RwCjhyRVFISzZVc2RiOW5WN0ZDTUwySHdvSlhOQ3BRblpLaEZuVmx6WE1UTGpTLzBqditoUDNqRjE2Z0t6TDNtMkgKa3g0ejBJN3JZVFBDV1hJQ2pxK3krMkFZcnIvYlRlL2pDVmNhckNLb09vZnRJYnh0VEVZcEZEbjJKQWdvNGtncwpBaWR6YmVsV2JIa1p4TzhYb0FsUG9vTEVUZFBXNFpyZUtDRHAwSXJyNnVEd05yYXZUZGNJUTZIczhQYUZLVkN3CmpLSjBYeHY5VjdhVjNSMlV5VHhHOGN1dHdtc0NBd0VBQWFOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdlQU1CTUcKQTFVZEpRUU1NQW9HQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVY05PdApnenR2NTJzQzZmVW9aY3JpMndiZFk0SXdDUVlGS2dRQkFnY0VBREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBCkcrcnViTnV2L1JYOUtWckJKUitBL0VpZ2k3aVhtSU9qTHlpVXBEV0VGUzVyS090R3ZpOVBuRmpkRnlmakd5K24KQitYTERjVlUzWU1DMXJUZFRvSmxremNLa2FvS3dkN1JjYVIrUmJiV0Y5SGs5VTc0TVlLSVRrRjZJblNEVTNFNQp1Skk5N1hERHZmKzF5bFh5OExDcDE1bm9jVUZ0RUtmWlpNNHY2NjFwZUV2d2d1Um5pUG12NjFsbnkxamJkVFRhCkxsdWdENFVaZTNRL2pKeHRLOGZweFBwdjZZV24xVEZGM2I3OXFoMWN6OHo3ZCtvblhWdGR1UWpMNFpaUFpNQUgKeVFXY0NiQ1dRYmlnelRZekRMOTd4MnFUOWJQR1F4Z3dqOEdJQUxDeGdsN1hBazByQ2ZLeGFVS2s5T0RhelQ4SgpWMjVIRWJiMXBQelVnZkdwU1NtYjFRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  defender-client-key.pem: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpQcm9jLVR5cGU6IDQsRU5DUllQVEVECkRFSy1JbmZvOiBBRVMtMjU2LUNCQywyOWI4ZGEwZjZhNmM4YTUzMjJkZWYzOTk2NWQ2ODg4MAoKeXJ2dXB1UE1icWtpRjRub05hS0tUak1sSHp2SzJycDkzNWpFZ243ZTMzS1B5bGhwU3F4ZU1ETUtXajlwZXh5MApVNzEzUEdwOUcwZWl4U0dEN1NTMnBqcThJQ08wRjJzazlJTkJFODFpWFVxUjUwVThvcUZ5TEY3Qkh2K0QxR1I4CnhocGg3U0hab1BEN1dnUEJaM3d5UlNsdjAzRTR5RndMK2VnMXcwam8zeXlLem51cTNqSDYrMTRtUWhUV3loeC8KSm5GQ2dDMThiSFNFeklmQjJ2ZW9uQzZQUmN2M3gzR0Q0dzBXRCszR3VERXBzc1ladGJuUWM2TjhKVnptSmRiYQpzWG1hRE9RSXQ4ZHhRcGlKd1ZPeVdweVJtN0RiNGd4Wjk1S1VSM2hQWjRMbmZJcHF1VGZlSzN0d29pWXNGYXJXClIrL2paV29XQmZhYm1PWHArcmpCeVA2eVNDbTg1Y1E1Q1FDWndXT3daMHU2QWN3ZXpzM1VDVkxleHdnVXh4OUcKcDlvTCtieTNEc0oyc0xEV2FVbWUrK081NDZHekVqem5XUDZpUFFZR3poR1dST2RUbERndi9JWFpzMWd5ZkNFNwprZ3QwdEc3VmNTaXFQRnpSZVpvZFNmbnhScGxGTEF6dVNlNUxNbEhjZVlDaGNSWFY4dUo5aDFhT09RRURHN2grClRJdEMxcXFaa01BRy82U21yUmhKMkdMbFBnZ1QxanR0bHdBa1RCcjdQeTdYSmRwSTRkVEpZTDluUEtmQlBHUTAKTnoweXhobU8wOTBSU00zc1k4alRpdmtUN3VnVHB4dUVCeDVsUEVpdFptSkx1YTN0RHZDYkgwMFRFSlREVzdOawpvVHZoMmxsdkJYcVVpWXlaY1M4elBZMWhIYXFRQjNmNWxuL2psaHJMRU85Wk8vYnNBb2RQYTlGdVM0OTFaTzNBCm1qQ1YzdUpFMDBEWkhxa2pJb2pzTVc4bGwzbDRHaEF1ZjRPYTZ2cThyUDQ3dXpScURxK2Vpa1RjL3NnN1FwODgKTGtEdHJ2VGJhQlJvenJJVDhHV2R3SWxWWVlKQUdPRXA5dDZrSDZwWHkvclYxdVBZOW5rS3cwZnVGV004OVBDOQpUZ0E4QjFiaVI1aFQ1d015cng1TkR0azc1SUE0b1ZZNEpkQ0VNMm1VWmFmYWNYblM2U3ZrUnVLNzcxUFR6c0lrCjRMSlBlNTlrOXpnYmNINDZGS0trdjdTYkl0Y284YnBTWjgrVHpnbW1ib2E3eHRTYlRXS1JlOGxuYW83dTB6VFYKRzVJSjErRnRiNGFFeGNyekU1cUJXb3RmajV2elJuUjYwaGZYL2JqK3gzcVJqMXhWcnZXQURsNFZxZGpDQXJRNgpxZHJPZU9yOXdTT2V6UU94c3FDZEhCcVU1dzZKNXB0c0RxYytFcHlQVTJSRkl2bWF4TVIveEFOci9ZaUs1ZWUyCmtDajdHOFhNVmVxalRrZzV3Z1lKaHk1ZWE5dlo1T2VaeGZBTmhmZWhNeEF1NkNYOEZlN0dTb1ZhTkZHUkpDRHAKWFgzRkZzQWx3ZzBGY1FvZVorcmdRdHZacUIreVJFVEx2OFNwUE13RDhnRkVMb1ZzR3RCdEg0bXJpV3EvcURTWgpSbTJuTXp3ME9PNG5PL2M5MENxTzZEaHo2dlVnUE0wRkpOUWRrdXF6Wk9iV2Q0UFJTK2cyY0tYZmlaUmNiOG53Cmg1aTN5Ym05N3pyVkNuUWtsUUd6dlJNZFNCNEFMUFFhL1c2NE56bnhRNkVVUzBDRHdhdDhQL00ralpGdlpZZTMKWUhiWGZPb0p1bTFJSEtDdENXQ1IwTlAwQWJNVWZiTHFBOENjTmQ2R2hOdG5CY0RLeHBwQ1MzcFRiWE54Q1JKQQpXamwrWjBjbHpQSEM0RXloMFM1aDF1UVJETHZmRUZQODVHYVZac3RZNFZudHI5YzhsWTNWQkJyL3pTVE1OTCt1Ck1YeGdaYXBZdG5wSVpvS1Y2TlozV2k3NDFvbVhTaUJWZFg4cGFNSWlBV3BzZDcyRHA1Zm1wMkNnUlJvSEJLay8KdU1paGdZQ21TNkNmMWdPRUN4MFJadVZtRFhwVVZtdW9NY1ViZmRQUkVKc0FnUkliWjdmandTYVhiOXRoQ01pKwotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
  admission-cert.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lSQUlVTEZRY3JpV3g0SVBJWGhoQU9VaEF3RFFZSktvWklodmNOQVFFTEJRQXcKS0RFU01CQUdBMVVFQ2hNSlZIZHBjM1JzYjJOck1SSXdFQVlEVlFRREV3bFVkMmx6ZEd4dlkyc3dIaGNOTWpNdwpOVEE1TVRReU56QXdXaGNOTWpZd05UQTRNVFF5TnpBd1dqQVVNUkl3RUFZRFZRUUtFd2xVZDJsemRHeHZZMnN3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNjTXlYNDMvb21sNUdkbVkwK0Q2S3MKeE1kNXJYRTFWZXZFQ1NmZjNWdEl5azVhRkhYYStQL3ptQnA0bmZVYmY1TFExTVMrcng1T04rbDBycXlWdTQxbQpoWTdWdFdUandxWXpIa1I0MHF0S2xLejAxYUdEV3h2ZWVxalBoV2VHSUp0MkJRZU9pREhObFp6NGNhUUtwbXViCkhlTEFxcWE0Y1F6VkRhK1pLMTdFTnFQUnovZ2k2Z1NhL0NvOE9NT1o1Wm0xQUJNOXprSWhiMktWQ0FSZDF2bGEKdEZDd1BVZGhPL3IyS3FYYlRaNG5aWVppMzJudXRzUWZlSVAvd3RIK3JIQjJXOXhzZVo4WHdqOHBUSWNQUlptYQo4RWZQNGJIVVY3UXhqMFBEaUhqNDR0eExqVlNGRVRtcVprV0NoR3FkODBZSzRKcW9ZYVI3WkVPUHJicVM5UFFqCkFnTUJBQUdqZ1lRd2dZRXdEZ1lEVlIwUEFRSC9CQVFEQWdPb01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUMKQmdnckJnRUZCUWNEQVRBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZEl3UVlNQmFBRkhEVHJZTTdiK2RyQXVuMQpLR1hLNHRzRzNXT0NNQ0VHQTFVZEVRUWFNQmlDRm1SbFptVnVaR1Z5TG5SM2FYTjBiRzlqYXk1emRtTXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUVxK2prR2NJcmpYMDZRalIyVkExcGJFTUd3Y3ljcTkvVGR2dmV0WWxqMkYKQ1lucENKa01wV2xLeHVGcSt0S0FtczJDdFdwZ1N1RmU4T0dJWk8zaFZZNFNQRVkrTnAxZnQxVEFDL2xoMUtXTwppb1ppOTRyZ1pqQlZnbDZXWDBXQnFJMUI5eEJyOHVybEVUSS92QkdOWWVxYTVlaHIwbWN0RDBtaGxRZWYzZDRJClRoRFYxdTdJWEF4SHR2cit3UlRjc1ZTaU9EQUhXOG9KTlYrM1pjQlNPWnZNbmUrU3Fxclpxbi9wL2wzYVB4MGkKV0dodmhFc0p4SUUvNzlaSzh3VXpacitkL002dHRUVWIzRmpXRFNPdWszU2pVRVdIL09KT2Z0S0pmNkI2em5oMQp3aDRhT0w5OGw0Yzg5Rk13Uldub0dHYTErRW1oUWJuWU9OckJaNWg4M2VRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  admission-key.pem: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpQcm9jLVR5cGU6IDQsRU5DUllQVEVECkRFSy1JbmZvOiBBRVMtMjU2LUNCQywxYzFjNjhjNzQ3ZGIxZGQ0M2UzNDAyZTdmZmI2ODAwYgoKUVBtbFpVNkZpQm56SGJ1TFNjREVKOWdTbDdNc3hzMHdQMGViOVVKWERtcWU1MTlHQ3NIVk1pZnY0dzlEd3JtYwpxQkNEWnRIQkVFVSt1NDg5bzVtYXJqYlZ4TkxEL0pXVlJDNnBFbEI3alZOY0taTGt4bjZNRHhUMEZBSGtxc0JRCnAwdWozRklzYWVaRjZuRlVGOHRrL0JSVW9qeGtGNk84QzZmTWhjWEc2TUZXMFl0cDNtVThhaUNFbGtEYWxWOWMKVWkrOFpNWTZKREZvSW9KclVNb1F1YnV3akNPTW8vVHRhOGoyOVpicG9KclR6bFlrYU90Ri9INWtMcDBISTVlSQorTlNvZnVBbHY3cDFmNk5PaTdZWWtZeDdiMjlJZlhjV0kvdjVGUE9NeFNzZnJLQUFZd0tKU2RhbFBISG4yTHVPCi9iYWNJYWg0Sk42OWF6THhlYlFSYTdmMlpCY0MwM0JMWDRxUUE0Yi9BMG5IeVdtYnZPTUtrVFpqZ1pGU2hFa1IKMjRWOHpXS1pxZlI5SEJkNlNoUjBTN1dZa1NzWW5JTzVkTkNmTnRydzJQbzBKUmFjcVFDWCtSZ1k1NDdOYlNkVwp2WUFCTzlqcFVDSWE4R3YxMVAyRUxuTTJoWmlocnFoVklLWnplYnVwVzFUT0JaUTFMUWwvZUV2MFpwSmh1MEJ3CkNnUS85V3d2SWhJbHdGVnlrdHdsbnFUdERQSk9pZE9jRG85Q3pjalFLTUN4Mys5ei9EZXFWRkR6c0ZyZ0gvMDgKQ1NYU2lmUWJHRE5IODJSY2NPTmJ2cE1WY3JmbGwwSEJLK0FHZGRJM0VSMDkrcWorUWRhQWlrVVROQk9oak5PYgpmRm9iTkhzOFNDZE8xdlFDVDBzcncrVUQrcGlZakZSK0Jhc3YrSXcxNUdheENOblRTaG9ocEVpK2V4S2pROGFPCjA0V0FwaVlDa0pjbHkvZlcvMmYzTEk1VkpVenhnUUFaUXdhK2lhMG5RM3ZrY1pZUW1wdEI1K3JoS2pyU3VHV3AKbGY2TjhWcTBVV3A0TlhmM0kyZTYwbkdNSnhPckRyWE11UWZNa1RXai91eE1hNTdzcjlFUE44NHNWbGFEN2dxQgowTU9UQVdZWklhWmdtSFRiV2hvQ2JNNTlpdGtieWNjVkF6NThDRkZ1VUhEc2I5Z1pCZHd2b2V3aE1hT1ZoMWxkCmhoc3RTRjZCVEo2dXVCb1JLZzJKd3dnOFJ3ZE4zSDBDZncyV1YxK1FNbjAwbFRhODFQRm5jT3RjbHBwUjRJbzMKZTZFNHBlaUhicHpwSlk1a1REK1RDSm5oT0ovelU0ZWtHbGFLU09rOS9iY3RMa1Z6NDU4Tko3SXp3RE1nRmF5eApXM2wyYnAzTU1ocTdrVWFPQ2FZOS9XTnd4WFp2eGJZYmFUK0EvUVlETFM3a0lWNUZ1elRsZDZjWGpjRGtGY2gyCkZmZXVwQmVhdE92S2JENmZZeW9JRGNnK3pPZUpuMklCZ0NWeGQyR3djOXFBNlV3Q0JRK2o3VHVlNENpR0ZPaWcKdS9tQytoN0Z0bzV3NHVlc0VGNkhaU3RHZjV1RFFXSmtiOXJ5dnA5ZVdwNTMvM0pKd1RDWDhjazBESFRQWmdFcQpJVzB1akM4TkVNU1Z3UFhaOGo0Q2V1UHhiNzF2cmtLSlhUS3N4b29VbldMdU85QmtvY055b3V0Z054dkJJbVkwCklvRElpZnJOV1RRRlNXOWJZOWY4ODhzWUhZdTJrZWdJbkRrc09Sb2ZrZnJuOWRLSm9nMUphbWpOL3ZpT3Q1L04KQnliTXQwU3QrTUxUaTVpbzBlNjE1TFY1UmJKN1NJMVp2SE5hcG9YWWZ6YjZlZUZSdDJUQTRpWWcxQzZVWHdEKwplZXlIMngzdlowK005OVUyaG5KR2FJT3UvSnFuZmUrWkdLUk5rakpsVEY3S1FqVC9aRHBiRGh6VWc4L0EwdFlaCktaZkZnejM2TGpoRGZwa2xXenkySkMyRWZTenNLZXBsNUVKQU1MWFBYaVc5Nk1jRkJHbVpxbXZrV2hYRkxIK0wKUnJUY0lSSUpPbW1mRlZLaHVTL1NwZHpybVdBM3dXVHI5Zm56OGJZdWF2QmZRcG1LZ0FDeFVHdmIwVVVQeS9WdQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=

---
apiVersion: v1
kind: ServiceAccount # Service Account is used for managing security context constraints policies in Openshift (SCC)
metadata:
  name: twistlock-service
  namespace: twistlock
secrets:
- name: twistlock-secrets
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: twistlock-defender-ds
  namespace: twistlock
spec:
  selector:
    matchLabels:
      app: twistlock-defender
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/twistlock-defender: unconfined
      labels:
        app: twistlock-defender
    spec:
      serviceAccountName: twistlock-service
      restartPolicy: Always
      containers:
      - name: twistlock-defender
        image: registry-auth.twistlock.com/tw_x7duzibpddeqty1pyeacmptryvq5hmip/twistlock/defender:defender_30_01_144
        volumeMounts:
        - name: data-folder
          mountPath: "/var/lib/twistlock"
        - name: certificates # Setting the certificates mount after data-folder since it is nested and was overridden in CRI based GKE cluster
          mountPath: "/var/lib/twistlock/certificates"
        - name: docker-sock-folder
          mountPath: "/var/vcap/sys/run/containerd"
        - name: passwd
          mountPath: "/etc/passwd"
          readOnly: true
        - name: syslog-socket
          mountPath: "/dev/log"
        - name: cri-data
          mountPath: /var/lib/containers
        - name: runc-proxy-sock-folder
          mountPath: "/run"
        env:
        - name: WS_ADDRESS
          value: wss://staging-consoles.cloud.twistlock.com:443
        - name: DEFENDER_TYPE
          value: cri
        - name: DEFENDER_LISTENER_TYPE
          value: "none"
        - name: LOG_PROD
          value: "true"
        - name: SYSTEMD_ENABLED
          value: "false"
        - name: DOCKER_CLIENT_ADDRESS
          value: "/var/vcap/sys/run/containerd/containerd.sock"
        - name: DEFENDER_CLUSTER_ID
          value: "44affd4e-c4df-e5c0-4773-e4835754c57e"
        - name: DEFENDER_CLUSTER
          value: "tkgi-x86-ubuntu"
        - name: MONITOR_SERVICE_ACCOUNTS
          value: "true"
        - name: MONITOR_ISTIO
          value: "false"
        - name: COLLECT_POD_LABELS
          value: "false"
        - name: INSTALL_BUNDLE
          value: "eyJzZWNyZXRzIjp7fSwiZ2xvYmFsUHJveHlPcHQiOnsiaHR0cFByb3h5IjoiIiwibm9Qcm94eSI6IiIsImNhIjoiIiwidXNlciI6IiIsInBhc3N3b3JkIjp7ImVuY3J5cHRlZCI6IiJ9fSwiY3VzdG9tZXJJRCI6InBhbnctYXBwLXNhbTEwMzIzMy0zIiwiYXBpS2V5Ijoib3BZSnViZmt0N3N3ci93VDJCaWNNOUMwdW9lSzlDa3pxVERmYm4wS2ZuQndvVGFaTW03Q2EzZE13K3ZjWVUrYWp6VS9RZjdWcjhuV2E3dkpNT0dqRVE9PSIsIm1pY3Jvc2VnQ29tcGF0aWJsZSI6ZmFsc2V9"
        - name: HOST_CUSTOM_COMPLIANCE_ENABLED
          value: "true"
        - name: CLOUD_HOSTNAME_ENABLED
          value: "false"
        - name: FIPS_ENABLED
          value: "false"
        securityContext:
          readOnlyRootFilesystem: true
          privileged: false
          capabilities:
            add:
            - NET_ADMIN  # Required for process monitoring
            - NET_RAW    # Required for iptables (CNNF, runtime DNS, WAAS). See: https://bugzilla.redhat.com/show_bug.cgi?id=1895032
            - SYS_ADMIN  # Required for filesystem monitoring
            - SYS_PTRACE # Required for local audit monitoring
            - SYS_CHROOT # Required for changing mount namespace using setns
            - MKNOD      # A capability to create special files using mknod(2), used by docker-less registry scanning
            - SETFCAP    # A capability to set file capabilities, used by docker-less registry scanning
            - IPC_LOCK   # Required for perf events monitoring, allowing to ignore memory lock limits
        resources: # See: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#how-pods-with-resource-requests-are-scheduled
          limits:
            memory: "512Mi"
            cpu: "900m"
          requests:
            cpu: "256m"
      volumes:
      - name: certificates
        secret:
          secretName: twistlock-secrets
          defaultMode: 256
      - name: syslog-socket
        hostPath:
          path: "/dev/log"
      - name: data-folder
        hostPath:
          path: "/var/lib/twistlock"
      - name: passwd
        hostPath:
          path: "/etc/passwd"
      - name: docker-sock-folder
        hostPath:
          path: "/var/vcap/sys/run/containerd"
      - name: cri-data
        hostPath:
          path: /var/lib/containers
      - name: runc-proxy-sock-folder
        hostPath:
          path: "/run"
      hostPID: true
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
---
apiVersion: v1
kind: Service # Expose the Defender as admission controller. Remark: by default, Defender will not listen on the service port
metadata:
  name: defender
  namespace: twistlock
  labels:
    app: twistlock-defender
spec:
  ports:
  - port: 443
    targetPort: 9998
  selector:
    app: twistlock-defender