
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: twistlock-view
rules:
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["roles", "rolebindings", "clusterroles", "clusterrolebindings"] # Allow Defenders to list RBAC resources
  verbs: ["list"]
---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: twistlock-view-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: twistlock-view
subjects:
- apiGroup:
  kind: ServiceAccount
  name: twistlock-service
  namespace: twistlock
---

---
apiVersion: v1
kind: Secret
metadata:
  name: twistlock-secrets
  namespace: twistlock
type: Opaque
data:
  service-parameter: ZlhjZ0g0Qkk1SnVuNnNvOEpIMWplTDRDZ2dPMEVydTNSOHAvWE9laWlWR2hkVk1TY1JHek9Qb1ZqVVNTa3JuZFlBcWNpNW1nNUs5VTBSTFFvejhlQ1E9PQ==
  defender-ca.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIRENDQWdTZ0F3SUJBZ0lRZXoxcmo1Z2g4Z2NnckhOTGxjSFFIREFOQmdrcWhraUc5dzBCQVFzRkFEQW8KTVJJd0VBWURWUVFLRXdsVWQybHpkR3h2WTJzeEVqQVFCZ05WQkFNVENWUjNhWE4wYkc5amF6QWVGdzB5TXpBMwpNRE13T0RJNU1EQmFGdzB5TmpBM01ESXdPREk1TURCYU1DZ3hFakFRQmdOVkJBb1RDVlIzYVhOMGJHOWphekVTCk1CQUdBMVVFQXhNSlZIZHBjM1JzYjJOck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQTdWMjhKVWhkVTloU3VBbnhLNm9WYnZJSFZaTmxnVEpBQnM4NHJWRWhMRTRGNWNCK1M5anc4Skg3ZXdxdAprTGRhai9UUFBteTdLOTBXZHozTzlrbWZwRjVQYkExdmNTVmZvWnhTVVhvcmhOK3Nyd2tVYUdJZm1qSVMrZE0rCmVvclVXQWJTL1JTMDY5cWRyTUJFT1p3TFRGdmRaOWRJTXBhMW9qdGxRSVBCNm9TNUtCb1pBLzZNdDNNVDYyUysKRWMrRjNNeEdPc0gxeE4yV0pRTm5xWnMvUFlneko5SE16S2tFdjlqS0NZT2hHeTFOMkYzTiszQ3l3OVVacXRENgpNOUd6VzIveHpicFJCSnZQbzZVRjMwdEFuQmUxc2dod0xuT2hreUsxYkxrSzFRY3NMcHAyUDdMdytZL1p2L0ZMCjl2ZHpRaTVlSTFhWXF4N3g0cGlIN1dESGt3SURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXF3d0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVYNysyQnJsMVpwNGpQT3FQSmxjT1N3T2VSZm93RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGU0xRd0EzMU9aTlJQRDdYbXE2ZFBWT3Z4di9leXZUZkplTndGQlN3aWJZCjFPU2o5dTRPQWx1SmhKY2xYdUpidktWcnR3eVVpdHJMcVc3aHYxZllGNTlwNUd3d3FheHFFVzE2UVhPWlFKNWcKUWo1eUEwa0tuVVJON253Y2JaVjRPWlZBMnUyb1BmcmI4cE41ZkM0MnZxc0ZsVjFhcGJxRUh1UjkvWTN2ZzlEWgo1Q0J0R3hkYkVsVGV3citZWmZ2RWo3N3EreWdNZitBYzkvZkhyVDlsdld1WEwxaGZ1ZHlTVjIvc29tOXZXVTlDCjFYOENlb0k0VXgwSVlmZ0JVZUswVDlGMGJjTWZ5dDErb21qTjBvWDZvcU5VYTc4bHR1SGx0OU9IV0VxRHJhbncKRndUM1hsbk5Cbnp3N200em4xNS9HWGhJRkd6ckFNbnRiVjFUd21MQXQ5MD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  defender-client-cert.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURQRENDQWlTZ0F3SUJBZ0lSQUlya2hKQThjcEgvQ25IK0ZsclQwMjB3RFFZSktvWklodmNOQVFFTEJRQXcKS0RFU01CQUdBMVVFQ2hNSlZIZHBjM1JzYjJOck1SSXdFQVlEVlFRREV3bFVkMmx6ZEd4dlkyc3dIaGNOTWpNdwpOekF6TURneU9UQXdXaGNOTWpZd056QXlNRGd5T1RBd1dqQW9NUkl3RUFZRFZRUUtFd2xVZDJsemRHeHZZMnN4CkVqQVFCZ05WQkFNVENXeHZZMkZzYUc5emREQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0MKZ2dFQkFMWkdwTE1Rbzg4MGFxcUpTWUxxeXJVckJUSGMxMjVqbFp0cnJkcWpDKzBqNU1iTGR0aDJLN2kvNjFrcApCdHJzbkUxUHA0V0JjaVZDYnROVVVSS2crZzFnWFovdnFWMlhSTjFvZUtBSURMUndyN01PZEJJYjNKcFBUcXQ1CmM0YU1WQ3FKNHc4eVhsQk92aFY1MW9DM3RKN25CeE9BUitrdS9HY3RWQmpTTmNVMlMrRTU0VnF3L3V4Q21IazUKTnJ2SFZqeXdHWmVoVS9kL1cxdkFmTEQrZ1dBcDk5SkVEKzNJdVVneFZ1MGNIVFkvbG04amNFalZYdVlOaDc3YgoyamkyY2FpNlZMUFBNcTZaejFqV3EyYXd6TTh4bjJpS2p3alV6UkFOenBzTVV4c252M0l6aVJjQnpzWCtkWEVhClFpd2hlZEdUdk1zZ1pXeGI5bCszTzcvZnpQVUNBd0VBQWFOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdlQU1CTUcKQTFVZEpRUU1NQW9HQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVWDcrMgpCcmwxWnA0alBPcVBKbGNPU3dPZVJmb3dDUVlGS2dRQkFnY0VBREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBCnlvV0hPTDR1UjRVeWh0UklaUmFPYWlGSlJtM3hxTGJkbThIRVJVVXRKQjVLYUtaV0hQTG1PM3lXMmFlQTcvTTQKZko1eGpaRXNqQXU2RE5aZFZVbUd6bUdHcW4wclFhQzBnQTdndmJYc0tuY2ZqNlhNZE1wRDBiUk1aa1Z3c0ZsbApJVE5pR0I1UXFnTDVrSlBXYUNlZzZTSE1Ra2puaWFUM3lxeThQaXFRaFBtVVowQ2pTOEZXQ2dNRjVySUJMTzV5CnJubDM1QllzaWlIdk5NOUZSemlJZ3M4clZHTlpPZTJ2SCt1M2EyTXBMaC93TEQyTWxZYThqYkRiYUhrcG1UMFcKeG9jWkhGb0g2aHZHMjRwWTE4SVQ2Rm9NNWIvQmEyLzZFQlczRkdkZ3BtTXAyK3dqTXpUTVlJUjhub0lWbGdoTwpMV0F5MUxLak1ZOEdHejY1Zis4Ui9RPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  defender-client-key.pem: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpQcm9jLVR5cGU6IDQsRU5DUllQVEVECkRFSy1JbmZvOiBBRVMtMjU2LUNCQyxjZDQzYzkyZThjYzU0MmI0NTFkNWQ5NzkzYTZlNDZmYwoKOHZWbThpcVk4Tm1heGt1V2lLQUo5V045WVZPS2NUYWhlaG1YRDRxZnJsNkdvZmhiS0dQeXMzck9iMi84TzF4UgpXY2kwSVdhRzZiaHQvK2x0T1ZZZTFWcUQ3azlGM3Q3TGoyYm5PMVg4WVV5dWx6U2VsZkkwbUxtWi9zOUJ5WGVZClpTa1ZFeEtwUklJR0taVnEvRUJQYm5pd3A4d01uMkZ5UVQ3RVFIOG1aemkyNFlhODVsZTNob21YeWhKWHNSaUIKNmFzdzFQQVlWeXUxUkUxNFpIenpxaGR3bHhDVXRscHA5dmQrQUhKcm5MVlowYnh2bnlFUXlVT0htVGp1VWtUTQovcUk2N2ZJTXExOXYzTHYxa3NpS0EzNG4rczVXR1lJdVJYb045NWlDUG0rVXhENHlKWlFhMmhRbU9QTU1LVzZvCm96QkwrRDRUM1lIMTJSazVQMjFTSWRzQ28rejA4U3d4MDEwdVFoOFFrLytnSkNwUmovT1BPanBaRllHb1pXZ3EKMzdhNWFaMUQwMHpKQVZGbUJZZU1tbklhNlEyaGdaVkxKM2NscHlzT1FDUTNZVWM1a3VJQURITU1SaHNvQWdPVQo1THR5OVpjQUE2VUlCYjM0VjhmOWwveTFOK2ZiNnk5TU1EUEt2anIxN0FYRW9WRFJ3OVJLNDJCdFUxckFFYlpHCmgyc0pXdFU0cHZZWEZHU1dzZmRwWHRsUXpRZkhKRFFmRjZZa2JRT1RQTnd1MHJ5UldaV3VFU0NtMWd2OWNJeE4KeUp5NEtKWTdwalZQZnpwVmhjS1IyM0R6eFQ3ZjhqYlgrT1hLRGFVeUlIem9vS2JyakwxZ2RCVVk3N2Z1U2V6LwpKYTlmZGNqSTJKRldiZzRJYkE2MHZiYnZDNmNtZitFVytJWVlFSTBkd2FoUWIrM1l5aHJCUEg0ajVGSHB6TXJyCk83YUpVWXRzMFZtWFZmWHVSWHJyUjRPdDh4YmljMy81TlF5bFVWUDdjNk5jOGJ0TFlYeFhObjRCZTBSYlFIS1AKWVU3N2dneGpvOW0za1FLOS84dDBjZDRNa05Fbll3RXEwSnZDZ1Z2cjQ4bDVmM3Y4b1o5RTczUjNyYThBek5ORgpETmVpR2NjQmZ6UHR3ZnVPeUUrZmJpQThwMXRuQitPRExLc1k3aStwY0MxWTFlYnlRV3B6YXR1VTNlaEU2cDFqClZiM21Bc1NhTDFEYUEvVUhRTDA3ZXA0ZnNBeGNQSmJMdG1vbW1jcnUrYk9rbS9INUVqcmlvSVp2Z1ljV0drbGQKTVlib1BvQzNqNjVhcHJCd1lWZnRwdzFka05HWXV1akFnK0pFdnJ2YjhhZ0h1YnpHV1YwdmR6QlRGTzBCUWxxNgpZUVpLcVJBNGRIdFd0aFpXbW1iZnpKYTcwL2xrT0dTNzVnSDRMaFpYT0s4cU42NytnRWxjcFh4d3h4S1NJWE5BClRlUy9qWFR0TndIdVJxYllZbG1UOEpiaHJPRjMreEpMdWRRWUprdjBkNkxISmIzd3RjajE0d2pWQ3dwV2VKUk8KamR4ODJTWlJ5YVo1OWd1dGx3N1ZsRzNTUWlzZ2RaU3lHSlRNRjR0RTdITjRuazU4N0RWTEJTeDZMTGRQNFdnQQpMNFVwaThOaWk2MUtza0p2eG9adUdtRVNOZ1J1Mk1PeXgrZHc1NU9RcGFtRlllUlVqRnM0T1BMY1JNTXhDbWdLCmUrWWxETzB2M2RQSERCbEZObzhqNGJDUlNtT3F0bElUcFQvWlJxQll0SllUOFkyQ2F5dXV4ZTFOSFRJNmNGblUKY2hiSVVSSStGam0rTllTZHFQQXBlL2N0Q2pVNkFlNWVkRVVwM2M5QkNOR0JTbTFycnB0Skt1cFNBUGtzR2RucApYVFdkTUtscGhsaFYyVjVZNjR0cXo4bEtBSHBJTmJudVVkTjRyM2RGZjMwNTc4dXF1Z2FBOHVSNDlybjdKYUwvCjBoVHU3eHNIdEdkL2I0SU4vUmdLd0w4Vmh3YmE1SDFvbHYvc0cxdEtpNWQwL3NQQnNvNTR0eHh4d21Ody9HdFAKSWFBaDlBL2NCd3ZvZm1qT095d3VqY0oxRUlBRXpUR2V5VkJtQUREcFJZTjA5L2J0azlpU0x4QlBDSmdGcjBBZwotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
  admission-cert.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTekNDQWpPZ0F3SUJBZ0lRWU1Ob3RhYnozSzBrTXpyeHMweURLakFOQmdrcWhraUc5dzBCQVFzRkFEQW8KTVJJd0VBWURWUVFLRXdsVWQybHpkR3h2WTJzeEVqQVFCZ05WQkFNVENWUjNhWE4wYkc5amF6QWVGdzB5TXpBMwpNRFF4TkRFNU1EQmFGdzB5TmpBM01ETXhOREU1TURCYU1CUXhFakFRQmdOVkJBb1RDVlIzYVhOMGJHOWphekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTExWUi91SlZJL3NWMmRPM3RmRWQ4aWQKZlNtbnhodjFOUVhXWlFmcHBwS0R1S0NkWUpGVHUzTXlVNjZrMUhrTmR0OGVUc29LbUR5bVo0KzE4dUpLRHhKUApvemZVbllsQ0U0NVNLaHVTOW5obTB1SndDRkdlS3AwU1VTR1E0eG5ZK0ZxOVlmdGhzNHFtQ3ZQRGpNL2RlS1hkCmZPZjljckZ4ZS8vWFBYNU5vei9vMHpwcWc4NXZNWFBVWU9nRE53VGo3Z0FJVUxIVDBzVEJzMXMyYWRUL0FkLzgKVnBSNFJxbkIzdmlIVk5YcGd5UGowU1N2dnJyZkY0YXBEbE1GSER2TGpmWENjWnc1Z0ZIK24zVXZrbjZZQ3dBYQpSZnNEa2VEYWlmSkVKTWpUU2hZNjhCcnVSdUJqQjRCRXdmWlYyclNoQTBjR2tFS09Tcnd3dUpMZFRXY3pMRkVDCkF3RUFBYU9CaERDQmdUQU9CZ05WSFE4QkFmOEVCQU1DQTZnd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3SUcKQ0NzR0FRVUZCd01CTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVWDcrMkJybDFacDRqUE9xUApKbGNPU3dPZVJmb3dJUVlEVlIwUkJCb3dHSUlXWkdWbVpXNWtaWEl1ZEhkcGMzUnNiMk5yTG5OMll6QU5CZ2txCmhraUc5dzBCQVFzRkFBT0NBUUVBUjQrd1NDY0FQeVNtM1JRcXJsR28vcjZmSEwwSDhWMnV1a28vdTRQMDVkS0wKVnpQSElWYWxuNE5meUhTR3lGWVFlYVlQNTMvVXV6UHlTblQzNjRIZVhUQm1OV1ZxVSthcUE2S090QXpqUitkYQpKUFpnRkd2TWJFVUhjSjk4WU1LOEwvK1RPV1dDZmRPUTJFM2txZmZDM2s5b0ZVNDIwcFducVp2bG5XNkxOby8zCjUxSm9XYnR1YTk0MHFCSTFveHhLWWdsWEFWUUE2YnRDQmlTR0F0RVF6UUwxbjl3UnFWbFFSRHhLWERLUGl1SVEKcE4vc29oWEpla1RkaFpGVjJrajZzeXVZb1d6THltZHptaG52eWowWWRMcEgrRjdRSXFESHk1OWRTT2xsdHRUUwpySDNYeW1XRytGYlY2SmhneGFKdm5SMlVxREVXams3WHZCOUMrU01MclE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  admission-key.pem: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpQcm9jLVR5cGU6IDQsRU5DUllQVEVECkRFSy1JbmZvOiBBRVMtMjU2LUNCQyw0Yzc3Mjc4NDQ3NzBmYWJkZjRlNmU4MjM0MGIyNjVlYQoKbGRFYklOYWhmVVJwMGhSN2ozWVZacGljZ0l1eE5rMUo5a1N6emZENHgycGI1cEJyTTBkTEJrcVM1TzhJdENCbwpuTFpKRmprbnBubGZMYkxYWFFRNE04YzAxaWJ4NzlNSHpNc2FwQWhvQVhQL2M0UUVoZVQ2SE0zVmpQbVdtTERqCk9RZGQ0V254ZHh2ODF0ZjdUMVZ2T1pUS21XcXUrSHFiRzVkN2JLbkwwU2hpMmdPczI2VmFXVU12bFpNUHRnWVkKQ1VtS0d1M0UzeUR1MTBwL3p0clpWUlg0UW16SEtPbDlhOTVLVnE1MCtHdzhSM2o1L2I3YXJRM1YyNjI1R2NJYQpteHJSejRhdkx4WTBVYmNXTFhCdERwYTB5clpDU2dFMXJoMm1PQ1FwNlVyNW1lbFF0Wm1YenNlc1M0ZnczUkVQCnRpc2tTWDdSbWZBU0dOUE1JSkp0b1JhcWY0ZVdDcDdDYnZUYnNobXlvdFE1K216UzM2R1pLMEJDUXlIbkRDVU0Ka05pRUdHL01qWDZuQ3VGVEdWZDFhZWhPbS9mMzlJendKdnd5RWNXYXNVZFRWNktQQWZZSDc0bC9JeHh6SzF5SgpYWmUxakVtd2FIVVliaVpyYXNYMnpxUlJoZDkrcnRlTnlzdTFidzZkdzlhYmxxL2Q3ZzNiSWk1eWFSVGN3bUhmCmZSV2p2Q3ZXZmQzWnZlUEg2c0tKWE56bmxqdEtrUjJoZE9YQ25RMXVwYlphNDd4Q1FnQ1lORmowMWdzVjQwNlQKZVZ0YWpBVUhqMUZjcHE3SW9iUTRNSmptaTh4bEQrN05KaEhoVVEwU3BFOXV5RnRwSkpsbjQrNWR0aXVsblJxaApvVHhaMit5SGlSM2ZKZzNlWHpjVmFzWllLdEZ1UTZkQ2ZEWlVzN25qNGRjTFhPMjVRNk5zZlZOS05hU3poWE5oCmpRWS95d0dZb1VWQi85cDZOUENiSWhpYWtSdXlhbGJhVDExTGh4dVZyb2cxYjFaaDEyOEFlR24xZ3RYajU2WHUKb25zN3JXSlhYTHVyTUhUT1VsbWZkQ1NUU1grdFlWUVArOEliYU1YYlROakpkaVNmWWtrNFZMdFJOMEtqT2U3YwoyV0N6WEE4YXZhcEVtMW10K1RHRG03d3Q1TnJkV1BabVdCZkV4WXVwZE5GZ0hNdnlYRlZoSVlyTTdRNDBSSXZzCnUzUjNXaHk5N3J0S3pRcFFVQ0NndjBKTlVxN2dFejBLTEhVTzY3ZE9lcXFhNXg2OHJWaXovNEJ3TEZaQmlJL0MKc1F4eTJPc3pjU2FldGFlclV2L1dlcTZBWC9vclhYQWtoMWorb2NZcVhWNEZZRytycUNyZjhiR3ZqUVZwSkxDSAp6c3hmdVdpdE9GaGRsY1p6aXNDM256SzdiKzl2UzZGZGVTQWtzdnV6Yk4vY2I4alluUGI1S2Q0azRtWGxRSm5uCm42Mk9GakRBbzNMOUdvTnBJSXFjZ1puQ3BXejB0TFRqUWcyZ0twYVZiY0dESXVqUWJBbUZNeVFndE5Sanp2ZjAKeWRDVS94cGNVTFZld2VIUVZlampPQnhJZysza2o5Y29PQ2htckdyTmIvb0pSWjR2TUVQTi9PNGx3d0ZtanYrSQpkbVE2dm40OWxmaURxbVBJenJSVTFXLzZrTGlJMGNxRFN2U3doUFlua21KWkxmNmVhbnFFZ3QxaTVBTHdQQzB3CnhNOWVYTURuVkpiNkE4V01MZEFlOEVmYTRTT3p6a2t5YzVzaHhZUHZHczhqRUZXSGZLK2VhZmNDMVdLZWFvNUMKWWhmZm1QYUNycXlyVGViUHlSaUxqWWh0elJkMytSRkREMUFYMjJKckVCb1A5ak9UakpVNy9RbzAvc1IvamNZRwphdnVWdENydllzUU5xVTB3T1Y3M2FWMUUrNVRiQ1Q0LzFkMUQ4VW9adnZIV3lhdUYxL1FqdFA1TWNwQnhpNEJhCk95VUUzNjI5bGlJRzM4UFJsdGtZUjBYaGw2SDNSSXNNencrQ1NwVTdwSGU2RWZ2UkF3WVh3YUZwYVpUZSt5MzEKMHBCb0MrV0VDMEl3WU1FSXZ6R28vUXNCVU8wMnZoYlRXMXVSSGlZS3EvVytxczdwbTh6SnBPRnF6ZCtaOUJkUQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=

---
apiVersion: v1
kind: ServiceAccount # Service Account is used for managing security context constraints policies in Openshift (SCC)
metadata:
  name: twistlock-service
  namespace: twistlock
secrets:
- name: twistlock-secrets
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: twistlock-defender-ds
  namespace: twistlock
spec:
  selector:
    matchLabels:
      app: twistlock-defender
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/twistlock-defender: unconfined
      labels:
        app: twistlock-defender
    spec:
      serviceAccountName: twistlock-service
      restartPolicy: Always
      containers:
      - name: twistlock-defender
        image: registry-auth.twistlock.com/tw_xh82fd7uinul74pwvfiibn09fxe5c6dd/twistlock/defender:defender_30_03_115
        volumeMounts:
        - name: data-folder
          mountPath: "/var/lib/twistlock"
        - name: certificates # Setting the certificates mount after data-folder since it is nested and was overridden in CRI based GKE cluster
          mountPath: "/var/lib/twistlock/certificates"
        - name: docker-sock-folder
          mountPath: "/var/vcap/sys/run/containerd"
        - name: passwd
          mountPath: "/etc/passwd"
          readOnly: true
        - name: syslog-socket
          mountPath: "/dev/log"
        - name: cri-data
          mountPath: /var/lib/containerd
        - name: runc-proxy-sock-folder
          mountPath: "/run"
        env:
        - name: WS_ADDRESS
          value: wss://staging-consoles.cloud.twistlock.com:443
        - name: DEFENDER_TYPE
          value: cri
        - name: DEFENDER_LISTENER_TYPE
          value: "none"
        - name: LOG_PROD
          value: "true"
        - name: SYSTEMD_ENABLED
          value: "false"
        - name: DOCKER_CLIENT_ADDRESS
          value: "/var/vcap/sys/run/containerd/containerd.sock"
        - name: DEFENDER_CLUSTER_ID
          value: "cdb5f577-ec65-f2d3-0480-ebe9fa9a5945"
        - name: DEFENDER_CLUSTER
          value: "tkm-x86-photon"
        - name: MONITOR_SERVICE_ACCOUNTS
          value: "true"
        - name: MONITOR_ISTIO
          value: "false"
        - name: COLLECT_POD_LABELS
          value: "false"
        - name: INSTALL_BUNDLE
          value: "eyJzZWNyZXRzIjp7fSwiZ2xvYmFsUHJveHlPcHQiOnsiaHR0cFByb3h5IjoiIiwibm9Qcm94eSI6IiIsImNhIjoiIiwidXNlciI6IiIsInBhc3N3b3JkIjp7ImVuY3J5cHRlZCI6IiJ9fSwiY3VzdG9tZXJJRCI6InBhbnctYXBwLXNhbTEwMzg3Ni0zIiwiYXBpS2V5IjoiKzE1QUJqR1ZZYi9Vdlo5YVBQNXlQNHZjVU9yRTZVZnJCSlB3RG1oOS81aFdCZjU0bW1UYlZPL1NEcnBSbC9ORTZ6YXVremZQeS9VMUw1N0FnaFVaZXc9PSIsIm1pY3Jvc2VnQ29tcGF0aWJsZSI6ZmFsc2V9"
        - name: HOST_CUSTOM_COMPLIANCE_ENABLED
          value: "true"
        - name: CLOUD_HOSTNAME_ENABLED
          value: "false"
        - name: FIPS_ENABLED
          value: "false"
        securityContext:
          readOnlyRootFilesystem: true
          privileged: false
          capabilities:
            add:
            - NET_ADMIN  # Required for process monitoring
            - NET_RAW    # Required for iptables (CNNF, runtime DNS, WAAS). See: https://bugzilla.redhat.com/show_bug.cgi?id=1895032
            - SYS_ADMIN  # Required for filesystem monitoring
            - SYS_PTRACE # Required for local audit monitoring
            - SYS_CHROOT # Required for changing mount namespace using setns
            - MKNOD      # A capability to create special files using mknod(2), used by docker-less registry scanning
            - SETFCAP    # A capability to set file capabilities, used by docker-less registry scanning
            - IPC_LOCK   # Required for perf events monitoring, allowing to ignore memory lock limits
        resources: # See: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#how-pods-with-resource-requests-are-scheduled
          limits:
            memory: "512Mi"
            cpu: "900m"
          requests:
            cpu: "256m"
      volumes:
      - name: certificates
        secret:
          secretName: twistlock-secrets
          defaultMode: 256
      - name: syslog-socket
        hostPath:
          path: "/dev/log"
      - name: data-folder
        hostPath:
          path: "/var/lib/twistlock"
      - name: passwd
        hostPath:
          path: "/etc/passwd"
      - name: docker-sock-folder
        hostPath:
          path: "/var/vcap/sys/run/containerd"
      - name: cri-data
        hostPath:
          path: /var/lib/containerd
      - name: runc-proxy-sock-folder
        hostPath:
          path: "/run"
      hostPID: true
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
---
apiVersion: v1
kind: Service # Expose the Defender as admission controller. Remark: by default, Defender will not listen on the service port
metadata:
  name: defender
  namespace: twistlock
  labels:
    app: twistlock-defender
spec:
  ports:
  - port: 443
    targetPort: 9998
  selector:
    app: twistlock-defender