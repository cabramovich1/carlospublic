
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: twistlock-view
rules:
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["roles", "rolebindings", "clusterroles", "clusterrolebindings"] # Allow Defenders to list RBAC resources
  verbs: ["list"]
---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: twistlock-view-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: twistlock-view
subjects:
- apiGroup:
  kind: ServiceAccount
  name: twistlock-service
  namespace: twistlock
---

---
apiVersion: v1
kind: Secret
metadata:
  name: twistlock-secrets
  namespace: twistlock
type: Opaque
data:
  service-parameter: T21URmQyVEpjN0FjbVc4bi90QWE0ZEVHV3c3RS9sZVNLNWRaMXhwV0NVd1QxZXhVQmhyOXFjNFMra3FEVkhZWTVzVHFWbW13SkNuZDB6eDhyZkE4TlE9PQ==
  defender-ca.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIRENDQWdTZ0F3SUJBZ0lRT0FFNWN2ZXpMSDVyT2pDbWUxSnl6ekFOQmdrcWhraUc5dzBCQVFzRkFEQW8KTVJJd0VBWURWUVFLRXdsVWQybHpkR3h2WTJzeEVqQVFCZ05WQkFNVENWUjNhWE4wYkc5amF6QWVGdzB5TXpBMwpNamN4TlRNNU1EQmFGdzB5TmpBM01qWXhOVE01TURCYU1DZ3hFakFRQmdOVkJBb1RDVlIzYVhOMGJHOWphekVTCk1CQUdBMVVFQXhNSlZIZHBjM1JzYjJOck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXBqVXNvTFd2NGJGUExHU1pUMWdkQ1NVZ0hZbXd5WENKSG1tTFpvVHpmeUlPaGttcm93VS9xT0lBVTdYNQpGYUw1SStjWk5GTmhTTDNRNllWUFFoZDlJSFhrYSt6UzRQbkpMUmVCbHo0MW5NbDg5cFdyc2RJUDdZb1ppVmdXCjNpQmhmRnY3Yk5rNHRXQ1MvTldXOWdRc1JVNVJCbVlhUlRyZ2dmWXhDdUlkQlVBYTdwMTFObjFlZ1l6SXBTYVAKZXlSbWs2a1ZDL0hYa0JTSVFNVXVoeDhXdklkSWFWeWdqU2VaMGk4bDBXL2MyZXJLTFZJSmltVEdkbEEwTkYraApST3lGdlJ2WitRWXRucDcyUVhoYnVZVnhtRDRQVVlIWXRFdXpydjEvbmNHaTB6cS9PTVBrM2VlbXNjOW1RdEVXCkRZN2wrZXJKaWN5RGJ1bzlITlluRitzT3FRSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXF3d0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVWelptdnBwa3NSdzBTTVM4OGFQYVlaQkRka2N3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFIajNOMmgxeFJxZ3FRdjlJbGVTU0JXT0Q3YnlOVjJQdmtxVWdoUGpqUE8zCkpESm0yemlZY2t1bUtpNzZiUEJtbFlhRGxlem5vRk1XcG4rYjNtMWVyOVdONlpaZXF5cUNTeFBlMUExaktqelUKMzZ4TGQ5RG5kbW5QNU9NYkNMVnVWdWsvVFYvR0JLZ0pWMTU0ZHFMZ1lxTE1zTnJZWVRJbWdtY3ozakh4U2l3ZwoyV0ltV2hjTE9YWEJiLzdjUlJpVkhBTnYwRHQ5Q2xGOGZLeVFlNEs3QWxUM3pYYVRkR0tQQmw1UkgydzBqb1NtCmRuZ1VocUlaTWprdmtPUGhJQWlDeTVBT3Back9Xc3Y5VUVHdGJYSWh1M1F2NFI0VGJKY1huUkpHMTBaRUs3dmgKNngwVkRnMG05SUY2bkp4VGM0QnBNemdZaEtnZWFYM1Y1SGJHRFpEeDQ4UT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  defender-client-cert.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURQRENDQWlTZ0F3SUJBZ0lSQVBPa1R3Q3RScDBDV3VPOE5YcEhBYTB3RFFZSktvWklodmNOQVFFTEJRQXcKS0RFU01CQUdBMVVFQ2hNSlZIZHBjM1JzYjJOck1SSXdFQVlEVlFRREV3bFVkMmx6ZEd4dlkyc3dIaGNOTWpNdwpPREF4TURjeU1EQXdXaGNOTWpZd056TXhNRGN5TURBd1dqQW9NUkl3RUFZRFZRUUtFd2xVZDJsemRHeHZZMnN4CkVqQVFCZ05WQkFNVENXeHZZMkZzYUc5emREQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0MKZ2dFQkFNQlhkb015enhIWTFja3VZbzZsY2dHTEoyWWoyaGovb3lkU3BMTVVaajhSSWhsQnRMZ3kwRWFEQkVrWQpnNTZoOVd2MndmdUVtNm96WCtranBveXYxRFJzQlVIQkVBY0krMUZGOFlXRUcxekRxTGZnWEZiZXhtbEFuMEVnCkN2UmhNM1BCZ0VVSHpBVEdFY3AvSlFOVDdsQXNIWm5GMktpUHlkQmhmekFRYnVBaVRmUktMYnZHbENLa2t1VjAKcnV0aEFKMlFiZis1UHZWNVRLSGVrUUxmZkZtUC9IWW10OEQrMUwvQmNFUTlWK0N2MVhDLzYwTFpKQ0lMTU9HKwp3elJOTEg0ZDM3dnZMRDhEQkJETENFU002cS9FQkF2TFRGSzRSWU5kNWtMNTBIZnhrb0tUeklSWmpwTFZyNzJ2CjJodmJwVzhMU29GbUlzUkRBU2JFWDM1YjBna0NBd0VBQWFOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdlQU1CTUcKQTFVZEpRUU1NQW9HQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVVnpabQp2cHBrc1J3MFNNUzg4YVBhWVpCRGRrY3dDUVlGS2dRQkFnY0VBREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBCldxalltM2lwT3M5V3p2MnYvWHdYZUVJTHJmcmw4TlM5UG45U09lTy9zczR6UXJNVnZTMXlpNVpJR1RqbXNUeDcKS3FOZEtKM0FrU3JYYzZySnI5d2lIaFB4dEJxdlQxdTBpK29YalBsd2d3b3dGSVM1b2FGaC9lRFFMZkZ3NFp3RApVcUxPbG1BaGF1TmtXNTB0eFpnMnZSNWtUM05IekFpWFRueEk3bkpxN254dmlPRmpGb2wxRG1QTWdUcVBESVBVClBKYmJVNm1HUEV5VzM3SWxrOTlIeVZZSEoreFRsVkx5eERDMlVraTlmRFlZTzY4b1hjeTRrRW9xcDFWaFcxWXAKdUdOampISURFcHFiRVFkWHRaN25Zc3FaRVdyRmFobkF1UzB3Ym5XUGxnZDllQmxScXMvMW9rZEdlV3JZQ01uUQpJVVhiYlI2eVJOUVBweDJFYlE4NkpRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  defender-client-key.pem: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpQcm9jLVR5cGU6IDQsRU5DUllQVEVECkRFSy1JbmZvOiBBRVMtMjU2LUNCQyxiNzMyNzgyZTdhNmEzMDFiYTU1ZDU4NWY5MzlhYTFiOAoKTDNrV1FBc09XUjJBRlZFekZoU2ZaYmdMNlZ2TURMYndyekpReFpDemgwYUJzY3NYYk54Zk5iQjc2Nis5a1VmVQpRNUhNTHB6UTNHSjRrRGlVNDJhS0Q1ZGsyQmY2Qzh5L3B3SlJzZUkxMmpoWjl6YkI5VVRCZVVScUI2aE9tSzk1CmNUVDNETkFMY3dDeXdQcUZ3VVRSUGwyeERUcEc1YmhoYnZSYVJKd0c5a2FZS0VWYzJibjh0QzFSVU4zRDFiS1UKWkUyakhwMlFLWHFieGNJVERTbWNVZWJuVFZUdVZpUGNiZnRQcUZKKzcwVmZGT0FHVFc2MGl2RTNmZnQyYjlIbgpuT1p3YVBSdFdRZC9XUzZzUEJMZ01BRHV0NERCRmlLdXQ2bTZ4Y2NVNVZHYkF5VkEzSnh2dlNDSGZ0MC9EYzh6CnQzVTM2UlJFWmRLQy9JeDhoVnk3eEs4Z3krV1BEVFFXZzVMNVlySWZFV3RxWkNITm56b0NMNzdyUDhJamplRDUKRXMwODFWdFlacEFENnRvZVZ1aDU3amZPdFFrMzNBK2x2czdzK3h5S2RCUEFvbnhUVDlMaUJMbTA1WDVxTjBRLwpiLzljclFXaFpnSnpNbCtoSHg2MTFKYVZKRXNiVCs4cGlkZkg1QkN2ZlF6TE40K2d6MHVSeW91OFlaTzJwc3U3Ck5NazJHSWdYYlBjMisrTDA5TFFVb0kwd08yLy95R1RzSTBEcDJpb1VqdVF6MmxqUDRuSU9IS2xNZFZPV2RlbzEKdE9nQk9EUGRJazdUdnN6TUtodzJ1QXlMRlBjT3poUkZQOEw4NXlEeGw2Qk81aGV5QnA1WDhhYlk3SExLK0JLOQo0RlJud1BPZk5VeHplRjBmdzducWlQTlFySFBSSCs4NVlhSVlYUkNkSlJZUTJ5azBmWWJITDlOeThjOUoyams0CkN2cng2dEhUakgwd0lsaHlnUHVCRGthbjVwQ1gvMm9iVUhLKzd6NUhpa09LK2hCd0g4T1Q1VWViT2JMRUFLZysKd2ZiZllwV1JTRHoxRmRoYklTKzZKZENYQVloL2QzYUZidXk5ME0wck5SYjRJL2o2WUo2ajBqM2VTZHFuVVBsVApkUjFFcW1kcVNTcENZL3A2bzF2a1ZrNlBQa29XY1h6QlpBTGpGTzIycDJ6bnFRVUMvb21Ra1dtMnFiajVVMmVjCktERmNLN1JMdVdZZ1Z3bHZqdHNyOVZEcU5kYVd3M1oxL29OUVdnZGhDZENTanpEUEZhSkR0Snl0clFJdWZJdEcKZGM3UGE4YXdRK244a0xYODF2WUdVb0I5MDhEQStUL0UxREw1aTFTM0NpTTRFRC84cytzdmw0Z3l0SzN4clJJegpPT2pIU3J3YWZmbzhFOWxMM0o2NS9vY3BnWHY2ZXRCd1ZIMVJMb0NKdG9BdmJBZXNlbCtFOUNLOUhieTFPQ245CmpuaU43Q25QMGNwS1dYaThIMlI1UEFkT3JDdGZYdks3VUNOODlzUWpIN2F3WlF1Rmh6dGt5Tk5vOU4vRlJ2WGkKb0RUd21pZlBJam5UbVA4MUNuaHd3Rk1uaTBlK3B5czByeUpLT0Jjd3JUbjBRZ0JZeTZITWFQaFMrSjBwUmxMZwpidTNzNDRzekZCWGx1Ym9PR0syZmhHK1htdWFQcGZUb2x6YWpFLzhVdUF3RTdnRW51a1c2WS9zWFplUGFoOUw3CllsRW91TjdZODBnc1oxZHozeVM1OHAxVGlEeTN5Zjh0eG45ZHFLcDhram9kZUhTNHlrVUJOdmNtZkJCRFVxbzEKSTNvMVo0THlnRXRIUldvTmNXaEZsQUYzRUsvTnVDbU9vN2NGSGgvRDVkZEo3TjdpZjJnVnlKelNMbWhKaS9VNgpjOXV6YVB4Z2poYUszdkRkOVJ4dnpFR25lMTFkWUo3R3R5c2RLbjFXcnp6OHNNQWFPMnY0dm9qSGcza0htQUI0CmNqRTdXMUF3YkN3OG84UUFVN0ViTk9BZll1c3dzcmFXOWNNcmhiRjR6VTZrYXU0Y25BYzdkdGU4cnpZbHJ2UXUKUjFMUzVWMWZaaFg2dXZCNmV0NjhKLzJmVjFMRjB3aW5aQmZhTVBqdElCR1hia1Z4cmI4d1NyMms1c0JYblFrcwotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
  admission-cert.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTekNDQWpPZ0F3SUJBZ0lRQy9EcHU5OWNWL2Y2b0Z3RkxFWlJoVEFOQmdrcWhraUc5dzBCQVFzRkFEQW8KTVJJd0VBWURWUVFLRXdsVWQybHpkR3h2WTJzeEVqQVFCZ05WQkFNVENWUjNhWE4wYkc5amF6QWVGdzB5TXpBNApNREl3T0RBMU1EQmFGdzB5TmpBNE1ERXdPREExTURCYU1CUXhFakFRQmdOVkJBb1RDVlIzYVhOMGJHOWphekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTSs4dVNlSUdxSTF2UmNBZmJZa1pNdlYKUXBaVkVaYTVRcU9tVzR0V00vZVgwcmFZWW9XVnJ0NndtaVUrdTA3UktRWFQzeUJ4MHJlMDliSHo3cTF3Y25uaQpXZU9lVjlJNFM4S2EyeWhuZERnUXhDdndKWkRuLzlYblJsZy9DbEcwR1AvK25ENW8wYzcwVHdjVjVCVjYrN1Y5CjhWd2g3bURmNGNjdDRKYUp6QVlwWG15b0RSMXAvSHljc0tnYWpSemZ6TE1HMWhKVnMxeXM0bkU0VmpveElWSkQKKzhGTjQya2ZEVk51N1J5S081cGpUU1lzV1RqS1lVcW1zY1FacHVtbGNiTTdoMEVWRkFiRHp0OE1DRUROb0xnTgpaMzVubjE1YUhwZEJWQzFiK2RqelV0aVJXSEQvaE5uQnBLYk00OUtxV09Na1luakRHclk1VlFXcW5veUxOdzhDCkF3RUFBYU9CaERDQmdUQU9CZ05WSFE4QkFmOEVCQU1DQTZnd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3SUcKQ0NzR0FRVUZCd01CTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVVnpabXZwcGtzUncwU01TOAo4YVBhWVpCRGRrY3dJUVlEVlIwUkJCb3dHSUlXWkdWbVpXNWtaWEl1ZEhkcGMzUnNiMk5yTG5OMll6QU5CZ2txCmhraUc5dzBCQVFzRkFBT0NBUUVBWk5aSUFIRi92c3JEL2xyNytheDRFZFpGRXBEaGJmVFFnTXlvK2lsWkE2eSsKQVZDZG4xWVlCcnFsVUZCK0lTV0orbEZ5eDkzTTIzSWxFMTVxQjhjZFNXeWVMeGtLcUx3YzJzNUx5WDVzRlpsMgpYdC9pZkUzWHpXZ3B1K1R1Q0FuSS9tVkxpd1luU1VTQ1dna2ROYjFucURUeHFlejQyRGpub2I3RGdTRVBoOEFsCll5QVI2RmIyRnRRczZLM00xS24zTm1xRGNTUGtzY0ZJR1dBY3JESjF2S0FBM3F4bGFuSDVuaEdBbGpCNWpNd3EKb1F5NVpYQkRiKy96dEhZSVVTTFRKS0c0SHhHb1RlRnFwSGg0UmRwZlI5WC9iVldIeUwxZGtZUHZ5c0pZQkNiSAp4WnZxTG1SK1NRTUtrV0wwM0QyS25xeTBtVm1DTXNLV3llSjhBRFZySEE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  admission-key.pem: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpQcm9jLVR5cGU6IDQsRU5DUllQVEVECkRFSy1JbmZvOiBBRVMtMjU2LUNCQyw0ZjQ5MTk0OWZhNzYzOTE0MWEzYjlkNGUxNjJlN2NjZQoKNWJTWTFIaVZXQTJyK3k1MmF1V09sR1lGS21pR204TUFNWXVxb2lYMDBoNzZ0dXBJU0grelp2UWJwZC9CUVJGQwpuNk02S2VQQkRTS1dtSDBsSEN5S1RWV2p4Rk1sR1A3YjZuV3RHTzh1MTAxazNrUjlmY2t3WTEyOWx4N3A0NnFaCmk3bW95WjBJeHNNNVVGemNaRHJGd2prcko0SDF2QWQweTBIU2ZsRFV6amtLOWJ3dkhWYzVqSkNhVmdjZVZabTkKejRXeHJoT0EzMm93UkptTG5QRDNyZ3BqUnA1U3ljSGZnRGlqdm0vZHRpOEZxVUludjFHRmhxNE1DaHY1R2M0VgpVNllsOStQZGRsdlJQMWcwWHJHUFRlT1NkU3daUDNwd2FKcVF0ZTZ6c0xEM1hHb0RqdGlJakZGaVhBdmRlY3plCkgvQ3YxRmJmSUpLY3JVSUJnSG1QK2tOcE0vcVZsNDFlRUMrVnVRZVRNS1FMaWFNQmdUekFTOEVCTlJsMkw5Z2YKNEFuc3JOQjdLcDJrd29UWnp6TGs3OUxWWTRwUTVKdUdNZW1NbTFDZU1aWm5yeC9rVkNtZWRoQ05qSlZrL29WUwovMkN4Z3d1YXFaemNtMUdQNXlSTjNrYW9TaFB0bmZNeWtob1oyYjl2N3dzZUNobmNDSUNvcC81cW55QlUxRkhyCmtZM3VNU2pQNWcyajIrVEhCa0VwaG9ONnBhb3dacXB0T1pwVGViUDVKQ1VsSnJnbDJrZG56bTR2VUVoZUpObmIKaVNwOGhlR3RwVFIvZUdqZ2xDMW82d0dNL05ER0NmMUxVbGRDQUxkQWYxN0x4Sk9HVEpHcjJTdlB5QUJ2UEtCYgpoQUJKcllDUnA1U2RxL2NFSlFVbzdodDZPU2p4aTRQZDNxdWhkUEczNFB3a2VFcXMzUUp3b25CMWZjZ281N1NGClpYbk4vbzVFQXZXcjBzWklUbXlVRUM1aTl6RWtpV0dnVzN4MmZXWjh4bnlObnp2TEVmMjlvNkliUzVaWG9HdmcKWnovc25Hc05jakRJR29CR0QwVnQzb2hGelZTdlp0T2QybFNIS2tkeVJ5VEJqSUs0TjRyUG1UMFBBZGJBTnpycwpPdG5BTEdPemJrMjJZS3g4Rit6aHkxV2YwYmhmTUl2U01sR2Z5VVAyU1pDd2wydkFZK0pnUGZnNlVUMDFoLzRqClNNY2xxVWtuWHhqc3RsVmlVQThYbCtEWVgzNHRHdHRERXIvZkhrQkExZlJOdEhZMyswbW01dVloSXNxOCtCelAKalVvcTVWMXBQMURESWhjNHdLUE1DUnVIQ0d2eHpjYzFuaGRBTU96cHlNemx4K1lNZ3E1cTZYclVtTFRHZjZiawpvcjU1ZHV0MmdsZTVnZmhYR3J0MzQvWm9iK3ViWXk0RjRmeThUdmV4cUxPTy9JYk1MdDNtQ3JEOXljUTRuRXNxClIvMG1oRk9EOERONWE1bEErZ2cwT1JxY0g0bzUyQmdjNVk2R2tRaGFTdGVMbmNkakNpMGpoSTNqU1VoTmZub0oKbktlZ2VXeis5OW1NZ25TVEZvUytIaEthZEo4Rm1RaEdEd1JyeXV0Q3BXSnJDVlFLdkkxTVV6TjVWbUZqNTUzVAoyczZwdTNwcWpjOXJvaks0N3ZqU3JSOXB5aGlaT3JSVHJzTU5WMmF5RU1uZFpoK0pBNnl0bUNHQkxETTd5dnhlCjJpa3A5ejNGdUlDR1VWdDN0RWRMbjNGTm1lZStwZ213bncwNnVWelR4aDFiYXBJbWQ3eGdCdXg1cTVpb2podjEKRzd1eCtZd2J1Rm9qdXhCa1hpMnZBZ3k0L0lEN01rTmpwS0VYVzJQekd4VnJROU9pb3JSRVBoMm5rZkF5YXR0dQpGVElYMDBPYzIxYTRreWRyRnMraVBpaWFuTml3L2FlV2xETjdYQjRrZ1hzYzVDd1BiVEVndTFKMktFUmpEUEZpCjNiS0Y3T2xEK0VIcmhseFp5NE9pQ2lBTDJzYVJJdWZKNi8rQWJ0b2ZVMGtHSEdZbXBPOGtjcEc1Z290Yk01b3gKeFp3cmd1MHRVNncwb29ITzQvQ0FiK0FBZ1lYaEpmNDN2ZkRIeFhTR3c3SFlSVTBOVllkT3Qwd2dlR2RiVHdrQQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=

---
apiVersion: v1
kind: ServiceAccount # Service Account is used for managing security context constraints policies in Openshift (SCC)
metadata:
  name: twistlock-service
  namespace: twistlock
secrets:
- name: twistlock-secrets
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: twistlock-defender-ds
  namespace: twistlock
spec:
  selector:
    matchLabels:
      app: twistlock-defender
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/twistlock-defender: unconfined
      labels:
        app: twistlock-defender
    spec:
      serviceAccountName: twistlock-service
      restartPolicy: Always
      containers:
      - name: twistlock-defender
        image: registry-auth.twistlock.com/tw_xh82fd7uinul74pwvfiibn09fxe5c6dd/twistlock/defender:defender_31_00_124
        volumeMounts:
        - name: data-folder
          mountPath: "/var/lib/twistlock"
        - name: certificates # Setting the certificates mount after data-folder since it is nested and was overridden in CRI based GKE cluster
          mountPath: "/var/lib/twistlock/certificates"
        - name: docker-sock-folder
          mountPath: "/var/vcap/sys/run/containerd"
        - name: passwd
          mountPath: "/etc/passwd"
          readOnly: true
        - name: syslog-socket
          mountPath: "/dev/log"
        - name: cri-data
          mountPath: /var/lib/containerd
        - name: runc-proxy-sock-folder
          mountPath: "/run"
        env:
        - name: WS_ADDRESS
          value: wss://stage-consoles-cwp.cloud.twistlock.com:443
        - name: DEFENDER_TYPE
          value: cri
        - name: DEFENDER_LISTENER_TYPE
          value: "none"
        - name: LOG_PROD
          value: "true"
        - name: SYSTEMD_ENABLED
          value: "false"
        - name: DOCKER_CLIENT_ADDRESS
          value: "/var/vcap/sys/run/containerd/containerd.sock"
        - name: DEFENDER_CLUSTER_ID
          value: "9802dffe-d058-6cff-796d-225ad18479dc"
        - name: DEFENDER_CLUSTER
          value: "tkgm-x86-photon"
        - name: MONITOR_SERVICE_ACCOUNTS
          value: "true"
        - name: MONITOR_ISTIO
          value: "false"
        - name: COLLECT_POD_LABELS
          value: "false"
        - name: INSTALL_BUNDLE
          value: "eyJzZWNyZXRzIjp7fSwiZ2xvYmFsUHJveHlPcHQiOnsiaHR0cFByb3h5IjoiIiwibm9Qcm94eSI6IiIsImNhIjoiIiwidXNlciI6IiIsInBhc3N3b3JkIjp7ImVuY3J5cHRlZCI6IiJ9fSwiY3VzdG9tZXJJRCI6ImFwcC1zdGFnZS0xNDAxMTAzMjIiLCJhcGlLZXkiOiI3QTh2aCsrbDJvd3RwRjF5Nys5RnR3V3Y5L0hQL044aVNJTko1bGNXaHYrUW5qWnNjYlZvU05nSW1qRHJBcFlFaHN1RlFnTnplNjdjRkd2OTJKR3U1Zz09IiwibWljcm9zZWdDb21wYXRpYmxlIjpmYWxzZX0="
        - name: HOST_CUSTOM_COMPLIANCE_ENABLED
          value: "true"
        - name: CLOUD_HOSTNAME_ENABLED
          value: "false"
        - name: FIPS_ENABLED
          value: "false"
        securityContext:
          readOnlyRootFilesystem: true
          privileged: false
          capabilities:
            add:
            - NET_ADMIN  # Required for process monitoring
            - NET_RAW    # Required for iptables (CNNF, runtime DNS, WAAS). See: https://bugzilla.redhat.com/show_bug.cgi?id=1895032
            - SYS_ADMIN  # Required for filesystem monitoring
            - SYS_PTRACE # Required for local audit monitoring
            - SYS_CHROOT # Required for changing mount namespace using setns
            - MKNOD      # A capability to create special files using mknod(2), used by docker-less registry scanning
            - SETFCAP    # A capability to set file capabilities, used by docker-less registry scanning
            - IPC_LOCK   # Required for perf events monitoring, allowing to ignore memory lock limits
        resources: # See: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#how-pods-with-resource-requests-are-scheduled
          limits:
            memory: "512Mi"
            cpu: "900m"
          requests:
            cpu: "256m"
      volumes:
      - name: certificates
        secret:
          secretName: twistlock-secrets
          defaultMode: 256
      - name: syslog-socket
        hostPath:
          path: "/dev/log"
      - name: data-folder
        hostPath:
          path: "/var/lib/twistlock"
      - name: passwd
        hostPath:
          path: "/etc/passwd"
      - name: docker-sock-folder
        hostPath:
          path: "/var/vcap/sys/run/containerd"
      - name: cri-data
        hostPath:
          path: /var/lib/containerd
      - name: runc-proxy-sock-folder
        hostPath:
          path: "/run"
      hostPID: true
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
---
apiVersion: v1
kind: Service # Expose the Defender as admission controller. Remark: by default, Defender will not listen on the service port
metadata:
  name: defender
  namespace: twistlock
  labels:
    app: twistlock-defender
spec:
  ports:
  - port: 443
    targetPort: 9998
  selector:
    app: twistlock-defender