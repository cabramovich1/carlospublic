
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: twistlock-view
rules:
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["roles", "rolebindings", "clusterroles", "clusterrolebindings"] # Allow Defenders to list RBAC resources
  verbs: ["list"]
---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: twistlock-view-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: twistlock-view
subjects:
- apiGroup:
  kind: ServiceAccount
  name: twistlock-service
  namespace: twistlock
---

---
apiVersion: v1
kind: Secret
metadata:
  name: twistlock-secrets
  namespace: twistlock
type: Opaque
data:
  service-parameter: STVpV1dHOWtGWmNiVE85bkdVT3kxOWNNeVJoZ0QyWlB0Z2laRTQyWVM2SkkxRFlmUG9RTUZ4Z1NteHVLMnVxc1F0ZjVIeGJtUmhoTE82cFJlMmFWOUE9PQ==
  defender-ca.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIRENDQWdTZ0F3SUJBZ0lRWHh2SlZSSGNDVmVlZ05tTWxRMDRyREFOQmdrcWhraUc5dzBCQVFzRkFEQW8KTVJJd0VBWURWUVFLRXdsVWQybHpkR3h2WTJzeEVqQVFCZ05WQkFNVENWUjNhWE4wYkc5amF6QWVGdzB5TWpBNQpNRFF3TmpJeU1EQmFGdzB5TlRBNU1ETXdOakl5TURCYU1DZ3hFakFRQmdOVkJBb1RDVlIzYVhOMGJHOWphekVTCk1CQUdBMVVFQXhNSlZIZHBjM1JzYjJOck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXA5ZkxOMXFWakJKdFZBQUpESzhtUk9Sb29ZSktBK3FGamRwRGcwY2tVSUJWNDdYT2FOZE9wTCtlcHVvdApJUnlIWTNqVmx4SExMR05qR2FVZkRrbFRseDdjZVNlWDQ2ZUZ3RzRYaU1nZnptaG9TbnBrSEhGZFBNYm5NRlQxClV1UUEwaXNaSk5Qd2tYZmc1by94YlNBNmo5TFVFV0pOekN1eUNmS0EydUhaNmdDSU54OXkxeEtpSFFDT2ZUYVAKNWcvaEc5ZTlCOHJzRnJKUnFTc2lrUU8xTlRBM3ZMWGtYWXFuK3ZDdThOVUJNWWdkYzk5a2g2RGpNeUJ5QmdmawpCbjZYTHcxQ21ZcndsbHpjMHFYSE5aNDJ6WUZBNXhqZFh3SytHUERlL21VbmZLQTUvS1lzbVZkc2JiZ3pKcDdqCjhlN25obmtKMEN6Rmk1ejloUkxNWnpWZ093SURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXF3d0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVV1Z0RHVnRPSzVZK2xNZXZKY0p5MHpxdzFjcE13RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJVnpRdjFSQ05UemNrK3F6anBIcy9JVXAyZzc3SUhUK21Hb2Z5OEU5OFNpCnBlbFprQ3QrOCtBOGIwM08ra2QzOUQ1VVkxbFZRUHJjelM3MVppQ1ZkYllMeGwrUDNDK0lYYTZBNGpKYlVFeGoKNU5CT0tjN3NlTkdwM284aE0wdGVIWGVzYWFhZEtsend5NmZGb1ptSmI5Z3l6SzVpd1RSdEJ5amkxS0FCMHBPRwpYK3luUStIRXZQZEpITlNSdERNbTIxM2NFaWNhb0xETzBib0FIaUcvekd3RTk2OE1uYzcyWWZKMWZrZ2lmSzVJCmYxdnlQRlB6M08rQVAvallidFZIYnFiYmJyWnhWeENaQU14WWlMeW9FUVNjVDBWamJuNDZ2SHF0QXZYS2pkNGkKMVJRWlkySmNYT25Rd2VUblRaMmFzM3NjMlp1R05GbWY0Q0Q2eDkxRU1BST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  defender-client-cert.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURQRENDQWlTZ0F3SUJBZ0lSQUx1THQrcnhROGdUQ01qbnFuM013WTh3RFFZSktvWklodmNOQVFFTEJRQXcKS0RFU01CQUdBMVVFQ2hNSlZIZHBjM1JzYjJOck1SSXdFQVlEVlFRREV3bFVkMmx6ZEd4dlkyc3dIaGNOTWpJdwpPVEEwTURZeU1qQXdXaGNOTWpVd09UQXpNRFl5TWpBd1dqQW9NUkl3RUFZRFZRUUtFd2xVZDJsemRHeHZZMnN4CkVqQVFCZ05WQkFNVENXeHZZMkZzYUc5emREQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0MKZ2dFQkFPUG9ialljSklwakkvcmdta3dzK0Nsb1JVdFIzNjhoZTlsQnBvWitFRGsvS011K01NcmJ5ZlV5aW5wMwo2UnZqTGZlb1ZVWmFIRy9uUUxta3RNS0tyTXJCajY4WHlINDViR1R6UXJuN3htV0lUbUk2SGJmWVk0dS9ZZ0tkCjZXUzlsK0NhckQrSk9SUGN5TEtydHd1TFdxMWVWYUJFWE9STEpUaklGUm9mNC8wKzFpUFFMcnNBckpDWWY5Y2MKVitONDFENTZIVGxCb2RnRkVXMjVkaHRFbTJVamVHcVljcmhvL2VTcU5FMm1MbC9UTjl2ZXRmajBRRHJaeEpIWAp2bENXZkxIenRVN0FueERwZVYxWC9JcnFaQVFybWxzc2RlVWgyUFowaE9QS2M2ZFpDdmpSRll2SDM3REFsYk1mCjBjOGlCSXdlUWpCdXBXbEh4akUrazBnVlVpa0NBd0VBQWFOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdlQU1CTUcKQTFVZEpRUU1NQW9HQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVdWdERwpWdE9LNVkrbE1ldkpjSnkwenF3MWNwTXdDUVlGS2dRQkFnY0VBREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBCk9majdzN0ZLQ2Q1YXVzTlBjR3dpTXBLaHhNWnNaOHZSUkpUc0lIRTA2RWp3cDd2ZE1JRVlNM0dHTkhmV05ha08KcFRTb3FkQlZHTEVIVWZkcktnVXA1V0NlZWpkZ1hVdTJmZDhTQ1NQZ1JLV0NtSDBaZzVOV3NZWVVHZ0V0Ty9kOQorSHRQNGlESWdmaElkTUEvcHJNM2RhVnY2UUh6aGlwU1BwV2luTkpQZS8wcUtVZ2N3VENxUStldFhRcW5CWkw3CkFDUU5pdzdaaG1KWGwxUjBLTzliMWUwWXFrNEFmNEc3cUpVWUVVblAxWVNpWlRrVlhETGplTWpnOFd4aFJxRUcKM0RqMldDRFR4VjN2OGk2STFuaG40QzRJYXIvYVdHeHhhVmdyQzhuSUsybVRHVmNqdnRIVXFRSEdRWnkxNmtRdApmTUg5eThRU0l1b2R3YWNuQ1RJZyt3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  defender-client-key.pem: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpQcm9jLVR5cGU6IDQsRU5DUllQVEVECkRFSy1JbmZvOiBBRVMtMjU2LUNCQyxhN2JiOWE1OWE3YTE2OGE5ODA0MzI4NDRjZThlZGQzZQoKUXZwZUtTNUIrb1RWV1piMEVpTzIzL1c4T2k0T3JTQy96b25HdWo5MDBBZk1YTFk1SGM5S2Q5aXczT3RkMlVXQgpoa3lQd2lCTzc1OFA1ZG5pK2FTZ0xBR1h4OExlQVg4YU9qUTc4Um9NR3FlQkM2QXhQWUVMNDR6VDFJdWcvZkt5Cm1IaHVkSWo4MlpuZGdjNTNhUkVndkJ4emRkTmlld1JvTWFrNDdvUWFLNWNnbGkzTDc4MWFmRzRiaHp2MVUva00KS0FIUFpoQ2hIdS9hQnhWa2dFKzlhaWRxd0E2MkxRTzMvZjQzRU11dXNhbG5GVkN6bHJNdEllSDF0YVJyYlZZdwpzZkpkREwyUEd3ZUJHYmxZZFpSWWx6U1hmellHVFE1aU03eTBqYlVqdzNlNEduQXhrSldndE92djBmc0QxQ3MrCmc2LzljeXZPQTlUeFFpK3lDS1F1amRrdXc4aEF0L3R2b3hTV1pjRGZLK1g5QVFHMjRJSkM1ZlNVeGpXOExwRjAKajJ5SnljUEZtVFRQd2VmbnVOK1labUJENU5uWE5seGN0amdLaUROanFEWHptV3lHV3BZTGlNWmlHTUlpWldSQwpMSUJ1QVBiNFdlY2xEalVMb1ZaSWRHVlhZdm5iRWdEeDRCWmVJeUZaZm85Q0ZxTm1rRW5jNWliTnA5cTR2UHFCCldUYWY4WVVSUlgvYm5PMFdvZnRRWHFJZ1JOZkFLT0tFYzlzenE0WGwrWWdmcXlOREFYS0VobEk2L0k0aENudU8KRmxkN2JzcHcvVXR4TTZxNmhWOWF5c3Nub1lkdDVCQ1FRVk92aHRXeHVScjI0WG0yakQ5R08xNU9rMHRIL1E2bwpvczFEc0JqUWoyNjczSTk1MGJTa1ZuUUtDb1hKRFVnL3B4YzdBNDFXdnc3SWxTOVhsNXl6RHRKSzRPQnlIVXhWClJnRUUvZWlKdWhCZ2tQQ1VEcHJKSzB1L2xqNEU5SnJPTFVRNjh3d2xnWmFzbWxCbnlqa0o0QWswdm9jNlNUNEYKYU90Nis2SmVaVUpyZmd4V3hYUnBUTkRDTCsxTGV4VENXTlNCdUpFTnNrTTliakFDQ1pGaFczMEpOdC91bUN1aApkTEZtZjVrRDdGNW1lT0NPbkh2OFVBRWdvMmxYV2lnL2pQQ0Z3SEZaWE8yWlN0MW8weGx2K0kxSUlJOUxZeWxECk9paWY5YW5XZmFPMU40V3RFbXhJbTF1QXEwUnQzRUpOUEZMSzV1QjUzdkFUbE1rL2pmcXg0bjI3NHo5VzkrU3QKV1RGY2lya1hhRmgyQTZkTzlTaEJYcDU5UlV5Rjg0RC9oTEFOTVM3bTM0VTdkYmJZWVRCd1lTbFVsdFlvc013eApUQnVaV0EvS0ZuWTM2VUdRektVblJVc2lTd1R3cEhJM3FKdEFCano5YU00cTF0TGtCUnJvZ2E1L2JaTklyUWVUCk5uYy9wZzExcTNzN0F1YmhnVkxsQ3BWakhXUWxtcGcyMzVtL2laSFVqRkU0TTVrbW9vNzdJTUpBcms1MGVyUXgKYXNYT0JFdkN5aXpFWmF4Zy9KOURmaFFzTVRJRnZyTnNrOWwzbEppVFNOcTNSSnBSdEpVT3BNSWs4SDAzMUxteQpvWW5GaHBNdGdIWTVRMWplbjQxdmpnaCtjc01tQnp5eDUxS3Q4TnFLcU5rWlYvU3NIU3orZkdUOWYwNkp1MWpRCml0MG9mZ2wwWUo5Umdza3NrcHNKOEdrQ2w2M3RIMHR2aEI5TDVFU2wyYW03M0IxNW9VbDQyOGFZNU9LeXRNbGgKNDQ5TlZFcWYrVTd6dmpKUmRaRUVwZ0VhOXdldExCc2NhZlovWnNWK1dVbXZRZXNzdnpKek9vTzBBMUs4QWRVcApPWit1TkRuTzZUb1d4ZW9DNlBrV05ldEU5VlN4R0JDcXFMc2lqZ1dhWGdiTktvMnJBSnRxeVJWaGhGVkZXeHJGCllpV1BJY3ZNUEl4Ukw2b0lGOERqN1J6aWsrbWtQbG1NcVdlcjRVWm0wUGt3QWNqa1RZSmhVd1lBV1JxU1V4NHAKRGNHdkdRb2FEMklRTExXWHdsS3VEVFpWbmRic2R4VmRYb2NISDZkbUhCenlaa0tkWXFiWXRrNVYzMHFLOTd6UAotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
  admission-cert.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lSQUxjZXRTU1g3aklhS1U4anByUlBJdHN3RFFZSktvWklodmNOQVFFTEJRQXcKS0RFU01CQUdBMVVFQ2hNSlZIZHBjM1JzYjJOck1SSXdFQVlEVlFRREV3bFVkMmx6ZEd4dlkyc3dIaGNOTWpJdwpPVEExTURVMU1EQXdXaGNOTWpVd09UQTBNRFUxTURBd1dqQVVNUkl3RUFZRFZRUUtFd2xVZDJsemRHeHZZMnN3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNWK3hqKzdFbGZZQUtuVFNPaFVvYkYKd0JPb1ZQeStYZEswQy9GRklBbzI4T3pjbXZWMXBOd1RWYVlMWlFRdkd5dFBzNGZROTRnejNDeWZzNkMvMlcxaApOaTFrNjRKMWFwM1pwa2lmem5kbkprUURFd052U3dpMXhzN3d2ellrbDExa1RMcVhiUm85YVU5VXFiR09LQmc4ClVCcG9yakZ2eG1lajRmbGMxZjdYRVB1dlZMWXFsV0djY0FXTS80UjFZeURyNHJlQTl6UkdieEtRTktnVEdTSUEKVkdiTml1TkFBdjZvMWl3TGdNMkZyWTBlK3J6bFZ1cGZSckdmWU8vUjdrMHhMOVBjaGpVcmV2WHI1N0JkVHc5RAowKytiZ01GMkp0Mk9wYVZtK00xaWxaWE5DTmJTQkpwNmh0WWhmRWs0NS82RXY0Y0oxMUZmK3IxeUs0YncrVmFWCkFnTUJBQUdqZ1lRd2dZRXdEZ1lEVlIwUEFRSC9CQVFEQWdPb01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUMKQmdnckJnRUZCUWNEQVRBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZEl3UVlNQmFBRkxvQXhsYlRpdVdQcFRIcgp5WENjdE02c05YS1RNQ0VHQTFVZEVRUWFNQmlDRm1SbFptVnVaR1Z5TG5SM2FYTjBiRzlqYXk1emRtTXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQURqeWhNKytRTGpVdUowZW41dnZlU3k4em1rVUx2ZEdVV1V5OHdzRDlQVE4KTzdaY0xUWDQxa2gxOXhnbTNpcURHbkhiY0lRdXgrbGVGNTYvQkxJQlQzWS9Wb1Y2cUFpY2FhS2JmVzhNemczRQp6cEJMRk9WT01jc25nT0pMeHBDeXd1UmNLUUcxb3dYd3JSR1c4S0Z3dndHcVRLdzNKNUM5Uk8rYTdsWGdWMWxkCjRZcUR1OVpSWU9lb3pMZmJuY3IxSEhxS2hxcVBTSlk5QkpPempqb1k0OEpuQzlNYnl0bjNJZ2xYQU1MMFBIWlgKVXNJTm5CRVNLSERQM01ncndnOUVPZkNzY0ZPU3BaZHlKWk1iUnhqblZzRVhSbjFhWnJmTllQOVl3MUN4Z29tYgplQldubFRIbUkyTTVoNGhndkkxZnBiLzdNVUJHUFN5eXMzZ2tsdk56UE9RPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  admission-key.pem: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpQcm9jLVR5cGU6IDQsRU5DUllQVEVECkRFSy1JbmZvOiBBRVMtMjU2LUNCQywyYzUyNTVkNjkzNjA1Yzg1MzJiNjc1ZGJmNTkzOWRhNgoKaDh5SUM4MU8xRFFmWkQ1K2VoanpPNjByYzJyTGhxOFJZc1FQUjY4by85d08xK0o0ZlpCYlJUNEhmSkZrTWRSQQpNWDk4Q1MzT0ZEdldnc094ei9NTjRzTHJnK0lLMUIxVTRETk1tZXpsZy9VUlJ3UlpMRXd2RUpMVnhPZk9XUGYzCnd4bkNxMDBIWDBMMy9PL0o5ZE9DWUxUaVNiSFBKWkVhK25zUCtiWmlWU0xxc2JRZ0x1TXFrSHJXeS8vcFlGWkMKVE1YTzExU1R3cHBxcHVmdWE5QlZIMVZvVGtjSnVPQ1JoSUJoeXVkMW8vR0NPV1NOQkNVbUc4WW1mR1VyTEFHaQphUHMwMGl5S0JsbW41YWRvaUdrN2VmNGhFak5FRjR3anBrRG1CbWtFbnZXTGdoa0JWLzgxYzdISTRvQzB0c0tkCjlNVFlId3ZTcnN4OUI2amxKWS9nTWIyVXNWeU82M0dCOHl4WjJxTTRhRGZXM3FaMW9VczVycFpVZng1VHBQNy8KZFNUak1aR21TbEhPdTRabHc2Ykpzb1FobEdSNXhSN293NUE5Wjlxd3p4REl0SG02WEw5TnpWSXZQTE5HWDJlcgpwNjYrZkxjanl3cGtvSnUxeXFDQktNdWw5Z1RUWXFETXpITHNOSiswR2IrM0wyOTc4RDJ1ZExEVlduN01sT3pVCnk1Z1BLNWJXbmxHTVJRR2JrYisyZkJJSGtsNVk4OW1vODEwQ2pJeCs4NUVsaWd6R2VrOGdQTU5NK21kbnh2bHoKT0RLVTZoTUVOTW83M1U4aWhGMkt3UGgxaVQ2Rk40ck5rZUNJWEdWcTgxbEhKUG5jTGFNWHZaaXJCZXM4OUdjbwp3NWlpdjJ1M2wrbjZkMFUweFZFSXAwaEs2TWpKVkxCRXRTbmpyb29RZm5EbWFobHpmZVB4T2t4dW4vL01Uc3BlCjZFZ3Fqei84L3RiVGM3cHgyY2hQVUhBTUV4NDhEY1dWRk91ZmwvT0l5bzRTbEg0cnJUcGdqVXVUelZsTlhkR3EKQ0V4c000S2p4TG1aRUhJQzVFTlNqSXNETlBFa1kyM1BhQnRWZTNENzdLQ2ErS1dVTzhrd2ZEZ09ZaDZrT0NFQwpHaHp0d09ZZ2NoMjZSekdYNXVWMklPUkFZc3F2dk9ETEp4YVFVNzJsZ3F6M213UzhDYlgrZWJSNERTU3lrUkZqCmRCY00zVEg2dUFScWRLUWNBOFRaMXA0L1lZb2x6RlRZWldvYktQVEtzcUw0YzVPamlXVXhWUTl0WTk4VDMzTG0KV2llTHpmQnV1U2ZtRGd5OHRYcXFhZmROaG5CNWxZU2EzNjNDQjg4ZDJlSDFwS1hVdGxBQkFYV2FFN082c0U0awpSYUFkMHB3cGoybVRDdlp6QTd5UzFPSS9SVlZuMEJnZlFhY3J1ZGorQlovdytnMG1tbS93TlVTMm5TS3MzaFdXCnFhd0RKSE5CZlFuNTRUWVBuN0FzNjFERHZhM1UrMUF4VDdUNW43T0tIeG0vKzkvb3hzQVVtaEdnYjl2VDRsSEEKbEhMek5rTmJvUlRMUFdiWHpFZ056VVo5bkdxRm9MNWkwNk96ZnZ1Ukp5d3lhM0lQTWdYQVhlcktTSjZSWFZXZAp6aDFxZEFCV2tlU1ZCcjFQT0pyR0d6QjNxZzhCZzlhTGZHeFlsOEFSN1U2emJLeklCSWxCL0pIYkZIdkZmbWZ1CkVBalVYTEVwTlhlTDRSbHBGbDdaSE9uMHkrSDFhU1M0eDlWZEpEa1VNY3VMQVpkNGlkZHhDamsxTVQ4QjFBQTMKOTJCOWRtNUQyZ3lKaGg0SjlMTUtOZFR2WDEvM0FkeHp2dDlJek5HNCszampyZGNqSG1xZEl6RG1VQnZCOEtBcwpxamg0VWVIZ053SEdtVS8wVnJock5VMFBvb3d6WVRnV0JWUjZKVzluSDNnbE1GWTgzYTdmQWR2b1NGbEZSclkvCkFWZHk2b1c0VWF1NnBtdWpWOEEyRlU5V0Z0dklJaDBBL3lmQTRWUG1lYzFYZENWUGxyelQrNDBTYjBKR0FpSkcKZUJvdWZxeUlWZ2JDM3RFcDZzdjhZUFE5Rzg3emxKcGpyV29laEI4TmFFcXU0eDd3ZU5iYjd1MHd5Tk90NnFHagotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=

---
apiVersion: v1
kind: ServiceAccount # Service Account is used for managing security context constraints policies in Openshift (SCC)
metadata:
  name: twistlock-service
  namespace: twistlock
secrets:
- name: twistlock-secrets
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: twistlock-defender-ds
  namespace: twistlock
spec:
  selector:
    matchLabels:
      app: twistlock-defender
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/twistlock-defender: unconfined
      labels:
        app: twistlock-defender
    spec:
      serviceAccountName: twistlock-service
      restartPolicy: Always
      containers:
      - name: twistlock-defender
        image: registry-auth.twistlock.com/tw_j0x0r0d5pyayln0jaik1duc0zd8hq4r9/twistlock/defender:defender_22_06_202
        volumeMounts:
        - name: data-folder
          mountPath: "/var/lib/twistlock"
        - name: certificates # Setting the certificates mount after data-folder since it is nested and was overridden in CRI based GKE cluster
          mountPath: "/var/lib/twistlock/certificates"
        - name: docker-sock-folder
          mountPath: "/var/vcap/sys/run/containerd"
        - name: passwd
          mountPath: "/etc/passwd"
          readOnly: true
        - name: syslog-socket
          mountPath: "/dev/log"
        - name: cri-data
          mountPath: /var/lib/containers
        - name: runc-proxy-sock-folder
          mountPath: "/run"
        env:
        - name: WS_ADDRESS
          value: wss://104.198.214.125:8084
        - name: DEFENDER_TYPE
          value: cri
        - name: DEFENDER_LISTENER_TYPE
          value: "none"
        - name: LOG_PROD
          value: "true"
        - name: SYSTEMD_ENABLED
          value: "false"
        - name: DOCKER_CLIENT_ADDRESS
          value: "/var/vcap/sys/run/containerd/containerd.sock"
        - name: DEFENDER_CLUSTER_ID
          value: "4f7d10b1-f1cf-8308-151b-b0f5747840e8"
        - name: DEFENDER_CLUSTER
          value: "TKGI-1-14-2-carlos"
        - name: MONITOR_SERVICE_ACCOUNTS
          value: "true"
        - name: MONITOR_ISTIO
          value: "false"
        - name: COLLECT_POD_LABELS
          value: "false"
        - name: INSTALL_BUNDLE
          value: "eyJzZWNyZXRzIjp7fSwiZ2xvYmFsUHJveHlPcHQiOnsiaHR0cFByb3h5IjoiIiwibm9Qcm94eSI6IiIsImNhIjoiIiwidXNlciI6IiIsInBhc3N3b3JkIjp7ImVuY3J5cHRlZCI6IiJ9fSwibWljcm9zZWdDb21wYXRpYmxlIjpmYWxzZX0="
        - name: HOST_CUSTOM_COMPLIANCE_ENABLED
          value: "true"
        - name: CLOUD_HOSTNAME_ENABLED
          value: "false"
        securityContext:
          readOnlyRootFilesystem: true
          privileged: false
          capabilities:
            add:
            - NET_ADMIN  # Required for process monitoring
            - NET_RAW    # Required for iptables (CNNF, runtime DNS, WAAS). See: https://bugzilla.redhat.com/show_bug.cgi?id=1895032
            - SYS_ADMIN  # Required for filesystem monitoring
            - SYS_PTRACE # Required for local audit monitoring
            - SYS_CHROOT # Required for changing mount namespace using setns
            - MKNOD      # A capability to create special files using mknod(2), used by docker-less registry scanning
            - SETFCAP    # A capability to set file capabilities, used by docker-less registry scanning
            - IPC_LOCK   # Required for perf events monitoring, allowing to ignore memory lock limits
        resources: # See: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#how-pods-with-resource-requests-are-scheduled
          limits:
            memory: "512Mi"
            cpu: "900m"
          requests:
            cpu: "256m"
      volumes:
      - name: certificates
        secret:
          secretName: twistlock-secrets
          defaultMode: 256
      - name: syslog-socket
        hostPath:
          path: "/dev/log"
      - name: data-folder
        hostPath:
          path: "/var/lib/twistlock"
      - name: passwd
        hostPath:
          path: "/etc/passwd"
      - name: docker-sock-folder
        hostPath:
          path: "/var/vcap/sys/run/containerd"
      - name: cri-data
        hostPath:
          path: /var/lib/containers
      - name: runc-proxy-sock-folder
        hostPath:
          path: "/run"
      hostPID: true
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
---
apiVersion: v1
kind: Service # Expose the Defender as admission controller. Remark: by default, Defender will not listen on the service port
metadata:
  name: defender
  namespace: twistlock
  labels:
    app: twistlock-defender
spec:
  ports:
  - port: 443
    targetPort: 9998
  selector:
    app: twistlock-defender