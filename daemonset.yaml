
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: twistlock-view
rules:
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["roles", "rolebindings", "clusterroles", "clusterrolebindings"] # Allow Defenders to list RBAC resources
  verbs: ["list"]
---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: twistlock-view-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: twistlock-view
subjects:
- apiGroup:
  kind: ServiceAccount
  name: twistlock-service
  namespace: twistlock
---

---
apiVersion: v1
kind: Secret
metadata:
  name: twistlock-secrets
  namespace: twistlock
type: Opaque
data:
  service-parameter: bE9CME9kYytUSXVsZzFqQkNSN050VEVNaUFQejFkKzUwWjFLK1hJeE0rR21qaTA5UDNNam8yTSsyd3daMmc5N3ZaUVF0V2MxeEdMNkxzZFJ2Z2g1d3c9PQ==
  defender-ca.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIRENDQWdTZ0F3SUJBZ0lRVHVuek9LcDVzZENBY1hZaGlYR0pwREFOQmdrcWhraUc5dzBCQVFzRkFEQW8KTVJJd0VBWURWUVFLRXdsVWQybHpkR3h2WTJzeEVqQVFCZ05WQkFNVENWUjNhWE4wYkc5amF6QWVGdzB5TWpBMwpNVEF4TlRVM01EQmFGdzB5TlRBM01Ea3hOVFUzTURCYU1DZ3hFakFRQmdOVkJBb1RDVlIzYVhOMGJHOWphekVTCk1CQUdBMVVFQXhNSlZIZHBjM1JzYjJOck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXQ3MWdkTUl6SEZTdFVjQkFDQkY3UUtPRlN3MC84ZVFiYzdBMDJzemlwTGxyUHU3cXg4MFBOT3I4Q1owdQpnVjAwSDRPQmt1dU9yYTZyMGtKa2xNdkFidFllR0pUSzVpYi9NZ1Z5MTU5MVdHQVJGQlBQejhvckNLa2syZTRKCjVrUWpscWYrVjFZYTdHbXZrWjdQNktSYytZcm9SeEtRYmh1ZW5HK3ZUbEl5UWV4RmJOdFdBSTY5UUdBdThBVWYKK2NNdW1VUE9KcFpIM0U0aHBGK29FRUhCbzRrODVBL2N6eUNEd3g0WU5jb1drTkk3Y1FCbmdIQnNhQTdHNm9PNgpwNmdZZzBIMG9XY1BJQWpyMHZVZktnV043Yk4yb1FOeEJhQ2p2dTgySjVKNnFjaitQeUhrSjBGL2UxeTBCbk5OCm9EeEJsRHVxeGoyd3crQWFlQ09WbzN5VG9RSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXF3d0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVwSUdvYzJOVWNDeXdvSndpUjJvRi9rNS82S3d3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFMVVQ4K3dEN2JmRVl0OHVsVC8vK2dZK05rTk80NzJIbXc1Zm51VzZyaXNkClJnMGdGWlBoemZ5bnhhN1BJRlRyOElWSGJ2Mko4NXMxMmxhaGM0VW5yYmVtWUtnMTFmSGluQ0dlc0NwTTRkNHgKSFBkS3JNYTVmY0xWMU92dkRsTjFtNURwL0VDY0kwQmNCV1RTYmFBRE1VQVh6aGRvSlhTZkpJeVNmeE9GeDFlVgo3VnFNOURWa1J3UHgwTDZnTVUzN0FTbVRUOFdXQnJ5eUs5dGtoZTIxVlV1VzRFc1ZKZGs0TnVldGQxcHVWWlE3Cmg4alMzdlZQM0dlaUlEaEFuSlVSOUZUUUlQMWZvT2VyS0lNaFBqY2hNYlJiNUgvWmdoZEdJR1ZaY3MvR2xWVWoKME4wN1NwRlpESHBWT0lJZythd2FWS2Q0cXhqSlBXRHByN1RneFEyOW44UT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  defender-client-cert.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURQRENDQWlTZ0F3SUJBZ0lSQU92algxbWtoeDJ6UjIrRkd3OUZ6ZTR3RFFZSktvWklodmNOQVFFTEJRQXcKS0RFU01CQUdBMVVFQ2hNSlZIZHBjM1JzYjJOck1SSXdFQVlEVlFRREV3bFVkMmx6ZEd4dlkyc3dIaGNOTWpJdwpOekV3TVRVMU56QXdXaGNOTWpVd056QTVNVFUxTnpBd1dqQW9NUkl3RUFZRFZRUUtFd2xVZDJsemRHeHZZMnN4CkVqQVFCZ05WQkFNVENXeHZZMkZzYUc5emREQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0MKZ2dFQkFOUkgwelF2R2NGVVpEaWlPeFIySndQM25rdUFRWVAvRU01WERocEIxOXdLVWZXdkM2TVVZV1IzaDJaUgpxbWllZUUrQ1BXWEJYUDdORWEzZ0JheStRUW5tTGZHci9RVWlkWFRKUWQ5TnFhZVVEMWdhMmhKS1l6ZENyb2RYCjZQRHV4ek54MnFJQ2xwLzFjY2MybjgwNktodDBKU2FFYUlnTkxybnB4SHpESnhxYi92a1ErTWJ1TThuV0tOSEcKYWhPSGF1RStrNE5VOHg2dWpiZVJPSXNkWmN3cVNMRlBaMytlY3JUdjBOczVNOWJVeitOem9kVktQb2hkM2ZIeQpmenJ1UEcvVFZCbUxKNE1lV2ZwbEVXcnVpQllPdFlHa1hqQXRNa29QRC9DbkZNUmdtRGd0Ynl4STZtQXFHbTFZCjhWNGsyMEFmSGUxYVBNMkt0T2J1UCticnF6c0NBd0VBQWFOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdlQU1CTUcKQTFVZEpRUU1NQW9HQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVcElHbwpjMk5VY0N5d29Kd2lSMm9GL2s1LzZLd3dDUVlGS2dRQkFnY0VBREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBClV2M3RPUHQxMXJCR1ZpV1QzTlExbldpNXF1aXc1WE5Bckl5c1BzOXVyYno0ZDZGY3VyRzhDaDFXTSsweTIzWWEKbWs4NEJ6NUpLdDhEUjR6ejI1WGVkRDRyRmNaeUtMc2grYVJLdHpESEtOdFhEYTM4aGtodDNDZUxSYUliay9wRwo5MWVrS1JwNEhiem1TZllzSlhzeFlpa1ZtdEsyd3JDTHdJQzJDb3hKeUxYek9JcWlRaDA0WGl2elFydlBHdlFUClFqd0VSM05UbXVXSGgrUkZGalVqRWZGY1dYcGpOdmlXUmErSDMzME9OcjRyakVyN1VjOWdQSXdjbFZaTUlMakQKS0lXWFpNNWJzTnhHV2RNNy9NcUJLZjhNZ0RNUk5CdkdaY1RIdkZYY1plalFBbERUNUFneXM1cHdndHhVYlRmYwppVEx1OUZhcDVtcXVmK1hWRUlZYU1nPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  defender-client-key.pem: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpQcm9jLVR5cGU6IDQsRU5DUllQVEVECkRFSy1JbmZvOiBBRVMtMjU2LUNCQyw2ZjVkOWIxNTBlMGJhNzc5Y2QyYWJkMWUzOTUzMDYzYgoKT29sNzJXcERBTy9rNHhvTFBKUW9aTXNsZElmY3hQWWplc2tSTGJ5UnR5eGp4S3VLTk92dWk0RzN2TlRUVnpnTQozNk13OGlqc0FueERkVHdxOHpxelhhNlFhN3BEcjZscWhqS0ovSGZUajFOWjVmZkVWVmZZeDU1TGRpUzk2Q2lwCjA3bWVwZEM1ZFVFbThMalB6V05yY0RaSjBsaG9EMGs0TmQ5R3gvaE5YVWJ3TlljSWF4UWE3RWpPTVNCRmlLVzIKQkdrcmpPcXMzQkNNTjFJUkhBajZhanByY1ZKcWROWmNrWlFVSTVFVG9seFc0NEVxb2RROWxnYkxEcERxVHZUQwpKQUIzUkVrZ1ppc3RiTDhOUEp1TTV3TWp1TmxobXMyZW1QQnB3bjg0TVJPUUZnYldDZjAzMHI0dkFLMlRMZG82Cm14U25lbnIrR216MTV5bTNEalNBa2lkS0QzNkVwaExDTkNneU5LazBFektDampoMHY3bTkxY202UDg1MnRyZEYKODBLSWJ1Y2w5S2RCMWZ2c3pjV3RrbjRtOTVWUUxEUC9aMjNvQzB6TTlKOUsrUm1pRTNCM0h3VHU1c1drcVRVdwpyNUt2VzZJL292T2VCbG96aFdjNDE3emZFbU02WXJSOUtBWG13azYrWDlBRVJjc2FlS1g3WFUzRGFKdU1mSXdiCmhuQy9TL0pTRzdqeTRKYXpaSEtOYUJFdldDUGlWOEczdGNvdmIwSjNxTjRPbWtPa1diTFlhWVVGRmR6dDhlOVEKN2ZtdUd5OEl0UU1BaWtiQ211RWlWMmJVNi9VZXZaNE5RL3BKeG9mcjkyVUlidElYL1N1UGYrK25mQlVqdHF3ZQpFQnhSL21HUzRJa2Job2lqbUtCZXo0SU9HcnBHaElWaGRQak9HZ0hiTVE5V1JUUUtwcmRBNEJXaXVNMGpRNFlYCitRNEVGb3NESUlmWjJabVV6S0NUekhRWkN0ZlJQY2lyYXI2d283eWZhSml1MGZ4SElBUTRrZDhOc2hVMzlCOTAKM2R6OTVKMnRmNml5MXpxRDR0aUZSOUEySWRGeWxFZVM4TXk5Q092bUZvRXNjRjViYXliaTJCWk5SRTNGMVMxRwoxNERiSUcxalEwVGdsSzNDaHowdjhWQnVqdzJvZ3VNWUxTSlB3T2NxWjBvcU9lTSt4Qzlzd2VOZFlPQWVQNXdHClUwejAra2ZVeS9UY3ZlaGtVSnJ5dlo2L1ptaW9OZ0p5dkNDdkVCMkhPUmpQeUIxNjNWUUtBbXQ2aThmbHFmMXkKdnhxcmtFOWNSNlZkQ0Z3ZnNCNldoRTd3ZzFGZ1AvbDVZZmVCSDVNVUhkQ3daZkdUTEdDV3ZDMVdVaVFCdzg4VwpsTG5wNnBmSU9QaWVzVUpSTXI3dXcxN25QclhZMnhiaDV5WEVUVmV6Q2lEanhDWTRvTlRqa1JzTTFROTkrc2VXCmxLNUlYc01HQllXZXBWblQ1UXgyMW1vQWUwRnd1ZGtHYmFnZlNBMzY5eGR1TVJQSDFBOHh6YWtveXFTVDUrcnIKdlk5RUp4RENScHhHbzNjcWRQMUQ0d0MxSFVha3dqdCtzTGtXbXBRUGlMMkVnbFNHNGZLOGg0Y2FDaHIrOSthNgo3MVc2aEFva0xNMm9ZblhnMFlyRVBVWWFXV0NSRGx0cy96WGFvUm1JY0gxNHpGdVFaZE8vbmlYWm1BWktjdmdRClN1WC9SZXdWdUNrQzJrWmJubkZUYXppWlpsbDZsVTVRdGJVVmI3OG1WMzJRek5uMGxBamdqT2g0cmxOSnlPdGsKMHlPazZoMy9reTZwNVhsK2VPWmF1ZVlYQ0l2bG5nRVlHc1NZSjRSVVlhQXZXT1hZdkJKenNJZmc3M0RRcjE2NwptbldsZTcrUk45SWpRNE5WMUE2TWJwbGliZXY0SENzSCt3YWdNUzRINFNGdUZIME5FVWw5VFhiVzQ2ODE1ZlRvCkI4Y1ZxenFYUjN6b0lmeXpBNVViSkNXY1FXenFic3ZtTUowZ0duT3NwU0l2OWpVS3dhTDJxTHVLb3RoOVV5MFoKR21DUXltcUhBakovSWhmYUlrckRUeWw3b0oyNUtET3hFcW9SY2tsTlVsdERibnA1Zk96aTNldjZUVzF4ZGtSRAotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
  admission-cert.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTekNDQWpPZ0F3SUJBZ0lRRmpSKzFVRnNhRWdVZ0E3ZWNESjJIekFOQmdrcWhraUc5dzBCQVFzRkFEQW8KTVJJd0VBWURWUVFLRXdsVWQybHpkR3h2WTJzeEVqQVFCZ05WQkFNVENWUjNhWE4wYkc5amF6QWVGdzB5TWpBMwpNVEl4TVRBMU1EQmFGdzB5TlRBM01URXhNVEExTURCYU1CUXhFakFRQmdOVkJBb1RDVlIzYVhOMGJHOWphekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTWxsVTVNOGdwdnZwcFAyVkpzRTd1STIKUVgrL0d1cm0zWERXeFB3eXpuMXFJV0xDK0w5NGpjc0VhSlY4clJUOTdDY1NlSlRHUGNMMHZKUUN0UngwWjYvSQovUEFnc2FDZjZqbEJLR1pxTk5MalprVkVMSTg0OVZXVXVBN2dPZ3cyNzV5NVUvRUUwd2xRVy9FVUxxQUMrSWNCCkIxV1J3cXMxUDhMMnBBRFV1MHdJTDdMQy9sc2NDMlE4YTJFeGNBVG9OSHFmam8xa0Z2cEQ2c1ZCZGV2by9KcG0KK1ZIcU9HcnUzWm9udklyRFR6YlV6ekNJcE9iS2ZSVWQwTVUzbEZVWmYxTFF5ZDFDK1V6eFBoRUU4dGZaNDhhNAprZVBRcFJDeFA5YzJuNFhWVHY0cGFhSEh5RmtRUVE2WlFkZTBJS2Z1RXkyZGhjZnJ1Tk5VQjhWYVRKakZCdGNDCkF3RUFBYU9CaERDQmdUQU9CZ05WSFE4QkFmOEVCQU1DQTZnd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3SUcKQ0NzR0FRVUZCd01CTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVcElHb2MyTlVjQ3l3b0p3aQpSMm9GL2s1LzZLd3dJUVlEVlIwUkJCb3dHSUlXWkdWbVpXNWtaWEl1ZEhkcGMzUnNiMk5yTG5OMll6QU5CZ2txCmhraUc5dzBCQVFzRkFBT0NBUUVBajh1MmJ3ZW1lUHB0TGF4Ujg4QlpIMzdxT1pObEhrbGtCYzBJWmtwczZzOHYKU1RqaWszTzJ0VHpIVEgzQWNQT09LUEsvRUxyQ0dKcDZIaTFxQ1lYSmdCS3pwc1MzMlRNYzBsQ05mWEJzSjNOdAp1akJUcEVoR2k4RkcwTEVPaVFQUkdpUW9MZGhLVVI0RUJPYnc3cHVMMHhnTjVObzVUcWswMGdyM21uRXFNRUR0CmRYM2djMUVUaXRZS2s5VWVyMHZxOEJGd3I2SFFidVlGaDdlbnI0Q0tOVGZPS2U0cENyR3NEN0JyNDc0TDJvU0kKWlBWVVY2UXFLYWJ6c2xkSXh2bGZZYXMybjFPM0RjN1ROajB0cHdiaHRNemtBTVBKU0xjbTI3bTNFTS8vdWZOZQp2RkNrdm9XZWMvQlRjSFJHOTF3Qk9nc0Vldkpmd0s0K0x1NGFaczQrV2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  admission-key.pem: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpQcm9jLVR5cGU6IDQsRU5DUllQVEVECkRFSy1JbmZvOiBBRVMtMjU2LUNCQyw5ZmNhYjYwN2Q2MTI2YjhjN2I0ZmEyMzQ5MTM3YmEwNwoKMVZ3dWUzeWNPa2RrM3NydnRlc2lLbE5zMVROVHdxMWlTVVlXK2dTVldMUnBwR3BPU3g1N0srTXRHakdZRE9KNApleDBGT1Z3VVFmY3NXWi9DYk1jRUt4RE85RCsvWWZ4RmM0bjB6ZlJQQnR0QmZWWER0TmRvZEdFZ1oxQnBLLzdwCnNIWHM3Mm1Fc0JiVDlPdkpydmVvMGpld0V6VTlmSi9ZMFRQNmNodVFmU0wydGVVQlpUaXBqT0l3OUV2d0d5MHUKYVppeWU2N2NEajJGSkJuUUpGRWpJaUNrREJWOGV3VkRxanVzNDg2K0dFUmUxMnVBajcwUU8wTGM4Y2RwblNtOApicm9OL2ViYzJVSnR5QXhQTVdEUFBja21xUjRBRHJIVkhjcDZLMEFLblppMjBpeVhjdEZPa2hCWGRXMm1heHFCClFjWWlSS2VkM01YOUVFdGIzV0JleXZrd3ZnUFdlbHdSSGRSK29HNHpJcHcySDAvWGdpc2NkT3lCRG5LeXpyTk0KYVF0WWYwUWdHQ29Xby9WazkwVExxZk1qc29TQW5NamM3MlBYelNWcjEwU01kOXBZa3EzbzBTNkRzVXNYWEttYwpsSzJYYlptK0pkS1NxUVk5SWFoeGs4dlBUU3BmQTRCVFNjR2szUHJkbmVrczFFMUgzTWt6VUNJNDIxYjBjY2VRCndNQjd4d1pNOUEyZ0FWeTgyQmxQQ0NKWmhSMVBFdy9tQTBCQnUvNmhFQUVrVG5kZUNib0J0R0NucjgzOFM0T0EKYmFqNDBwTkNCbXpDMmpxUUdCVk5vTkRGQ2dXOFB1djNUdlNoVE9taHg5dVlpQm5UbVN2RStDOG1zYW9IbnU3QgpSUmdNMytDNkpkendFZmtiVFI2cnJYbU5KdVp4WnhvL0tlZjA4eDh2TUp2M1hpR2dYK0poZStWZzREZVBpNUMwClE4Yk1IVVpiMkFtbVdwODAzYkhVbTdYdWFBai9Yek5hU0JpeUM4WlVxVy9KN3B2azRkUVZlNlBGUVFNdDM1UDAKalc2c1JnQ1cyUXdhRGNuVkVUckhncHpvelZnSTRBc0QvVlBCZzhoTUJ2WkZyTlQzWXc4QXE3VXpHMnpFQ01zWApjTUI0Ryt5WlNHM1hLU2Y4dnhYYXR5b2JmVHdMTXhCNXBvRDI3dkVjN3hhVTFKYWR0Z1RCMWlqcURnN1EwMDhPCmxtQ0FDcjM1NXFOWDdBM3RQcE0xOXBvRmxncFhFWFgxN0RJN0x1SlNsTHVvQW5ocjJtcGZLL0RqNmxPalU1OHUKZUlrcHlvQmROU3lFWWs3RlBGWjliTFY4NDRKZ295RGlBZ1BZYzBlNXdjSHJ4eTRrQm10SzIrbHJhTnBhaGtmYgpoQmlMYW50RnZyOEVyRlpVMHVucWYxOEZsd2lUTFFoMHhrTExwVDB4YWN0MWdkV3lXeEZkSWhTRE1NWkl1TFRrClVnYXZENVlSZUtnQ3duVXNvMlZFQ0x3a1V0dkxCOTR2RWxZeXhNYVJsQWJIZ3RtSzNCbHRsY1o4RlcvUVh3OC8KSkoyVWVZcWtVOE92N1ZnVlNaWmU0UllKSzZILzFuemdJaVZxM1djNlhTN1BtMytCK1hnTzFLWnZHM3R3WkhObwpPNzRpSURnSmxGeWw3Vk5pTzljNE1tVXRtSENKNFRrVDc0NjNDMHlqNUt5QS9kVU9LNWlYZGRDVGhJV3Uxdm9TCmNCakN0QlNYTmdiSFNqYVlWbE1mVi9yTndTNWFTaFpXT2ljbm1VSmEwaUFZZHN5bjdQNVZ0Q0lrNDBLK014TmgKcU1sMStnODBpSHNseHJ4ZEpJVHJuQXF5NS9BREtxbkhOeDlDb01QeU1GNVFhakFCajdRY3ppT2d3bUJmb09xRwo3VmZldHJJTTFQaURFU2J6bitabEprQXlhOTZoSkViK2Q5YXVibTF1V0FsVnpPYUVqS0RWWWUwcW1iL3dQMkR4CkhwMGIvSzY3NzVYQVBKV1E1dHFxajEvcEpxUWd0ZWtCbHgyTks0U0QrQnBXU3N1Q1liQkYwTkt2WUtXMzMzZDgKV3BhOHFnbWxlSkYzMXlCTTZmY1p5dmRGaG1Zd3dBTXN0dEYzV1NTTy9FWW5RalQza05FWWMzcjVHZkdTbjNyMAotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=

---
apiVersion: v1
kind: ServiceAccount # Service Account is used for managing security context constraints policies in Openshift (SCC)
metadata:
  name: twistlock-service
  namespace: twistlock
secrets:
- name: twistlock-secrets
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: twistlock-defender-ds
  namespace: twistlock
spec:
  selector:
    matchLabels:
      app: twistlock-defender
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/twistlock-defender: unconfined
      labels:
        app: twistlock-defender
    spec:
      serviceAccountName: twistlock-service
      restartPolicy: Always
      containers:
      - name: twistlock-defender
        image: registry-auth.twistlock.com/tw_azerx0vvdzq3zesvzkdrbcdfp0tjutgj/twistlock/defender:defender_22_06_187
        volumeMounts:
        - name: data-folder
          mountPath: "/var/lib/twistlock"
        - name: certificates # Setting the certificates mount after data-folder since it is nested and was overridden in CRI based GKE cluster
          mountPath: "/var/lib/twistlock/certificates"
        - name: docker-sock-folder
          mountPath: "/var/vcap/sys/run/containerd"
        - name: passwd
          mountPath: "/etc/passwd"
          readOnly: true
        - name: syslog-socket
          mountPath: "/dev/log"
        - name: cri-data
          mountPath: /var/lib/containers
        - name: runc-proxy-sock-folder
          mountPath: "/run"
        env:
        - name: WS_ADDRESS
          value: wss://34.121.135.63:8084
        - name: DEFENDER_TYPE
          value: cri
        - name: DEFENDER_LISTENER_TYPE
          value: "none"
        - name: LOG_PROD
          value: "true"
        - name: SYSTEMD_ENABLED
          value: "false"
        - name: DOCKER_CLIENT_ADDRESS
          value: "/var/vcap/sys/run/containerd/containerd.sock"
        - name: DEFENDER_CLUSTER_ID
          value: "3984727f-9b09-b722-e8ca-a63793f5a2a7"
        - name: DEFENDER_CLUSTER
          value: "tkgm-ubuntu"
        - name: MONITOR_SERVICE_ACCOUNTS
          value: "true"
        - name: MONITOR_ISTIO
          value: "false"
        - name: COLLECT_POD_LABELS
          value: "false"
        - name: INSTALL_BUNDLE
          value: "eyJzZWNyZXRzIjp7fSwiZ2xvYmFsUHJveHlPcHQiOnsiaHR0cFByb3h5IjoiIiwibm9Qcm94eSI6IiIsImNhIjoiIiwidXNlciI6IiIsInBhc3N3b3JkIjp7ImVuY3J5cHRlZCI6IiJ9fSwibWljcm9zZWdDb21wYXRpYmxlIjpmYWxzZX0="
        - name: HOST_CUSTOM_COMPLIANCE_ENABLED
          value: "false"
        - name: CLOUD_HOSTNAME_ENABLED
          value: "false"
        securityContext:
          readOnlyRootFilesystem: true
          privileged: false
          capabilities:
            add:
            - NET_ADMIN  # Required for process monitoring
            - NET_RAW    # Required for iptables (CNNF, runtime DNS, WAAS). See: https://bugzilla.redhat.com/show_bug.cgi?id=1895032
            - SYS_ADMIN  # Required for filesystem monitoring
            - SYS_PTRACE # Required for local audit monitoring
            - SYS_CHROOT # Required for changing mount namespace using setns
            - MKNOD      # A capability to create special files using mknod(2), used by docker-less registry scanning
            - SETFCAP    # A capability to set file capabilities, used by docker-less registry scanning
            - IPC_LOCK   # Required for perf events monitoring, allowing to ignore memory lock limits
        resources: # See: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#how-pods-with-resource-requests-are-scheduled
          limits:
            memory: "512Mi"
            cpu: "900m"
          requests:
            cpu: "256m"
      volumes:
      - name: certificates
        secret:
          secretName: twistlock-secrets
          defaultMode: 256
      - name: syslog-socket
        hostPath:
          path: "/dev/log"
      - name: data-folder
        hostPath:
          path: "/var/lib/twistlock"
      - name: passwd
        hostPath:
          path: "/etc/passwd"
      - name: docker-sock-folder
        hostPath:
          path: "/var/vcap/sys/run/containerd"
      - name: cri-data
        hostPath:
          path: /var/lib/containers
      - name: runc-proxy-sock-folder
        hostPath:
          path: "/run"
      hostPID: true
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
---
apiVersion: v1
kind: Service # Expose the Defender as admission controller. Remark: by default, Defender will not listen on the service port
metadata:
  name: defender
  namespace: twistlock
  labels:
    app: twistlock-defender
spec:
  ports:
  - port: 443
    targetPort: 9998
  selector:
    app: twistlock-defender